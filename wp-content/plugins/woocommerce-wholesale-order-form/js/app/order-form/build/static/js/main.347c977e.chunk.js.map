{"version":3,"sources":["store/actions/orderFormActions.ts","helpers/dragDropItems.ts","store/actions/orderFormDataActions.ts","store/actions/productListActions.ts","components/FormHeaderFooter/Elements/SearchInput.tsx","components/FormHeaderFooter/Elements/CategoryFilter.tsx","components/FormHeaderFooter/Elements/OrderFormPagination.tsx","components/FormHeaderFooter/Elements/SearchButton.tsx","components/FormHeaderFooter/Elements/ClearFilters.tsx","components/FormHeaderFooter/Elements/AddSelectedProductsToCartButton.tsx","components/FormHeaderFooter/Elements/CartSubtotal.tsx","components/FormHeaderFooter/Elements/ProductCount.tsx","components/FormHeaderFooter/PrintItem.tsx","helpers/readableStyles.ts","components/FormHeaderFooter/DisplayItems.tsx","components/FormHeaderFooter/index.tsx","components/FormTable/Elements/AddToCartButton.tsx","components/FormTable/Elements/AddToCartCheckbox.tsx","components/FormTable/Elements/ComboVariations.tsx","components/FormTable/Elements/QuantityInput.tsx","components/FormTable/Elements/ShortDescription.tsx","components/FormTable/Elements/Price.tsx","components/FormTable/Elements/ProductModal/DisplayVariations.tsx","components/FormTable/Elements/ProductModal/AddToCart.tsx","components/FormTable/Elements/ProductModal/index.tsx","components/FormTable/Elements/ProductImage.tsx","components/FormTable/Elements/InStockAmount.tsx","components/FormTable/Elements/ProductSku.tsx","components/FormTable/Elements/ProductName.tsx","components/FormTable/PrintItem.tsx","components/FormTable/index.tsx","App.tsx","store/reducers/orderFormReducer.ts","store/reducers/orderFormDataReducer.ts","store/reducers/index.ts","store/sagas/orderFormSaga.ts","store/sagas/orderFormDataSaga.ts","store/sagas/productListSaga.ts","store/sagas/index.ts","store/index.ts","index.tsx"],"names":["EOrderFormActionTypes","dragAndDropItems","items","id","content","EOrderFormDataActionTypes","orderFormActions","payload","type","SET_FETCHING","FETCH_PRODUCTS","SET_APP_STATE","FETCH_CATEGORIES","SET_CATEGORIES","EProductListActionTypes","orderFormDataActions","FETCH_ORDER_FORM_DATA","SET_ORDER_FORM_DATA","SET_ORDER_FORM_PRODUCTS","SET_ORDER_FORM_PAGINATION","SET_PAGE_SELECTED_ALL","SET_ORDER_FORM_FILTERS","SET_ORDER_FORM_SELECTED_PRODUCTS_TO_ADD_CART","UPDATE_ORDER_FORM_SELECTED_PRODUCTS","SET_ORDER_FORM_CART_SUBTOTAL","productListActions","ADD_PRODUCT_TO_CART","ADD_PRODUCTS_TO_CART","setFormFilters","connect","store","orderFormData","filter","dispatch","actions","bindActionCreators","props","placeholder","styles","orderFormId","fetchProducts","submitOnEnter","searchInput","style","onChange","e","target","value","onPressEnter","preventDefault","selectedCategory","formFilters","search","category","active_page","searching","onTextEnter","orderForm","submitOnChange","categories","useState","selectedCat","setSelectedCat","treeData","undefined","forEach","cat","index","push","name","children","length","iterate","data","cat2","categoryName","selected","error","console","log","useEffect","showSearch","allowClear","className","treeDefaultExpandAll","width","val","OrderFormPagination","React","memo","current","total","parseInt","pageSize","pagination","SearchButton","buttonText","onClick","activePage","onFormSubmit","per_page","formPagination","sort_order","products","show_all","showAll","addProductsToCartAction","setCartSubtotal","formStyles","formSelectedProducts","Object","keys","form_settings","formSettings","successCB","args","added","successfully_added","productId","product","includes","productType","dangerouslySetInnerHTML","__html","productTitle","map","test","variationID","failed","failed_to_add","product_id","quantity","error_message","notification","message","description","size","bordered","dataSource","renderItem","item","Item","href","cart_url","marginTop","ShoppingCartOutlined","duration","fragments","cart_hash","event","CustomEvent","detail","document","body","dispatchEvent","cartSubtotal","cart_subtotal_markup","failCB","addToCartSelectedProducts","disabled","formCartSubtotal","ProductCount","productCount","total_products","getPropValue","properties","prop","PrintItem","productsPerPage","ClearFilters","displayItem","readableStyles","stylesCopy","DisplayItems","dataRows","display","gridGap","row","rowId","rowStyles","columns","key","flexDirection","col","colId","colStyles","readableColStyles","hasCustomWidth","indexOf","flex","margin","flexWrap","itemKey","printItemProps","height","formHeader","formFooter","section","position","attributes","wholesale_role","Options","addProductToCartAction","itemProps","itemId","variationId","variationName","formProducts","variationData","find","option","updateSelectedProducts","selectedAll","somethingChanged","setSelected","checked","setSelectedProductsToAddToCart","Option","Select","selectedVariation","setSelectedVariation","variations","variationsOptions","variation","selectProps","filterOption","notFoundContent","productID","join","setQuantity","min","defaultValue","short_description","productDescription","setProductDescription","price_html","priceHtml","setPriceHtml","wholesale_data","price","DisplayVariations","setVariationName","marginBottom","AddToCart","stock_quantity","marginRight","showModal","setShowModal","productName","setProductName","site_url","imageUrl","setImageUrl","shortDescription","setShortDescription","setDescription","extraProps","images","image","title","visible","onCancel","footer","xs","sm","md","lg","xl","src","shape","fontSize","url","setUrl","showPopup","modalProps","stockQuantity","setStockQuantity","stock_status","sku","productSku","setProductSku","AddToCartCheckbox","setSelectedAll","currentPage","setCurrentPage","setSomethingChanged","formTable","fetching","dataIndex","sorter","tableProps","loading","filters","order","sort_by","field","handleSorting","fetchCategories","fetchOrderFormData","postId","response","selected_category","OrderFormTitle","formTitle","post_status","InfoCircleOutlined","marginLeft","color","defaults","settings","cart_subtotal","loading_more","fetch_error_msg","show_search","reducers","combineReducers","state","action","SET_CART_SUBTOTAL","SET_CART_SUB_TOTAL","fetchVariations","put","qs","require","call","axios","post","ajax","stringify","total_page","page","search_string","status","actionListener","takeEvery","FETCH_VARIATIONS","get","meta","editor_area","updatedSelectedProducts","formSelectedProductsCopy","addProductToCart","addProductsToCart","product_type","variation_id","cart_subtotal_tax","rootSaga","all","productList","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","querySelectorAll","domContainer","ReactDOM","render","JSON","parse"],"mappings":"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","file":"static/js/main.347c977e.chunk.js","sourcesContent":["export enum EOrderFormActionTypes {\r\n    SET_FETCHING = \"SET_FETCHING\",\r\n    FETCH_PRODUCTS = \"FETCH_PRODUCTS\",\r\n    FETCH_VARIATIONS = \"FETCH_VARIATIONS\",\r\n    SET_APP_STATE = \"SET_APP_STATE\",\r\n    FETCH_CATEGORIES = \"FETCH_CATEGORIES\",\r\n    SET_CATEGORIES = \"SET_CATEGORIES\",\r\n    SET_CART_SUB_TOTAL = \"SET_CART_SUB_TOTAL\",\r\n    SET_VARIATIONS = \"SET_VARIATIONS\",\r\n    SET_CART_SUBTOTAL = \"SET_CART_SUBTOTAL\"\r\n}\r\n\r\nexport const orderFormActions = {\r\n    setFetching: (payload: any) => ({\r\n        type: EOrderFormActionTypes.SET_FETCHING,\r\n        payload\r\n    }),\r\n    fetchProducts: (payload: any) => ({\r\n        type: EOrderFormActionTypes.FETCH_PRODUCTS,\r\n        payload\r\n    }),\r\n    fetchVariations: (payload: any) => ({\r\n        type: EOrderFormActionTypes.FETCH_VARIATIONS,\r\n        payload\r\n    }),\r\n    setAppState: (payload: any) => ({\r\n        type: EOrderFormActionTypes.SET_APP_STATE,\r\n        payload\r\n    }),\r\n    fetchCategories: (payload: any) => ({\r\n        type: EOrderFormActionTypes.FETCH_CATEGORIES,\r\n        payload\r\n    }),\r\n    setCategories: (payload: any) => ({\r\n        type: EOrderFormActionTypes.SET_CATEGORIES,\r\n        payload\r\n    }),\r\n    setCartSubtotal: (payload: any) => ({\r\n        type: EOrderFormActionTypes.SET_CART_SUB_TOTAL,\r\n        payload\r\n    }),\r\n    setVariations: (payload: any) => ({\r\n        type: EOrderFormActionTypes.SET_VARIATIONS,\r\n        payload\r\n    })\r\n};","export const dragAndDropItems = {\r\n    items: {\r\n        // Header/Footer Elements\r\n        'search-input': { id: 'search-input', content: 'Search Input' },\r\n        'category-filter': { id: 'category-filter', content: 'Category Filter' },\r\n        'add-selected-to-cart-button': { id: 'add-selected-to-cart-button', content: 'Add Selected To Cart Button' },\r\n        'cart-subtotal': { id: 'cart-subtotal', content: 'Cart Subtotal' },\r\n        'product-count': { id: 'product-count', content: 'Product Count' },\r\n        'pagination': { id: 'pagination', content: 'Pagination' },\r\n        'attribute-filter': { id: 'attribute-filter', content: 'Attribute Filter' },\r\n        'search-button': { id: 'search-button', content: 'Search Button' },\r\n        'clear-filters': { id: 'clear-filters', content: 'Clear Filters' },\r\n        // Table Elements\r\n        'product-image': { id: 'product-image', content: 'Product Image' },\r\n        'product-name': { id: 'product-name', content: 'Product Name' },\r\n        'sku': { id: 'sku', content: 'SKU' },\r\n        'in-stock-amount': { id: 'in-stock-amount', content: 'In Stock Amount' },\r\n        'price': { id: 'price', content: 'Price' },\r\n        'quantity-input': { id: 'quantity-input', content: 'Quantity Input' },\r\n        'add-to-cart-button': { id: 'add-to-cart-button', content: 'Add To Cart Button' },\r\n        'combo-variation-selector': { id: 'combo-variation-selector', content: 'Combo Variation Selector' },\r\n        'standard-variation-dropdowns': { id: 'standard-variation-dropdowns', content: 'Standard Variation Dropdowns' },\r\n        'product-meta': { id: 'product-meta', content: 'Product Meta' },\r\n        'global-attribute': { id: 'global-attribute', content: 'Global Attribute' },\r\n        'short-description': { id: 'short-description', content: 'Short Description' },\r\n        'add-to-cart-checkbox': { id: 'add-to-cart-checkbox', content: 'Add To Cart Checkbox' },\r\n        // WooCommerce Widgets\r\n        'cart-widget': { id: 'cart-widget', content: 'Cart Widget' },\r\n        'filter-products-by-attribute': { id: 'filter-products-by-attribute', content: 'Filter Products by Attribute' },\r\n        'filter-products-by-price': { id: 'filter-products-by-price', content: 'Filter Products by Price' },\r\n    },\r\n    // formElements: {\r\n    //     headerElements: {\r\n    //         title: 'HEADER/FOOTER ELEMENTS',\r\n    //         desc: '',\r\n    //         itemIds: ['search-input', 'category-filter', 'add-selected-to-cart-button', 'cart-subtotal', 'product-count', 'pagination', 'attribute-filter', 'search-button', 'clear-filters']\r\n    //     },\r\n    //     tableElements: {\r\n    //         title: 'TABLE ELEMENTS',\r\n    //         desc: '',\r\n    //         itemIds: ['product-image', 'product-name', 'sku', 'in-stock-amount', 'price', 'quantity-input', 'add-to-cart-button', 'combo-variation-selector', 'standard-variation-dropdowns', 'product-meta', 'global-attribute', 'short-description', 'add-to-cart-checkbox']\r\n    //     },\r\n    //     wooWidgets: {\r\n    //         title: 'WooCommerce Widgets',\r\n    //         desc: 'Click and drag compatible WooCommerce widgets into the header/footer.',\r\n    //         itemIds: ['cart-widget', 'filter-products-by-attribute', 'filter-products-by-price']\r\n    //     }\r\n    // },\r\n    // editorArea: {\r\n    //     formHeader: {\r\n    //         title: 'ORDER FORM HEADER',\r\n    //         rows: []\r\n    //     },\r\n    //     formTable: {\r\n    //         title: 'ORDER FORM TABLE',\r\n    //         itemIds: []\r\n    //     },\r\n    //     formFooter: {\r\n    //         title: 'ORDER FORM FOOTER',\r\n    //         rows: []\r\n    //     }\r\n    // }\r\n};","export enum EOrderFormDataActionTypes {\r\n    FETCH_ORDER_FORM_DATA = \"FETCH_ORDER_FORM_DATA\",\r\n    SET_ORDER_FORM_DATA = \"SET_ORDER_FORM_DATA\",\r\n    SET_ORDER_FORM_PRODUCTS = \"SET_ORDER_FORM_PRODUCTS\",\r\n    SET_ORDER_FORM_PAGINATION = \"SET_ORDER_FORM_PAGINATION\",\r\n    SET_PAGE_SELECTED_ALL = \"SET_PAGE_SELECTED_ALL\",\r\n    SET_ORDER_FORM_FILTERS = \"SET_ORDER_FORM_FILTERS\",\r\n    SET_ORDER_FORM_SELECTED_PRODUCTS_TO_ADD_CART = \"SET_ORDER_FORM_SELECTED_PRODUCTS_TO_ADD_CART\",\r\n    UPDATE_ORDER_FORM_SELECTED_PRODUCTS = \"UPDATE_ORDER_FORM_SELECTED_PRODUCTS\",\r\n    SET_ORDER_FORM_CART_SUBTOTAL = \"SET_ORDER_FORM_CART_SUBTOTAL\"\r\n}\r\n\r\nexport const orderFormDataActions = {\r\n    fetchOrderFormData: (payload: any) => ({\r\n        type: EOrderFormDataActionTypes.FETCH_ORDER_FORM_DATA,\r\n        payload\r\n    }),\r\n    setOrderFormData: (payload: any) => ({\r\n        type: EOrderFormDataActionTypes.SET_ORDER_FORM_DATA,\r\n        payload\r\n    }),\r\n    setOrderFormProducts: (payload: any) => ({\r\n        type: EOrderFormDataActionTypes.SET_ORDER_FORM_PRODUCTS,\r\n        payload\r\n    }),\r\n    setOrderFormPagination: (payload: any) => ({\r\n        type: EOrderFormDataActionTypes.SET_ORDER_FORM_PAGINATION,\r\n        payload\r\n    }),\r\n    setPageSelectedAll: (payload: any) => ({\r\n        type: EOrderFormDataActionTypes.SET_PAGE_SELECTED_ALL,\r\n        payload\r\n    }),\r\n    setFormFilters: (payload: any) => ({\r\n        type: EOrderFormDataActionTypes.SET_ORDER_FORM_FILTERS,\r\n        payload\r\n    }),\r\n    setSelectedProductsToAddToCart: (payload: any) => ({\r\n        type: EOrderFormDataActionTypes.SET_ORDER_FORM_SELECTED_PRODUCTS_TO_ADD_CART,\r\n        payload\r\n    }),\r\n    updateSelectedProducts: (payload: any) => ({\r\n        type: EOrderFormDataActionTypes.UPDATE_ORDER_FORM_SELECTED_PRODUCTS,\r\n        payload\r\n    }),\r\n    setCartSubtotal: (payload: any) => ({\r\n        type: EOrderFormDataActionTypes.SET_ORDER_FORM_CART_SUBTOTAL,\r\n        payload\r\n    })\r\n};","export enum EProductListActionTypes {\r\n    SET_PRODUCT_LIST_COLUMNS = \"SET_PRODUCT_LIST_COLUMNS\",\r\n    SET_PRODUCT_QUANTITY = \"SET_PRODUCT_QUANTITY\",\r\n    SET_SELECTED_PRODUCTS = \"SET_SELECTED_PRODUCTS\",\r\n    SET_SELECTED_VARIATIONS = \"SET_SELECTED_VARIATIONS\",\r\n    ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\",\r\n    ADD_PRODUCTS_TO_CART = \"ADD_PRODUCTS_TO_CART\",\r\n}\r\n\r\nexport const productListActions = {\r\n    setProductListColumns: (payload: any) => ({\r\n        type: EProductListActionTypes.SET_PRODUCT_LIST_COLUMNS,\r\n        payload\r\n    }),\r\n    setProductQuantity: (payload: any) => ({\r\n        type: EProductListActionTypes.SET_PRODUCT_QUANTITY,\r\n        payload\r\n    }),\r\n    setSelectedProducts: (payload: any) => ({\r\n        type: EProductListActionTypes.SET_SELECTED_PRODUCTS,\r\n        payload\r\n    }),\r\n    setSelectedVariations: (payload: any) => ({\r\n        type: EProductListActionTypes.SET_SELECTED_VARIATIONS,\r\n        payload\r\n    }),\r\n    addProductToCartAction: (payload: any) => ({\r\n        type: EProductListActionTypes.ADD_PRODUCT_TO_CART,\r\n        payload\r\n    }),\r\n    addProductsToCartAction: (payload: any) => ({\r\n        type: EProductListActionTypes.ADD_PRODUCTS_TO_CART,\r\n        payload\r\n    })\r\n}","\r\nimport React from 'react';\r\nimport { Input } from 'antd';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport { orderFormDataActions } from '../../../store/actions';\r\nconst { setFormFilters } = orderFormDataActions;\r\n\r\nconst SearchInput = (props: any) => {\r\n\r\n    const { orderFormData, placeholder, styles, actions, orderFormId, fetchProducts, submitOnEnter } = props;\r\n    const { setFormFilters } = actions;\r\n\r\n    const searchInput = typeof orderFormData['formFilters'][orderFormId] === 'undefined' ? \"\" : orderFormData['formFilters'][orderFormId]['searchInput'];\r\n\r\n    const onTextEnter = (e: any) => {\r\n\r\n        e.preventDefault();\r\n\r\n        let selectedCategory = '';\r\n\r\n        if (\r\n            typeof orderFormData.formFilters[orderFormId] !== 'undefined' &&\r\n            typeof orderFormData.formFilters[orderFormId].selectedCategory !== 'undefined'\r\n        )\r\n            selectedCategory = orderFormData.formFilters[orderFormId].selectedCategory;\r\n\r\n        if (submitOnEnter) {\r\n            fetchProducts({\r\n                search: e.target.value,\r\n                category: selectedCategory,\r\n                active_page: 1,\r\n                searching: 'yes'\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Input\r\n                placeholder={placeholder}\r\n                style={{ ...styles }}\r\n                onChange={e => setFormFilters({\r\n                    [orderFormId]: {\r\n                        ...orderFormData['formFilters'][orderFormId],\r\n                        searchInput: e.target.value\r\n                    }\r\n                })}\r\n                value={searchInput}\r\n                onPressEnter={(e) => onTextEnter(e)}\r\n            />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderFormData: store.orderFormData,\r\n    filter: store.filter\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setFormFilters\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput);\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeSelect } from 'antd';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport { orderFormDataActions } from '../../../store/actions';\r\nconst { setFormFilters } = orderFormDataActions;\r\n\r\nconst CategoryFilter = (props: any) => {\r\n\r\n    const { orderForm, orderFormData, placeholder, styles, actions, orderFormId, fetchProducts, submitOnChange } = props;\r\n    const { setFormFilters } = actions;\r\n    const { categories } = orderForm;\r\n    const selectedCategory = typeof orderFormData['formFilters'][orderFormId] === 'undefined' ? placeholder : orderFormData['formFilters'][orderFormId]['selectedCategory'];\r\n\r\n    const [selectedCat, setSelectedCat] = useState(selectedCategory);\r\n\r\n    const searchInput = typeof orderFormData['formFilters'][orderFormId] !== 'undefined' &&\r\n        typeof orderFormData['formFilters'][orderFormId]['searchInput'] !== 'undefined' ?\r\n        orderFormData['formFilters'][orderFormId]['searchInput'] : '';\r\n\r\n    let treeData: any[] = [];\r\n    let iterate = (cat: any, data: any) => {\r\n\r\n        cat.children.forEach((cat2: any, index: number) => {\r\n\r\n            data.children.push({\r\n                'title': cat2.name,\r\n                'value': cat2.name,\r\n                'children': []\r\n            });\r\n\r\n            if (cat2.children.length > 0) {\r\n                iterate(cat2, data.children[index]);\r\n            }\r\n\r\n        });\r\n\r\n    };\r\n\r\n    if (categories !== undefined) {\r\n        categories.forEach((cat: any, index: number) => {\r\n            treeData.push({\r\n                'title': cat.name,\r\n                'value': cat.name,\r\n                'children': []\r\n            });\r\n\r\n            if (cat.children.length > 0)\r\n                iterate(cat, treeData[index]);\r\n\r\n        });\r\n    }\r\n\r\n    const onChange = (categoryName: string, treeData: Array<any>) => {\r\n\r\n        try {\r\n\r\n            let selected = categoryName ? categoryName : selectedCat;\r\n\r\n            if (categoryName) {\r\n\r\n                let iterate = (cat: any, data: any) => {\r\n\r\n                    cat.children.forEach((cat2: any, index: number) => {\r\n\r\n                        if (categoryName === cat2.name) {\r\n                            selected = cat2.id;\r\n                            return;\r\n                        }\r\n\r\n                        if (cat2.children.length > 0) {\r\n                            iterate(cat2, data.children[index]);\r\n                        }\r\n\r\n                    });\r\n\r\n                };\r\n\r\n                categories.forEach((cat: any, index: number) => {\r\n                    if (categoryName === cat.name) {\r\n                        selected = cat.id;\r\n                        return;\r\n                    }\r\n\r\n                    if (cat.children.length > 0)\r\n                        iterate(cat, treeData[index]);\r\n                });\r\n\r\n                setSelectedCat(categoryName);\r\n                setFormFilters({\r\n                    [orderFormId]: {\r\n                        ...orderFormData['formFilters'][orderFormId],\r\n                        selectedCategory: selected\r\n                    }\r\n                })\r\n\r\n            } else {\r\n                setFormFilters({\r\n                    [orderFormId]: {\r\n                        ...orderFormData['formFilters'][orderFormId],\r\n                        selectedCategory: ''\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (submitOnChange) {\r\n                fetchProducts({\r\n                    search: searchInput,\r\n                    category: selected,\r\n                    active_page: 1,\r\n                    searching: 'yes'\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (selectedCategory === '')\r\n                setSelectedCat(placeholder);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [selectedCategory]);\r\n\r\n    return (\r\n        <>\r\n            <TreeSelect\r\n                showSearch\r\n                allowClear\r\n                className='wwof-category-filter'\r\n                value={selectedCat}\r\n                treeData={treeData}\r\n                placeholder={placeholder}\r\n                treeDefaultExpandAll\r\n                style={{\r\n                    width: '100%',\r\n                    ...styles\r\n                }}\r\n                onChange={(val: string) => onChange(val, treeData)}\r\n            />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData,\r\n    filter: store.filter\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setFormFilters\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryFilter);\r\n","\r\nimport React from 'react';\r\nimport { Pagination } from 'antd';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport { } from '../../../store/actions';\r\n\r\nconst OrderFormPagination = React.memo((props: any) => {\r\n\r\n    const { orderFormId, orderFormData, styles, fetchProducts } = props;\r\n\r\n    if (typeof orderFormData['formPagination'][orderFormId] === 'undefined')\r\n        return (<></>);\r\n\r\n    const searchInput = typeof orderFormData['formFilters'][orderFormId] !== 'undefined' &&\r\n        typeof orderFormData['formFilters'][orderFormId]['searchInput'] !== 'undefined' ?\r\n        orderFormData['formFilters'][orderFormId]['searchInput'] : '';\r\n\r\n    const selectedCategory = typeof orderFormData['formFilters'][orderFormId] !== 'undefined' &&\r\n        typeof orderFormData['formFilters'][orderFormId]['selectedCategory'] !== 'undefined' ?\r\n        orderFormData['formFilters'][orderFormId]['selectedCategory'] : '';\r\n\r\n    return (\r\n        <>\r\n            <Pagination\r\n                current={orderFormData['formPagination'][orderFormId]['active_page'] || 1}\r\n                total={parseInt(orderFormData['formPagination'][orderFormId]['total_products']) || 0}\r\n                pageSize={parseInt(orderFormData['formPagination'][orderFormId]['per_page']) || 0}\r\n                style={{ ...styles }}\r\n                onChange={(active_page: number) => {\r\n                    fetchProducts({\r\n                        search: searchInput,\r\n                        category: selectedCategory,\r\n                        active_page: active_page || orderFormData['formPagination'][orderFormId]['active_page'],\r\n                        searching: 'no',\r\n                    })\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n\r\n});\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    pagination: store.pagination,\r\n    orderFormData: store.orderFormData,\r\n    filter: store.filter\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({}, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderFormPagination);\r\n","\r\nimport React from 'react';\r\nimport { Button } from 'antd';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport { } from '../../../store/actions';\r\n\r\nconst SearchButton = React.memo((props: any) => {\r\n\r\n    const { orderFormData, buttonText, styles, orderFormId, fetchProducts } = props;\r\n\r\n    const onFormSubmit = (e: any) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const searchInput = typeof orderFormData['formFilters'][orderFormId] !== 'undefined' &&\r\n            typeof orderFormData['formFilters'][orderFormId]['searchInput'] !== 'undefined' ?\r\n            orderFormData['formFilters'][orderFormId]['searchInput'] : '';\r\n\r\n        const selectedCategory = typeof orderFormData['formFilters'][orderFormId] !== 'undefined' &&\r\n            typeof orderFormData['formFilters'][orderFormId]['selectedCategory'] !== 'undefined' ?\r\n            orderFormData['formFilters'][orderFormId]['selectedCategory'] : '';\r\n\r\n        const activePage = typeof orderFormData['formFilters'][orderFormId] !== 'undefined' &&\r\n            typeof orderFormData['formFilters'][orderFormId]['active_page'] !== 'undefined' ?\r\n            orderFormData['formFilters'][orderFormId]['active_page'] : 1;\r\n\r\n        if (searchInput || selectedCategory) {\r\n            fetchProducts({\r\n                search: searchInput,\r\n                category: selectedCategory,\r\n                active_page: activePage,\r\n                searching: 'yes'\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            type=\"primary\"\r\n            style={{ ...styles }}\r\n            onClick={(e: any) => onFormSubmit(e)}\r\n        >{buttonText}</Button>\r\n    );\r\n\r\n});\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({}, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchButton);\r\n","\r\n\r\nimport React from 'react';\r\nimport { Button } from 'antd';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport { orderFormDataActions } from '../../../store/actions';\r\nconst { setFormFilters } = orderFormDataActions;\r\n\r\nconst SearchButton = React.memo((props: any) => {\r\n\r\n    const { orderFormData, buttonText, styles, orderFormId, actions, fetchProducts } = props;\r\n    const { setFormFilters } = actions;\r\n\r\n    const showAll = (e: any) => {\r\n\r\n        e.preventDefault();\r\n        fetchProducts({\r\n            search: '',\r\n            category: '',\r\n            active_page: 1,\r\n            per_page: orderFormData.formPagination[orderFormId].per_page || 10,\r\n            searching: 'no',\r\n            sort_order: '',\r\n            products: '',\r\n            categories: '',\r\n            show_all: true\r\n        });\r\n\r\n        setFormFilters({\r\n            [orderFormId]: {\r\n                searchInput: '',\r\n                selectedCategory: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            type=\"primary\"\r\n            style={{ ...styles }}\r\n            onClick={(e: any) => showAll(e)}\r\n        >{buttonText}</Button>\r\n    );\r\n\r\n});\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setFormFilters\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchButton);\r\n","import React from 'react';\r\nimport { Button, notification, List } from 'antd';\r\nimport { ShoppingCartOutlined } from '@ant-design/icons';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { productListActions, orderFormDataActions } from '../../../store/actions/';\r\nconst { addProductsToCartAction } = productListActions;\r\nconst { setCartSubtotal } = orderFormDataActions;\r\n\r\nconst AddSelectedProductsToCartButton = (props: any) => {\r\n\r\n    const { orderForm, orderFormData, buttonText, styles, orderFormId, actions } = props;\r\n    const { addProductsToCartAction } = actions;\r\n\r\n    const addToCartSelectedProducts = () => {\r\n\r\n        let products = orderFormData.formSelectedProducts[orderFormId];\r\n\r\n        addProductsToCartAction({\r\n            products,\r\n            form_settings: orderFormData.formSettings[orderFormId],\r\n            successCB: (args: any) => {\r\n\r\n                let added: any = [];\r\n                const successfully_added = args.data.successfully_added;\r\n\r\n                Object.keys(successfully_added).forEach(productId => {\r\n\r\n                    const product = products[productId] || {};\r\n\r\n                    if (Object.keys(product).length > 0) {\r\n\r\n                        if (['simple', 'variation'].includes(product.productType))\r\n                            added.push(<div dangerouslySetInnerHTML={{ __html: '<b>' + product.productTitle + '</b> x ' + successfully_added[productId] }} />);\r\n\r\n                    } else {\r\n\r\n                        Object.keys(products).map((id: any, test: any) => {\r\n\r\n                            if (typeof products[id].variationID !== 'undefined' &&\r\n                                parseInt(products[id].variationID) === parseInt(productId)\r\n                            ) {\r\n                                added.push(<div dangerouslySetInnerHTML={{ __html: '<b>' + products[id].productTitle + '</b> x ' + successfully_added[productId] + '<br/>' + products[id].name }} />);\r\n                            }\r\n\r\n                        });\r\n\r\n                    }\r\n\r\n                });\r\n\r\n                let failed: any = [];\r\n                const failed_to_add = args.data.failed_to_add;\r\n                failed_to_add.forEach((data: any, index: number) => {\r\n\r\n                    const product = products[data.product_id] || {};\r\n\r\n                    if (product)\r\n                        failed.push(<div dangerouslySetInnerHTML={{ __html: '<b>' + product.productTitle + '</b> x ' + data.quantity + '<br/>' + data.error_message }} />);\r\n                });\r\n\r\n                if (added.length > 0) {\r\n                    notification['success']({\r\n                        message: 'Succesfully Added:',\r\n                        description:\r\n                            <div>\r\n                                <List\r\n                                    size=\"small\"\r\n                                    bordered\r\n                                    dataSource={added}\r\n                                    renderItem={(item: any) => <List.Item>{item}</List.Item>}\r\n                                />\r\n                                <a href={orderForm.cart_url} target=\"_blank\"><Button style={{ marginTop: '10px' }} >View Cart<ShoppingCartOutlined /></Button></a>\r\n                            </div>,\r\n                        duration: 10\r\n                    });\r\n                }\r\n\r\n                if (failed.length > 0) {\r\n                    notification['error']({\r\n                        message: 'Add to Cart Failed:',\r\n                        description:\r\n                            <List\r\n                                size=\"small\"\r\n                                bordered\r\n                                dataSource={failed}\r\n                                renderItem={(item: any) => <List.Item>{item}</List.Item>}\r\n                            />,\r\n                        duration: 10\r\n                    });\r\n                }\r\n\r\n                // Update cart total by triggering the added_to_cart custom event of wc.\r\n                const fragments: any = args.data.fragments;\r\n                const cart_hash: any = args.data.cart_hash;\r\n\r\n                const event = new CustomEvent('added_to_cart', { detail: { fragments: fragments, cart_hash: cart_hash } });\r\n                document.body.dispatchEvent(event);\r\n\r\n                // Update subtotal below the order form.\r\n                actions.setCartSubtotal({\r\n                    [orderFormId]: {\r\n                        cartSubtotal: args.data.cart_subtotal_markup\r\n                    }\r\n                })\r\n\r\n            },\r\n            failCB: (args: any) => {\r\n\r\n                notification['error']({\r\n                    message: 'Add to Cart Failed:',\r\n                    description: 'error'\r\n                });\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    if (\r\n        typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined' &&\r\n        Object.keys(orderFormData.formSelectedProducts[orderFormId]).length > 0\r\n    )\r\n        return (\r\n            <Button\r\n                type=\"primary\"\r\n                style={{ ...styles }}\r\n                onClick={() => addToCartSelectedProducts()}\r\n            >{buttonText}</Button>\r\n        );\r\n    else\r\n        return (\r\n            <Button\r\n                type=\"primary\"\r\n                style={{ ...styles }}\r\n                disabled\r\n            >{buttonText}</Button>\r\n        );\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData,\r\n    formStyles: store.orderFormData.formStyles[props.orderFormId]\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        addProductsToCartAction,\r\n        setCartSubtotal\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddSelectedProductsToCartButton);","\r\nimport React from 'react';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst CartSubtotal = (props: any) => {\r\n\r\n    const { orderFormData, orderFormId, styles } = props;\r\n\r\n    if (typeof orderFormData.formCartSubtotal[orderFormId] === 'undefined')\r\n        return (<></>);\r\n\r\n    return (\r\n        <div\r\n            style={{ ...styles }}\r\n            dangerouslySetInnerHTML={{ __html: orderFormData.formCartSubtotal[orderFormId].cartSubtotal }}>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderFormData: store.orderFormData\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({}, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartSubtotal);\r\n","\r\n\r\nimport React from 'react';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst ProductCount = React.memo((props: any) => {\r\n\r\n    const { orderFormData, styles, orderFormId } = props;\r\n\r\n    if (typeof orderFormData.formPagination[orderFormId] === 'undefined')\r\n        return (<></>);\r\n\r\n    const productCount = orderFormData.formPagination[orderFormId].total_products || 0;\r\n\r\n    return (\r\n        <div\r\n            style={{ ...styles }}\r\n            dangerouslySetInnerHTML={{ __html: `${productCount} Product(s)` }}>\r\n        </div>\r\n    );\r\n\r\n});\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({}, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCount);\r\n","import React from 'react';\r\n// import { GoldOutlined } from '@ant-design/icons';\r\n\r\n// Elements\r\nimport SearchInput from './Elements/SearchInput';\r\nimport CategoryFilter from './Elements/CategoryFilter';\r\nimport OrderFormPagination from './Elements/OrderFormPagination';\r\nimport SearchButton from './Elements/SearchButton';\r\nimport ClearFilters from './Elements/ClearFilters';\r\nimport AddSelectedProductsToCartButton from './Elements/AddSelectedProductsToCartButton';\r\nimport CartSubtotal from './Elements/CartSubtotal';\r\nimport ProductCount from './Elements/ProductCount'\r\n\r\nconst getPropValue = (props: any) => {\r\n    const { properties, prop } = props;\r\n\r\n    if (typeof properties === 'undefined')\r\n        return null;\r\n    else if (typeof properties !== 'undefined' && typeof properties[prop] !== 'undefined')\r\n        return properties[prop];\r\n    else\r\n        return null;\r\n\r\n}\r\n\r\nconst PrintItem = (props: any) => {\r\n\r\n    const { item, styles, properties, products, orderFormId, fetchProducts } = props;\r\n\r\n    const displayItem = (id: string) => {\r\n\r\n        switch (item.id) {\r\n\r\n            // Header/Footer Elements\r\n            case 'search-input':\r\n                return (\r\n                    <SearchInput\r\n                        orderFormId={orderFormId}\r\n                        placeholder={getPropValue({ properties, prop: 'placeholder' }) || 'Search Products'}\r\n                        styles={styles}\r\n                        fetchProducts={fetchProducts}\r\n                        submitOnEnter={getPropValue({ properties, prop: 'submitOnEnter' }) || false}\r\n                    />\r\n                );\r\n            case 'category-filter':\r\n                return (\r\n                    <CategoryFilter\r\n                        orderFormId={orderFormId}\r\n                        placeholder={getPropValue({ properties, prop: 'placeholder' }) || 'Select Category'}\r\n                        styles={styles}\r\n                        fetchProducts={fetchProducts}\r\n                        submitOnChange={getPropValue({ properties, prop: 'submitOnChange' }) || false}\r\n                    />\r\n                );\r\n            case 'add-selected-to-cart-button':\r\n                return (\r\n                    <AddSelectedProductsToCartButton\r\n                        orderFormId={orderFormId}\r\n                        styles={styles}\r\n                        buttonText={getPropValue({ properties, prop: 'buttonText' }) || 'Add Selected Products To Cart'}\r\n                    />\r\n\r\n                );\r\n            case 'cart-subtotal':\r\n                return (\r\n                    <CartSubtotal\r\n                        orderFormId={orderFormId}\r\n                        styles={styles}\r\n                    />\r\n                );\r\n            case 'product-count':\r\n                return (\r\n                    <ProductCount\r\n                        orderFormId={orderFormId}\r\n                        styles={styles}\r\n                    />\r\n                );\r\n            case 'pagination':\r\n                return (\r\n                    <OrderFormPagination\r\n                        productsPerPage={getPropValue({ properties, prop: 'productsPerPage' }) || 12}\r\n                        orderFormId={orderFormId}\r\n                        styles={styles}\r\n                        fetchProducts={fetchProducts}\r\n                    />\r\n                );\r\n            // case 'attribute-filter':\r\n            //     return (\r\n            //         <div\r\n            //             style={{ ...styles }}\r\n            //         >\r\n            //             <GoldOutlined />\r\n            //             {item.content}\r\n            //         </div>\r\n            //     );\r\n            case 'search-button':\r\n                return (\r\n                    <SearchButton\r\n                        orderFormId={orderFormId}\r\n                        styles={styles}\r\n                        buttonText={getPropValue({ properties, prop: 'buttonText' }) || 'Search'}\r\n                        fetchProducts={fetchProducts}\r\n                    />\r\n                );\r\n            case 'clear-filters':\r\n                return (\r\n                    <ClearFilters\r\n                        orderFormId={orderFormId}\r\n                        styles={styles}\r\n                        buttonText={getPropValue({ properties, prop: 'buttonText' }) || 'Clear Filters'}\r\n                        fetchProducts={fetchProducts}\r\n                    />\r\n                );\r\n            default:\r\n                return (<></>);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {typeof item !== 'undefined' ? displayItem(item.id) : ''}\r\n        </>\r\n    )\r\n}\r\n\r\n// Array.from(Array(itemsPerPage).keys()).map\r\n\r\nexport default PrintItem;","export const readableStyles = (props: any) => {\r\n\r\n    const { styles } = props;\r\n\r\n    let stylesCopy: any = {};\r\n    if (typeof styles === 'undefined') return;\r\n\r\n    Object.keys(styles).map((style: any, index: any) => {\r\n\r\n        switch (style) {\r\n            case 'width':\r\n                if (styles[style].type === 'percentage')\r\n                    stylesCopy[style] = `${styles[style].value}%`;\r\n                else if (styles[style].type === 'pixels')\r\n                    stylesCopy[style] = `${styles[style].value}px`;\r\n                break;\r\n            case 'fontSize':\r\n                if (styles[style].type === 'percentage')\r\n                    stylesCopy[style] = `${styles[style].value}%`;\r\n                else if (styles[style].type === 'pixels')\r\n                    stylesCopy[style] = `${styles[style].value}px`;\r\n                break;\r\n            default:\r\n                stylesCopy[style] = styles[style];\r\n        }\r\n        return;\r\n\r\n    });\r\n\r\n    return stylesCopy;\r\n\r\n}","import React from 'react';\r\nimport { dragAndDropItems } from '../../helpers/dragDropItems';\r\nimport PrintItem from './PrintItem';\r\nimport { readableStyles } from '../../helpers/readableStyles';\r\n\r\nconst DisplayItems = (props: any) => {\r\n\r\n    const { dataRows, styles, products, orderFormId, fetchProducts } = props;\r\n    const data: any = dragAndDropItems;\r\n\r\n    if (dataRows === undefined)\r\n        return (<></>);\r\n    else\r\n        return (\r\n            <div\r\n                style={{\r\n                    // border: '1px solid #eee',\r\n                    // background: \"#efefef\",\r\n                    // padding: 10,\r\n                    display: 'grid',\r\n                    gridGap: '10px',\r\n                }}\r\n            >\r\n                {Object.keys(dataRows['rows']).map((row: any, index: any) => {\r\n\r\n                    const rowId = dataRows['rows'][row]['rowId'];\r\n                    const rowStyles = styles[rowId] !== undefined ? styles[rowId] : {};\r\n                    const columns = dataRows['rows'][row]['columns'];\r\n\r\n                    return (\r\n                        <div\r\n                            key={index}\r\n                            className={`row ${rowId}`}\r\n                            style={{\r\n                                ...readableStyles({ styles: rowStyles['box'] })\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                }}\r\n                            >\r\n                                {Object.keys(columns).map((col: any, index: any) => {\r\n                                    const colId = columns[col]['colId'];\r\n                                    const colStyles = styles[colId] !== undefined ? styles[colId] : {};\r\n                                    const items = dataRows['rows'][row]['columns'][col]['itemIds'];\r\n                                    const readableColStyles = readableStyles({ styles: colStyles['box'] });\r\n                                    let hasCustomWidth = false;\r\n\r\n                                    if (readableColStyles && typeof readableColStyles['width'] !== 'undefined') {\r\n                                        if (readableColStyles['width'].indexOf('px') >= 0) {\r\n                                            const val = parseInt(readableColStyles['width']);\r\n                                            if (val)\r\n                                                hasCustomWidth = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    return (\r\n                                        <div\r\n                                            className={`col ${col}`}\r\n                                            key={index}\r\n                                            style={{\r\n                                                flex: hasCustomWidth ? 'none' : 1,\r\n                                                margin: '2px'\r\n                                            }}\r\n                                        >\r\n                                            <div\r\n                                                className={`drop-item ${items.length > 0 ? 'has-items' : 'no-item'}`}\r\n                                                style={{\r\n                                                    display: 'flex',\r\n                                                    flexWrap: 'wrap',\r\n                                                    flex: '1 1 0%',\r\n                                                    ...readableColStyles\r\n                                                }}\r\n                                            >\r\n                                                {items.map((itemKey: any, index: any) => {\r\n\r\n                                                    const item = data['items'][itemKey];\r\n                                                    const printItemProps = { item, styles: readableStyles({ styles: colStyles['element'] }), properties: colStyles['props'], products, orderFormId, fetchProducts }\r\n\r\n                                                    return (\r\n                                                        <div\r\n                                                            key={index}\r\n                                                            className={`col ${col} item`}\r\n                                                            style={{\r\n                                                                display: 'flex',\r\n                                                                ...readableColStyles,\r\n                                                                width: '100%',\r\n                                                                height: '100%',\r\n                                                            }}\r\n                                                        >\r\n                                                            <PrintItem {...printItemProps} />\r\n                                                        </div>\r\n                                                    );\r\n\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div >\r\n        );\r\n}\r\n\r\nexport default DisplayItems;","import React from 'react';\r\nimport DisplayItems from './DisplayItems';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport { orderFormActions } from '../../store/actions';\r\nconst { fetchProducts } = orderFormActions;\r\n\r\ndeclare var Options: any;\r\n\r\nconst FormHeaderFooter = (props: any) => {\r\n\r\n    const { orderFormId, section, formHeader, formFooter, orderFormData, actions } = props;\r\n    const { fetchProducts } = actions;\r\n\r\n    return (\r\n\r\n        <div style={{\r\n            display: \"flex\",\r\n            flexDirection: 'column',\r\n        }} className={`${section === 'formHeader' ? 'form-header' : 'form-footer'}`}>\r\n            <div\r\n                style={{\r\n                    margin: '4px 0px',\r\n                    position: 'relative'\r\n                }}\r\n            >\r\n                <DisplayItems\r\n                    orderFormId={orderFormId}\r\n                    products={props.products}\r\n                    styles={props.formStyles}\r\n                    dataRows={section === 'formHeader' ? formHeader : formFooter}\r\n                    fetchProducts={\r\n                        (args: any) => {\r\n                            fetchProducts({\r\n                                search: '',\r\n                                category: '',\r\n                                active_page: orderFormData.formPagination[orderFormId]['active_page'] || 1,\r\n                                searching: 'no',\r\n                                sort_order: '',\r\n                                show_all: false,\r\n                                attributes: { id: orderFormId },\r\n                                wholesale_role: Options.wholesale_role,\r\n                                per_page: orderFormData.formSettings[orderFormId]['products_per_page'] || 10,\r\n                                form_settings: orderFormData.formSettings[orderFormId],\r\n                                ...args\r\n                            })\r\n                        }\r\n                    }\r\n                />\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    orderFormData: store.orderFormData,\r\n    formHeader: store.orderFormData.formHeader[props.orderFormId],\r\n    formFooter: store.orderFormData.formFooter[props.orderFormId],\r\n    formStyles: store.orderFormData.formStyles[props.orderFormId]\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        fetchProducts\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormHeaderFooter);","import React from 'react';\r\nimport { Button, notification } from 'antd';\r\nimport { ShoppingCartOutlined } from '@ant-design/icons';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { productListActions, orderFormDataActions } from '../../../store/actions/';\r\nconst { addProductToCartAction } = productListActions;\r\nconst { setCartSubtotal } = orderFormDataActions;\r\n\r\nconst AddToCartButton = (props: any) => {\r\n\r\n    const { orderForm, orderFormData, itemProps, actions } = props;\r\n    const { orderFormId, product, getPropValue, formStyles, itemId } = itemProps;\r\n    const { addProductToCartAction } = actions;\r\n\r\n    const onClick = (e: any) => {\r\n\r\n        let variationId = 0;\r\n        let quantity = 1;\r\n        let variationName = '';\r\n\r\n        if (\r\n            typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined' &&\r\n            typeof orderFormData.formSelectedProducts[orderFormId][product.id] !== 'undefined'\r\n        ) {\r\n            if (typeof orderFormData.formSelectedProducts[orderFormId][product.id]['variationID'] !== 'undefined')\r\n                variationId = orderFormData.formSelectedProducts[orderFormId][product.id]['variationID'];\r\n\r\n            if (typeof orderFormData.formSelectedProducts[orderFormId][product.id]['quantity'] !== 'undefined')\r\n                quantity = orderFormData.formSelectedProducts[orderFormId][product.id]['quantity'];\r\n\r\n        }\r\n\r\n        if (\r\n            typeof orderFormData.formProducts[orderFormId]['variations'] !== 'undefined' &&\r\n            typeof orderFormData.formProducts[orderFormId]['variations'][product.id] !== 'undefined' &&\r\n            variationId != 0 &&\r\n            product.type === 'variable'\r\n        ) {\r\n\r\n            const variationData = orderFormData.formProducts[orderFormId]['variations'][product.id].find((data: any) => {\r\n\r\n                return data.id === variationId;\r\n            });\r\n\r\n            if (variationData !== undefined) {\r\n                variationName = variationData.attributes.map((attributes: any) => {\r\n                    return attributes.name + ': ' + attributes.option;\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        addProductToCartAction({\r\n            'product_type': product.type,\r\n            'product_id': product.id,\r\n            'variation_id': variationId,\r\n            'quantity': quantity,\r\n            'form_settings': orderFormData.formSettings[orderFormId],\r\n            successCB: (args: any) => {\r\n\r\n                notification['success']({\r\n                    message: 'Succesfully Added:',\r\n                    description:\r\n                        <div>\r\n                            <div dangerouslySetInnerHTML={{ __html: '<b>' + product.name + '</b> x ' + quantity + '<br/>' + variationName }} />\r\n                            <a href={orderForm.cart_url} target=\"_blank\"><Button style={{ marginTop: '10px' }} >View Cart<ShoppingCartOutlined /></Button></a>\r\n                        </div>,\r\n                    duration: 10\r\n                });\r\n\r\n                // Update cart total by triggering the added_to_cart custom event of wc.\r\n                const fragments: any = args.data.fragments;\r\n                const cart_hash: any = args.data.cart_hash;\r\n\r\n                const event = new CustomEvent('added_to_cart', { detail: { fragments: fragments, cart_hash: cart_hash } });\r\n                document.body.dispatchEvent(event);\r\n\r\n                // Update subtotal below the order form.\r\n                actions.setCartSubtotal({\r\n                    [orderFormId]: {\r\n                        cartSubtotal: args.data.cart_subtotal_markup\r\n                    }\r\n                })\r\n\r\n            },\r\n            failCB: () => {\r\n\r\n                notification['error']({\r\n                    message: 'Add to Cart',\r\n                    description: 'Add to cart failed.',\r\n                    duration: 10\r\n                });\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            type='primary'\r\n            onClick={(e) => onClick(e)}\r\n        >\r\n            {getPropValue({ formStyles, item: itemId, prop: 'buttonText' }) || 'Add To Cart'}\r\n        </Button>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData,\r\n    formStyles: store.orderFormData.formStyles[props.orderFormId]\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        addProductToCartAction,\r\n        setCartSubtotal\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddToCartButton);","import React, { useState, useEffect } from 'react';\r\nimport { Checkbox } from 'antd';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { orderFormDataActions } from '../../../store/actions/';\r\nconst { updateSelectedProducts } = orderFormDataActions;\r\n\r\nconst AddToCartButton = (props: any) => {\r\n\r\n    const { orderFormData, itemProps, actions } = props;\r\n    const { orderFormId, selectedAll, somethingChanged, product } = itemProps;\r\n    const { updateSelectedProducts } = actions;\r\n    const [selected, setSelected] = useState(false);\r\n\r\n    const onChange = (e: any) => {\r\n\r\n        setSelected(e.target.checked);\r\n\r\n        updateSelectedProducts({\r\n            selected: e.target.checked,\r\n            orderFormData,\r\n            orderFormId,\r\n            product\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n            if (somethingChanged)\r\n                setSelected(selectedAll);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [selectedAll, somethingChanged]);\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n            if (typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined') {\r\n\r\n                if (typeof orderFormData.formSelectedProducts[orderFormId][product.id] !== 'undefined')\r\n                    setSelected(true)\r\n                else\r\n                    setSelected(false)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [orderFormData.formPagination[orderFormId], orderFormData.formSelectedProducts[orderFormId]]);\r\n\r\n    return (\r\n        <Checkbox\r\n            checked={selected}\r\n            onChange={(e) => onChange(e)}\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData,\r\n    formStyles: store.orderFormData.formStyles[props.orderFormId]\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        updateSelectedProducts\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddToCartButton);","import React, { useEffect, useState } from 'react';\r\nimport { Select } from 'antd';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { orderFormDataActions } from '../../../store/actions/';\r\nconst { setSelectedProductsToAddToCart } = orderFormDataActions;\r\n\r\nconst { Option } = Select;\r\n\r\nconst ComboVariations = (props: any) => {\r\n\r\n    const { orderFormData, itemProps, actions } = props;\r\n    const { orderFormId, product } = itemProps;\r\n    const { setSelectedProductsToAddToCart } = actions;\r\n    const [selectedVariation, setSelectedVariation] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (\r\n                typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined' &&\r\n                typeof orderFormData.formSelectedProducts[orderFormId][product.id] !== 'undefined' &&\r\n                typeof orderFormData.formSelectedProducts[orderFormId][product.id].variationID !== 'undefined'\r\n            ) {\r\n                setSelectedVariation(orderFormData.formSelectedProducts[orderFormId][product.id].variationID)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [orderFormData.formPagination[orderFormId]]);\r\n\r\n    if (\r\n        product.type !== 'variable' ||\r\n        typeof orderFormData.formProducts[orderFormId] === 'undefined' ||\r\n        typeof orderFormData.formProducts[orderFormId]['variations'] === 'undefined'\r\n    )\r\n        return (<></>);\r\n\r\n    const variations = orderFormData.formProducts[orderFormId]['variations'][product.id];\r\n\r\n    if (typeof variations === 'undefined' || variations.length <= 0)\r\n        return (<></>);\r\n\r\n    const variationsOptions = variations.map((variation: any) => {\r\n        const name = variation.attributes.map((attributes: any) => {\r\n            return <span key={attributes.id}>{attributes.name + ': ' + attributes.option} </span>\r\n        });\r\n        return <Option key={variation.id} value={variation.id}>{name}</Option>;\r\n    });\r\n\r\n    const onChange = (variationID: number) => {\r\n\r\n        if (typeof variationID !== 'undefined') {\r\n\r\n            // Set selected variation id\r\n            setSelectedVariation(variationID);\r\n\r\n            // Set selected variation name\r\n            const variation = variations.find((variation: any) => {\r\n                return variation.id === variationID;\r\n            });\r\n            const name = variation.attributes.map((attributes: any) => {\r\n                return attributes.name + ' : ' + attributes.option;\r\n            });\r\n\r\n            // Add selected variation into the state selected products\r\n            if (\r\n                typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined' &&\r\n                typeof orderFormData.formSelectedProducts[orderFormId][product.id] !== 'undefined'\r\n            ) {\r\n                setSelectedProductsToAddToCart({\r\n                    [orderFormId]: {\r\n                        ...orderFormData.formSelectedProducts[orderFormId],\r\n                        [product.id]: {\r\n                            ...orderFormData.formSelectedProducts[orderFormId][product.id],\r\n                            productID: product.id,\r\n                            variationID,\r\n                            productTitle: product.name,\r\n                            productType: product.type,\r\n                            name: name.join('<br/>')\r\n                        }\r\n\r\n                    }\r\n                })\r\n            } else {\r\n                setSelectedProductsToAddToCart({\r\n                    [orderFormId]: {\r\n                        ...orderFormData.formSelectedProducts[orderFormId],\r\n                        [product.id]: {\r\n                            productID: product.id,\r\n                            variationID,\r\n                            productTitle: product.name,\r\n                            productType: product.type,\r\n                            name: name.join('<br/>')\r\n                        }\r\n\r\n                    }\r\n                })\r\n            }\r\n\r\n        } else {\r\n\r\n            setSelectedVariation(0);\r\n\r\n            const formSelectedProducts = orderFormData.formSelectedProducts[orderFormId];\r\n            delete formSelectedProducts[product.id];\r\n\r\n            setSelectedProductsToAddToCart({\r\n                [orderFormId]: {\r\n                    ...orderFormData.formSelectedProducts[orderFormId],\r\n                    ...formSelectedProducts\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let selectProps = {}\r\n    if (selectedVariation !== 0)\r\n        selectProps = {\r\n            value: selectedVariation\r\n        }\r\n\r\n    return (\r\n        <Select\r\n            showSearch\r\n            placeholder='Select Variation'\r\n            style={{ width: 250, marginTop: 10 }}\r\n            filterOption={false}\r\n            notFoundContent='No results found'\r\n            allowClear={true}\r\n            {...selectProps}\r\n            onChange={(variationId: any) => onChange(variationId)}\r\n        >\r\n            {variationsOptions}\r\n        </Select>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    orderFormData: store.orderFormData,\r\n    formStyles: store.orderFormData.formStyles[props.orderFormId],\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setSelectedProductsToAddToCart\r\n        // addProductToCartAction\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComboVariations);","import React, { useState, useEffect } from 'react';\r\nimport { InputNumber } from 'antd';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { orderFormDataActions } from '../../../store/actions/';\r\nconst { setSelectedProductsToAddToCart } = orderFormDataActions;\r\n\r\nconst QuantityInput = (props: any) => {\r\n\r\n    const { orderFormData, itemProps, actions } = props;\r\n    const { orderFormId, product } = itemProps;\r\n    const { setSelectedProductsToAddToCart } = actions;\r\n    const [quantity, setQuantity] = useState(1);\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (\r\n                typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined' &&\r\n                typeof orderFormData.formSelectedProducts[orderFormId][product.id] !== 'undefined' &&\r\n                typeof orderFormData.formSelectedProducts[orderFormId][product.id].quantity !== 'undefined'\r\n            ) {\r\n                setQuantity(orderFormData.formSelectedProducts[orderFormId][product.id].quantity)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [orderFormData.formPagination[orderFormId]]);\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (\r\n                typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined' &&\r\n                typeof orderFormData.formSelectedProducts[orderFormId][product.id] !== 'undefined' &&\r\n                typeof orderFormData.formSelectedProducts[orderFormId][product.id].quantity === 'undefined'\r\n            ) {\r\n                setSelectedProductsToAddToCart({\r\n                    [orderFormId]: {\r\n                        ...orderFormData.formSelectedProducts[orderFormId],\r\n                        [product.id]: {\r\n                            ...orderFormData.formSelectedProducts[orderFormId][product.id],\r\n                            quantity\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [orderFormData.formSelectedProducts[orderFormId]]);\r\n\r\n    const onChange = (quantity: number) => {\r\n\r\n        setQuantity(quantity);\r\n\r\n        if (\r\n            typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined' &&\r\n            typeof orderFormData.formSelectedProducts[orderFormId][product.id] !== 'undefined'\r\n        ) {\r\n            setSelectedProductsToAddToCart({\r\n                [orderFormId]: {\r\n                    ...orderFormData.formSelectedProducts[orderFormId],\r\n                    [product.id]: {\r\n                        ...orderFormData.formSelectedProducts[orderFormId][product.id],\r\n                        quantity\r\n                    }\r\n                }\r\n            })\r\n        } else {\r\n            setSelectedProductsToAddToCart({\r\n                [orderFormId]: {\r\n                    ...orderFormData.formSelectedProducts[orderFormId],\r\n                    [product.id]: {\r\n                        productID: product.id,\r\n                        productTitle: product.name,\r\n                        productType: product.type,\r\n                        quantity\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <InputNumber\r\n            min={1}\r\n            defaultValue={1}\r\n            value={quantity}\r\n            onChange={(quantity: any) => onChange(quantity)}\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    orderFormData: store.orderFormData,\r\n    formStyles: store.orderFormData.formStyles[props.orderFormId],\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setSelectedProductsToAddToCart\r\n        // addProductToCartAction\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuantityInput);","\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst ShortDescription = (props: any) => {\r\n\r\n    const { orderFormData, itemProps } = props;\r\n    const { orderFormId, product } = itemProps;\r\n    const [productDescription, setProductDescription] = useState(product.short_description);\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (\r\n                typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined' &&\r\n                Object.keys(orderFormData.formSelectedProducts[orderFormId]).length > 0\r\n            ) {\r\n\r\n                if (typeof orderFormData.formSelectedProducts[orderFormId][product.id] !== 'undefined' && product.type === 'variable') {\r\n                    const variationID = orderFormData.formSelectedProducts[orderFormId][product.id]['variationID'];\r\n\r\n                    if (typeof orderFormData.formProducts[orderFormId]['variations'][product.id] !== 'undefined') {\r\n\r\n                        const variations = orderFormData.formProducts[orderFormId]['variations'][product.id];\r\n                        const variationData = variations.find((variation: any) => {\r\n                            return variation.id === variationID;\r\n                        })\r\n\r\n                        if (typeof variationData !== 'undefined')\r\n                            setProductDescription(variationData.description)\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n                setProductDescription(product.short_description)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [orderFormData.formSelectedProducts[orderFormId]]);\r\n\r\n    return (\r\n        <div\r\n            className='row'\r\n            dangerouslySetInnerHTML={{ __html: productDescription }}>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({}, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShortDescription);\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\ndeclare var Options: any;\r\n\r\nconst Price = (props: any) => {\r\n\r\n    const { orderFormData, itemProps } = props;\r\n    const { orderFormId, product } = itemProps;\r\n    const [priceHtml, setPriceHtml] = useState(product.price_html);\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (\r\n                typeof Options.wholesale_role !== 'undefined' &&\r\n                typeof product.wholesale_data !== 'undefined' &&\r\n                typeof product.wholesale_data.price_html !== 'undefined' &&\r\n                Options.wholesale_role !== '') {\r\n                setPriceHtml(product.wholesale_data.price_html)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [Options.wholesale_role]);\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (\r\n                typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined' &&\r\n                Object.keys(orderFormData.formSelectedProducts[orderFormId]).length > 0\r\n            ) {\r\n\r\n                if (typeof orderFormData.formSelectedProducts[orderFormId][product.id] !== 'undefined' && product.type === 'variable') {\r\n                    const variationID = orderFormData.formSelectedProducts[orderFormId][product.id]['variationID'];\r\n\r\n                    if (typeof orderFormData.formProducts[orderFormId]['variations'][product.id] !== 'undefined') {\r\n\r\n                        const variations = orderFormData.formProducts[orderFormId]['variations'][product.id];\r\n                        const variationData = variations.find((variation: any) => {\r\n                            return variation.id === variationID;\r\n                        })\r\n\r\n                        if (typeof variationData !== 'undefined') {\r\n\r\n                            if (\r\n                                typeof variationData.wholesale_data !== 'undefined' &&\r\n                                typeof variationData.wholesale_data.price_html !== 'undefined'\r\n                            )\r\n                                setPriceHtml(variationData.wholesale_data.price_html)\r\n                            else\r\n                                setPriceHtml(variationData.price_html || variationData.price)\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                if (\r\n                    typeof Options.wholesale_role !== 'undefined' &&\r\n                    typeof product.wholesale_data !== 'undefined' &&\r\n                    typeof product.wholesale_data.price_html !== 'undefined' &&\r\n                    Options.wholesale_role !== '') {\r\n                    setPriceHtml(product.wholesale_data.price_html)\r\n                } else {\r\n                    setPriceHtml(product.price_html)\r\n                }\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n\r\n    }, [orderFormData.formSelectedProducts[orderFormId]]);\r\n\r\n    return (<div dangerouslySetInnerHTML={{ __html: priceHtml }} />);\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({}, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Price);\r\n","\r\nimport React from 'react';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst DisplayVariations = (props: any) => {\r\n\r\n    const { orderFormData, itemProps, selectedVariation, setSelectedVariation, setVariationName } = props;\r\n    const { orderFormId, product } = itemProps;\r\n\r\n    if (product.type !== 'variable')\r\n        return (<></>)\r\n\r\n    const variations = orderFormData.formProducts[orderFormId]['variations'][product.id];\r\n\r\n    if (variations.length <= 0)\r\n        return (<></>);\r\n\r\n    const variationsOptions = variations.map((variation: any) => {\r\n        const name = variation.attributes.map((attributes: any) => {\r\n            return <span key={attributes.id}>{attributes.name + ': ' + attributes.option}</span>\r\n        });\r\n        return <Option key={variation.id} value={variation.id}>{name}</Option>;\r\n    });\r\n\r\n    const onChange = (variationID: number) => {\r\n\r\n        if (typeof variationID !== 'undefined') {\r\n\r\n            const variation = variations.find((variation: any) => {\r\n                return variation.id === variationID;\r\n            });\r\n\r\n            const name = variation.attributes.map((attributes: any) => {\r\n                return attributes.name + ' : ' + attributes.option;\r\n            });\r\n\r\n            setSelectedVariation(variationID);\r\n            setVariationName(name);\r\n\r\n        } else {\r\n            setSelectedVariation(0);\r\n            setVariationName('');\r\n        }\r\n\r\n    }\r\n\r\n    let selectProps = {}\r\n    if (selectedVariation !== 0)\r\n        selectProps = {\r\n            value: selectedVariation\r\n        }\r\n\r\n    return (\r\n        <Select\r\n            showSearch\r\n            placeholder='Select Variation'\r\n            style={{ width: 250, marginTop: 10, marginBottom: 10 }}\r\n            filterOption={false}\r\n            notFoundContent='No results found'\r\n            allowClear={true}\r\n            {...selectProps}\r\n            onChange={(variationId: any) => onChange(variationId)}\r\n        >\r\n            {variationsOptions}\r\n        </Select>\r\n    );\r\n\r\n}\r\n\r\nexport default DisplayVariations;","\r\nimport React, { useState } from 'react';\r\nimport { InputNumber, Button, notification } from 'antd';\r\nimport { ShoppingCartOutlined } from '@ant-design/icons';\r\n\r\nconst AddToCart = (props: any) => {\r\n\r\n    const { orderForm, itemProps, variation, actions, selectedVariation, variationName } = props;\r\n    const { orderFormId, product } = itemProps;\r\n\r\n    const [quantity, setQuantity] = useState(1);\r\n\r\n    return (\r\n        <div style={{ marginBottom: '10px' }}>\r\n            {product.stock_quantity === 0 || (variation && variation.stock_quantity === 0) ?\r\n                <div>\r\n                    <p className=\"outofstock\">Out of Stock</p>\r\n                    <InputNumber min={1} defaultValue={1} style={{ marginRight: '10px' }} />\r\n                    <Button type='primary' disabled>Add To Cart</Button>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <InputNumber\r\n                        min={1}\r\n                        defaultValue={1}\r\n                        onChange={(quantity: any) => setQuantity(quantity)}\r\n                        style={{ marginRight: '10px' }} />\r\n                    <Button\r\n                        type='primary'\r\n                        onClick={(e: any) => {\r\n\r\n                            actions.addProductToCartAction({\r\n                                'product_type': product.type,\r\n                                'product_id': product.id,\r\n                                'variation_id': selectedVariation,\r\n                                'quantity': quantity,\r\n                                successCB: (args: any) => {\r\n\r\n                                    notification['success']({\r\n                                        message: 'Succesfully Added:',\r\n                                        description:\r\n                                            <div>\r\n                                                <div dangerouslySetInnerHTML={{ __html: '<b>' + product.name + '</b> x ' + quantity + '<br/>' + variationName }} />\r\n                                                <a href={orderForm.cart_url} target=\"_blank\"><Button style={{ marginTop: '10px' }} >View Cart<ShoppingCartOutlined /></Button></a>\r\n                                            </div>,\r\n                                        duration: 10\r\n                                    });\r\n\r\n                                    // Update cart total by triggering the added_to_cart custom event of wc.\r\n                                    const fragments: any = args.data.fragments;\r\n                                    const cart_hash: any = args.data.cart_hash;\r\n\r\n                                    const event = new CustomEvent('added_to_cart', { detail: { fragments: fragments, cart_hash: cart_hash } });\r\n                                    document.body.dispatchEvent(event);\r\n\r\n                                    // Update subtotal below the order form.\r\n                                    actions.setCartSubtotal({\r\n                                        [orderFormId]: {\r\n                                            cartSubtotal: args.data.cart_subtotal_markup\r\n                                        }\r\n                                    })\r\n\r\n                                },\r\n                                failCB: () => {\r\n\r\n                                    notification['error']({\r\n                                        message: 'Add to Cart',\r\n                                        description: 'Add to cart failed.',\r\n                                        duration: 10\r\n                                    });\r\n\r\n                                }\r\n                            });\r\n\r\n                        }}>Add To Cart</Button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AddToCart;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Avatar, Select, Modal, Row, Col } from 'antd';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport DisplayVariations from './DisplayVariations';\r\nimport AddToCart from './AddToCart';\r\n\r\nimport { productListActions, orderFormDataActions } from '../../../../store/actions';\r\nconst { addProductToCartAction } = productListActions;\r\nconst { setCartSubtotal } = orderFormDataActions;\r\n\r\nconst { Option } = Select;\r\n\r\ndeclare var Options: any;\r\n\r\nconst ProductModal = (props: any) => {\r\n\r\n    const { orderFormData, itemProps, showModal, setShowModal } = props;\r\n    const { orderFormId, product } = itemProps;\r\n\r\n    const [selectedVariation, setSelectedVariation] = useState(0);\r\n    const [variationName, setVariationName] = useState('');\r\n\r\n    const [productName, setProductName] = useState(\r\n        product.name\r\n    )\r\n    const [imageUrl, setImageUrl] = useState(\r\n        Options.site_url + '/wp-content/uploads/woocommerce-placeholder-300x300.png'\r\n    );\r\n    const [priceHtml, setPriceHtml] = useState(\r\n        product.price_html\r\n    );\r\n\r\n    const [shortDescription, setShortDescription] = useState(\r\n        product.short_description\r\n    );\r\n    const [description, setDescription] = useState(\r\n        product.description\r\n    );\r\n\r\n    const extraProps = {\r\n        selectedVariation,\r\n        setSelectedVariation,\r\n        variationName,\r\n        setVariationName\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (\r\n                selectedVariation > 0 &&\r\n                typeof orderFormData.formProducts[orderFormId] !== 'undefined'\r\n            ) {\r\n                const variations = orderFormData.formProducts[orderFormId]['variations'][product.id];\r\n                const variation = variations.find((variation: any) => {\r\n                    return variation.id === selectedVariation;\r\n                });\r\n\r\n                if (typeof variation !== 'undefined') {\r\n\r\n                    setProductName(\r\n                        typeof variation.name !== 'undefined' ? variation.name : product.name\r\n                    )\r\n\r\n                    if (typeof variation !== 'undefined' && typeof variation.images !== 'undefined' && variation.images.length > 0) {\r\n                        setImageUrl(variation.images[0]['src'])\r\n                    } else if (typeof variation.image !== 'undefined' && variation.image !== null) {\r\n                        setImageUrl(variation.image['src'])\r\n                    }\r\n\r\n                    if (\r\n                        typeof variation.wholesale_data !== 'undefined' &&\r\n                        typeof variation.wholesale_data.price_html !== 'undefined'\r\n                    )\r\n                        setPriceHtml(variation.wholesale_data.price_html)\r\n                    else\r\n                        setPriceHtml(variation.price)\r\n\r\n                    setShortDescription(variation.short_description || \"\")\r\n\r\n                    setDescription(variation.description || \"\")\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                setProductName(product.name)\r\n\r\n                if (product.images.length > 0) {\r\n                    setImageUrl(product.images[0]['src'])\r\n                } else {\r\n                    setImageUrl(\r\n                        Options.site_url + '/wp-content/uploads/woocommerce-placeholder-300x300.png'\r\n                    )\r\n                }\r\n\r\n                if (\r\n                    typeof Options.wholesale_role !== 'undefined' &&\r\n                    typeof product.wholesale_data !== 'undefined' &&\r\n                    typeof product.wholesale_data.price_html !== 'undefined' &&\r\n                    Options.wholesale_role !== '') {\r\n                    setPriceHtml(product.wholesale_data.price_html)\r\n                } else {\r\n                    setPriceHtml(product.price_html)\r\n                }\r\n\r\n                setShortDescription(product.short_description || \"\")\r\n\r\n                setDescription(product.description || \"\")\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [selectedVariation]);\r\n\r\n    return (\r\n        <Modal\r\n            title=\"\"\r\n            visible={showModal}\r\n            onCancel={() => {\r\n                setShowModal(false)\r\n            }}\r\n            width=\"650px\"\r\n            footer={null}>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Avatar src={imageUrl} shape=\"square\" size={200} />\r\n                </Col>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <h2>{productName}</h2>\r\n                    <p style={{ fontSize: \"16px\" }} dangerouslySetInnerHTML={{ __html: priceHtml }}></p>\r\n                    <p style={{ fontSize: \"16px\" }} dangerouslySetInnerHTML={{ __html: shortDescription }}></p>\r\n                    <p style={{ fontSize: \"16px\" }} dangerouslySetInnerHTML={{ __html: description }}></p>\r\n                    <div>\r\n                        <DisplayVariations {...props} {...extraProps} />\r\n                    </div>\r\n                    <div>\r\n                        <AddToCart {...props} {...extraProps} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Modal>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        addProductToCartAction,\r\n        setCartSubtotal\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductModal);\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Avatar, Button } from 'antd';\r\nimport ProductModal from './ProductModal';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\ndeclare var Options: any;\r\n\r\nconst ProductImage = (props: any) => {\r\n\r\n    const { orderFormData, itemProps } = props;\r\n    const { orderFormId, product, getPropValue, formStyles, itemId } = itemProps;\r\n    const [url, setUrl] = useState(\r\n        Options.site_url + '/wp-content/uploads/woocommerce-placeholder-300x300.png'\r\n    );\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const showPopup = getPropValue({ formStyles, item: itemId, prop: 'showPopup' });\r\n\r\n    useEffect(() => {\r\n        try {\r\n            if (product.images.length > 0) {\r\n                setUrl(product.images[0]['src'])\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, [orderFormData.formPagination[orderFormId]])\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (\r\n                typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined' &&\r\n                Object.keys(orderFormData.formSelectedProducts[orderFormId]).length > 0\r\n            ) {\r\n\r\n                if (typeof orderFormData.formSelectedProducts[orderFormId][product.id] !== 'undefined' && product.type === 'variable') {\r\n                    const variationID = orderFormData.formSelectedProducts[orderFormId][product.id]['variationID'];\r\n\r\n                    if (typeof orderFormData.formProducts[orderFormId]['variations'][product.id] !== 'undefined') {\r\n\r\n                        const variations = orderFormData.formProducts[orderFormId]['variations'][product.id];\r\n                        const variationData = variations.find((variation: any) => {\r\n                            return variation.id === variationID;\r\n                        })\r\n\r\n                        if (typeof variationData !== 'undefined') {\r\n                            if (typeof variationData.images !== 'undefined' && variationData.images.length > 0) {\r\n                                setUrl(variationData.images[0]['src'])\r\n                            } else if (typeof variationData.image !== 'undefined' && variationData.image !== null) {\r\n                                setUrl(variationData.image['src'])\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                if (product.images.length > 0) {\r\n                    setUrl(product.images[0]['src'])\r\n                } else {\r\n                    setUrl(\r\n                        Options.site_url + '/wp-content/uploads/woocommerce-placeholder-300x300.png'\r\n                    )\r\n                }\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n\r\n    }, [orderFormData.formSelectedProducts[orderFormId]]);\r\n\r\n    const modalProps = {\r\n        ...props,\r\n        showModal,\r\n        setShowModal\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-image\">\r\n            {showPopup ? <ProductModal {...modalProps} /> : ''}\r\n            {showPopup ?\r\n                <Button type=\"link\" onClick={(e: any) => setShowModal(true)}>\r\n                    <Avatar\r\n                        src={url}\r\n                        shape=\"square\"\r\n                        style={{ width: '48px', height: '48px' }}\r\n                    />\r\n                </Button>\r\n                :\r\n                <Avatar\r\n                    src={url}\r\n                    shape=\"square\"\r\n                    style={{ width: '48px', height: '48px' }}\r\n                />\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({}, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductImage);\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst InStockAmount = (props: any) => {\r\n\r\n    const { orderFormData, itemProps } = props;\r\n    const { orderFormId, product } = itemProps;\r\n    const [stockQuantity, setStockQuantity] = useState(product.stock_quantity);\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (\r\n                typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined' &&\r\n                Object.keys(orderFormData.formSelectedProducts[orderFormId]).length > 0\r\n            ) {\r\n\r\n                if (typeof orderFormData.formSelectedProducts[orderFormId][product.id] !== 'undefined' && product.type === 'variable') {\r\n                    const variationID = orderFormData.formSelectedProducts[orderFormId][product.id]['variationID'];\r\n\r\n                    if (typeof orderFormData.formProducts[orderFormId]['variations'][product.id] !== 'undefined') {\r\n\r\n                        const variations = orderFormData.formProducts[orderFormId]['variations'][product.id];\r\n                        const variationData = variations.find((variation: any) => {\r\n                            return variation.id === variationID;\r\n                        })\r\n\r\n                        if (typeof variationData !== 'undefined')\r\n                            setStockQuantity(variationData.stock_quantity)\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n                setStockQuantity(product.stock_quantity)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n\r\n    }, [orderFormData.formSelectedProducts[orderFormId]]);\r\n\r\n    return (\r\n        <div className=\"instock-amount\">\r\n            {product.stock_status === \"outofstock\" ? \"Out of stock\" : stockQuantity}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({}, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InStockAmount);\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst ProductSku = (props: any) => {\r\n\r\n    const { orderFormData, itemProps } = props;\r\n    const { orderFormId, product } = itemProps;\r\n    const [productSku, setProductSku] = useState(product.sku);\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (\r\n                typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined' &&\r\n                Object.keys(orderFormData.formSelectedProducts[orderFormId]).length > 0\r\n            ) {\r\n\r\n                if (typeof orderFormData.formSelectedProducts[orderFormId][product.id] !== 'undefined' && product.type === 'variable') {\r\n                    const variationID = orderFormData.formSelectedProducts[orderFormId][product.id]['variationID'];\r\n\r\n                    if (typeof orderFormData.formProducts[orderFormId]['variations'][product.id] !== 'undefined') {\r\n\r\n                        const variations = orderFormData.formProducts[orderFormId]['variations'][product.id];\r\n                        const variationData = variations.find((variation: any) => {\r\n                            return variation.id === variationID;\r\n                        })\r\n\r\n                        if (typeof variationData !== 'undefined')\r\n                            setProductSku(variationData.sku)\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n                setProductSku(product.sku)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [orderFormData.formSelectedProducts[orderFormId]]);\r\n\r\n    return (\r\n        <div className=\"product-sku\">\r\n            {productSku}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({}, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductSku);\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button } from 'antd';\r\nimport ProductModal from './ProductModal';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst ProductName = (props: any) => {\r\n\r\n    const { orderFormData, itemProps } = props;\r\n    const { orderFormId, product, getPropValue, formStyles, itemId } = itemProps;\r\n    const [productName, setProductName] = useState(product.name);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const showPopup = getPropValue({ formStyles, item: itemId, prop: 'showPopup' });\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (\r\n                typeof orderFormData.formSelectedProducts[orderFormId] !== 'undefined' &&\r\n                Object.keys(orderFormData.formSelectedProducts[orderFormId]).length > 0\r\n            ) {\r\n\r\n                if (typeof orderFormData.formSelectedProducts[orderFormId][product.id] !== 'undefined' && product.type === 'variable') {\r\n                    const variationID = orderFormData.formSelectedProducts[orderFormId][product.id]['variationID'];\r\n\r\n                    if (typeof orderFormData.formProducts[orderFormId]['variations'][product.id] !== 'undefined') {\r\n\r\n                        const variations = orderFormData.formProducts[orderFormId]['variations'][product.id];\r\n                        const variationData = variations.find((variation: any) => {\r\n                            return variation.id === variationID;\r\n                        })\r\n\r\n                        if (typeof variationData !== 'undefined' && typeof variationData.name !== 'undefined')\r\n                            setProductName(variationData.name)\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n                setProductName(product.name)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [orderFormData.formSelectedProducts[orderFormId]]);\r\n\r\n    const modalProps = {\r\n        ...props,\r\n        showModal,\r\n        setShowModal\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-name\">\r\n            {showPopup ? <ProductModal {...modalProps} /> : ''}\r\n            {showPopup ? <Button type=\"link\" onClick={(e: any) => setShowModal(true)}>{productName}</Button> : productName}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({}, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductName);\r\n","import React from 'react';\r\n\r\nimport AddToCartButton from './Elements/AddToCartButton';\r\nimport AddToCartCheckbox from './Elements/AddToCartCheckbox';\r\nimport ComboVariations from './Elements/ComboVariations';\r\nimport QuantityInput from './Elements/QuantityInput';\r\nimport ShortDescription from './Elements/ShortDescription';\r\nimport Price from './Elements/Price';\r\nimport ProductImage from './Elements/ProductImage';\r\nimport InStockAmount from './Elements/InStockAmount';\r\nimport ProductSku from './Elements/ProductSku';\r\nimport ProductName from './Elements/ProductName';\r\n\r\nconst PrintItem = (props: any) => {\r\n\r\n    const { itemId, product } = props;\r\n\r\n    const itemProps = { ...props }\r\n\r\n    const displayItem = (itemId: string) => {\r\n\r\n        switch (itemId) {\r\n\r\n            // Table Elements\r\n            case 'product-image':\r\n                return (\r\n                    <ProductImage\r\n                        itemProps={itemProps}\r\n                    />\r\n                );\r\n            case 'product-name':\r\n                return (\r\n                    <ProductName\r\n                        itemProps={itemProps}\r\n                    />);\r\n            case 'sku':\r\n                return (\r\n                    <ProductSku\r\n                        itemProps={itemProps}\r\n                    />\r\n                );\r\n            case 'in-stock-amount':\r\n                return (\r\n                    <InStockAmount\r\n                        itemProps={itemProps}\r\n                    />\r\n                );\r\n            case 'price':\r\n                return (\r\n                    <Price\r\n                        itemProps={itemProps}\r\n                    />\r\n                );\r\n            case 'quantity-input':\r\n                return (\r\n                    <QuantityInput\r\n                        itemProps={itemProps}\r\n                    />\r\n                );\r\n            case 'add-to-cart-button':\r\n                return (\r\n                    <AddToCartButton\r\n                        itemProps={itemProps}\r\n                    />\r\n                );\r\n            case 'combo-variation-dropdown':\r\n                return (\r\n                    <ComboVariations\r\n                        itemProps={itemProps}\r\n                    />\r\n                );\r\n\r\n            // case 'standard-variation-dropdowns':\r\n            //     return (<><Select\r\n            //         showSearch\r\n            //         placeholder='Select Variation'\r\n            //         style={{ width: 250, marginTop: 10 }}\r\n            //         filterOption={false}\r\n            //         notFoundContent='No results found'\r\n            //         allowClear={true} >\r\n            //     </Select>\r\n            //     </>);\r\n\r\n            // case 'product-meta':\r\n            //     return (<>Product Meta</>);\r\n            // case 'global-attribute':\r\n            //     return (<>Global Attribute</>);\r\n            case 'short-description':\r\n                return (\r\n                    <ShortDescription\r\n                        itemProps={itemProps}\r\n                    />\r\n                );\r\n            case 'add-to-cart-checkbox':\r\n                return (\r\n                    <AddToCartCheckbox\r\n                        itemProps={itemProps}\r\n                    />\r\n                );\r\n            default:\r\n                return (<></>);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {displayItem(itemId)}\r\n        </>\r\n    )\r\n}\r\n\r\n// Array.from(Array(itemsPerPage).keys()).map\r\n\r\nexport default PrintItem;","import React, { useState, useEffect } from 'react';\r\nimport { Table, Checkbox } from 'antd';\r\nimport PrintItem from './PrintItem';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport { orderFormDataActions } from '../../store/actions/';\r\nimport { orderFormActions } from '../../store/actions';\r\n\r\nconst { fetchProducts } = orderFormActions;\r\nconst { updateSelectedProducts } = orderFormDataActions;\r\n\r\nexport const getPropValue = (props: any) => {\r\n\r\n    const { formStyles, item, prop } = props;\r\n\r\n    if (\r\n        typeof formStyles !== 'undefined' &&\r\n        typeof formStyles[item] !== 'undefined' &&\r\n        typeof formStyles[item]['props'] !== 'undefined' &&\r\n        typeof formStyles[item]['props'][prop] !== 'undefined'\r\n    )\r\n        return formStyles[item]['props'][prop];\r\n    else\r\n        return null;\r\n\r\n}\r\n\r\ndeclare var Options: any;\r\n\r\nconst FormTable = (props: any) => {\r\n\r\n    const { orderFormId, orderFormData, actions } = props;\r\n    const { updateSelectedProducts, fetchProducts } = actions;\r\n\r\n    const [selectedAll, setSelectedAll] = useState(false);\r\n    const [selected, setSelected] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [somethingChanged, setSomethingChanged] = useState(false);\r\n\r\n    const formStyles = orderFormData['formStyles'][orderFormId];\r\n    const formTable = orderFormData['formTable'][orderFormId];\r\n\r\n    let fetching = false;\r\n    if (\r\n        typeof orderFormData['formProducts'][orderFormId] !== 'undefined' &&\r\n        typeof orderFormData['formProducts'][orderFormId]['fetching'] !== 'undefined'\r\n    )\r\n        fetching = orderFormData['formProducts'][orderFormId]['fetching'];\r\n\r\n    let formProducts: any = [];\r\n    if (\r\n        typeof orderFormData['formProducts'][orderFormId] !== 'undefined' &&\r\n        typeof orderFormData['formProducts'][orderFormId]['products'] !== 'undefined'\r\n    )\r\n        formProducts = orderFormData['formProducts'][orderFormId]['products'];\r\n\r\n    // If select all was checked\r\n    useEffect(() => {\r\n\r\n        try {\r\n            if (formTable !== undefined && somethingChanged) {\r\n                setSomethingChanged(false)\r\n                updateSelectedProducts({\r\n                    selected: selectedAll,\r\n                    orderFormData,\r\n                    orderFormId\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [selectedAll]);\r\n\r\n    // When page is changed check if the page has selected all state\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (\r\n                typeof orderFormData.formPagination[orderFormId] !== 'undefined' &&\r\n                typeof orderFormData.formPagination[orderFormId].active_page !== 'undefined') {\r\n                setCurrentPage(orderFormData.formPagination[orderFormId].active_page);\r\n\r\n                if (\r\n                    typeof orderFormData.formPagination[orderFormId].selectedAll !== 'undefined' &&\r\n                    typeof orderFormData.formPagination[orderFormId].selectedAll[currentPage] !== 'undefined'\r\n                ) {\r\n                    setSelected(\r\n                        orderFormData.formPagination[orderFormId].selectedAll[currentPage]\r\n                    );\r\n                }\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [orderFormData.formPagination[orderFormId]]);\r\n\r\n    // When select all was checked save state\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            if (\r\n                typeof orderFormData.formPagination[orderFormId] !== 'undefined' &&\r\n                typeof orderFormData.formPagination[orderFormId].selectedAll !== 'undefined' &&\r\n                typeof orderFormData.formPagination[orderFormId].selectedAll[currentPage] !== 'undefined'\r\n            ) {\r\n                setSelected(\r\n                    orderFormData.formPagination[orderFormId].selectedAll[currentPage]\r\n                );\r\n                setSelectedAll(\r\n                    orderFormData.formPagination[orderFormId].selectedAll[currentPage]\r\n                );\r\n            } else {\r\n                setSelected(false);\r\n                setSelectedAll(false);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [currentPage]);\r\n\r\n    if (formTable === undefined)\r\n        return (<></>);\r\n\r\n    const columns = Object.keys(formTable['itemIds']).map((key: any) => {\r\n\r\n        const item = formTable['itemIds'][key];\r\n\r\n        switch (item) {\r\n            case 'product-image':\r\n                return {\r\n                    title: getPropValue({ formStyles, item, prop: 'columnHeading' }) || 'Product Image',\r\n                    dataIndex: 'product-image',\r\n                    key: 'product-image'\r\n                };\r\n            case 'product-name':\r\n                return {\r\n                    title: getPropValue({ formStyles, item, prop: 'columnHeading' }) || 'Product Name',\r\n                    dataIndex: 'product-name',\r\n                    key: 'product-name',\r\n                    sorter: getPropValue({ formStyles, item, prop: 'sort' }) || false\r\n                };\r\n            case 'sku':\r\n                return {\r\n                    title: getPropValue({ formStyles, item, prop: 'columnHeading' }) || 'SKU',\r\n                    dataIndex: 'sku',\r\n                    key: 'sku',\r\n                    // sorter: getPropValue({ formStyles, item, prop: 'sort' }) || false\r\n                };\r\n            case 'in-stock-amount':\r\n                return {\r\n                    title: getPropValue({ formStyles, item, prop: 'columnHeading' }) || 'In Stock Amount',\r\n                    dataIndex: 'in-stock-amount',\r\n                    key: 'in-stock-amount',\r\n                    // sorter: getPropValue({ formStyles, item, prop: 'sort' }) || false\r\n                };\r\n            case 'price':\r\n                return {\r\n                    title: getPropValue({ formStyles, item, prop: 'columnHeading' }) || 'Price',\r\n                    dataIndex: 'price',\r\n                    key: 'price',\r\n                    // sorter: getPropValue({ formStyles, item, prop: 'sort' }) || false\r\n                };\r\n            case 'quantity-input':\r\n                return {\r\n                    title: getPropValue({ formStyles, item, prop: 'columnHeading' }) || 'Quantity',\r\n                    dataIndex: 'quantity-input',\r\n                    key: 'quantity-input'\r\n                };\r\n            case 'add-to-cart-button':\r\n                return {\r\n                    title: getPropValue({ formStyles, item, prop: 'columnHeading' }) || 'Add To Cart',\r\n                    dataIndex: 'add-to-cart-button',\r\n                    key: 'add-to-cart-button'\r\n                };\r\n            case 'combo-variation-dropdown':\r\n                return {\r\n                    title: getPropValue({ formStyles, item, prop: 'columnHeading' }) || 'Combo Variation Dropdown',\r\n                    dataIndex: 'combo-variation-dropdown',\r\n                    key: 'combo-variation-dropdown'\r\n                };\r\n            // case 'standard-variation-dropdowns':\r\n            //     return {\r\n            //         title: getPropValue({ formStyles, item, prop: 'columnHeading' }) || '',\r\n            //         dataIndex: 'standard-variation-dropdowns',\r\n            //         key: 'standard-variation-dropdowns'\r\n            //     };\r\n            case 'product-meta':\r\n                return {\r\n                    title: getPropValue({ formStyles, item, prop: 'columnHeading' }) || '',\r\n                    dataIndex: 'product-meta',\r\n                    key: 'product-meta'\r\n                };\r\n            case 'global-attribute':\r\n                return {\r\n                    title: getPropValue({ formStyles, item, prop: 'columnHeading' }) || '',\r\n                    dataIndex: 'global-attribute',\r\n                    key: 'global-attribute'\r\n                };\r\n            case 'short-description':\r\n                return {\r\n                    title: getPropValue({ formStyles, item, prop: 'columnHeading' }) || 'Short Description',\r\n                    dataIndex: 'short-description',\r\n                    key: 'short-description'\r\n                };\r\n            case 'add-to-cart-checkbox':\r\n                return {\r\n                    title: <Checkbox\r\n                        checked={selected}\r\n                        onChange={() => {\r\n                            setSelectedAll(!selectedAll)\r\n                            setSomethingChanged(true);\r\n                        }} />,\r\n                    dataIndex: 'add-to-cart-checkbox',\r\n                    key: 'add-to-cart-checkbox'\r\n                };\r\n            default:\r\n                return {};\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n    const dataSource = formProducts !== undefined && formProducts.length > 0 ? formProducts.map((product: any) => {\r\n        const printItemProps = { orderFormId, product, getPropValue, formStyles }\r\n        return {\r\n            key: product.id,\r\n            'product-image': <PrintItem {...printItemProps} itemId='product-image' />,\r\n            'product-name': <PrintItem {...printItemProps} itemId='product-name' />,\r\n            'sku': <PrintItem {...printItemProps} itemId='sku' />,\r\n            'in-stock-amount': <PrintItem {...printItemProps} itemId='in-stock-amount' />,\r\n            'price': <PrintItem {...printItemProps} itemId='price' />,\r\n            'quantity-input': <PrintItem {...printItemProps} itemId='quantity-input' />,\r\n            'add-to-cart-button': <PrintItem {...printItemProps} itemId='add-to-cart-button' />,\r\n            'combo-variation-dropdown': <PrintItem {...printItemProps} itemId='combo-variation-dropdown' />,\r\n            // 'standard-variation-dropdowns': <PrintItem {...printItemProps} itemId='standard-variation-dropdowns' />,\r\n            'product-meta': <PrintItem {...printItemProps} itemId='product-meta' />,\r\n            'global-attribute': <PrintItem {...printItemProps} itemId='global-attribute' />,\r\n            'short-description': <PrintItem {...printItemProps} itemId='short-description' />,\r\n            'add-to-cart-checkbox': <PrintItem {...printItemProps} selectedAll={selectedAll} somethingChanged={somethingChanged} itemId='add-to-cart-checkbox' />\r\n        };\r\n    }) : [];\r\n\r\n    let tableProps: any = {\r\n        loading: fetching,\r\n        dataSource: columns.length > 0 ? dataSource : [],\r\n        columns: columns,\r\n        pagination: false\r\n    }\r\n\r\n    const searchInput = typeof orderFormData['formFilters'][orderFormId] !== 'undefined' &&\r\n        typeof orderFormData['formFilters'][orderFormId]['searchInput'] !== 'undefined' ?\r\n        orderFormData['formFilters'][orderFormId]['searchInput'] : '';\r\n\r\n    const selectedCategory = typeof orderFormData['formFilters'][orderFormId] !== 'undefined' &&\r\n        typeof orderFormData['formFilters'][orderFormId]['selectedCategory'] !== 'undefined' ?\r\n        orderFormData['formFilters'][orderFormId]['selectedCategory'] : '';\r\n\r\n    const handleSorting = (pagination: any, filters: any, sorter: any) => {\r\n\r\n        const sort_order = sorter.order === 'ascend' ? 'asc' : 'desc';\r\n        const sort_by = sorter.field === 'product-name' ? 'title' : '';\r\n\r\n        fetchProducts({\r\n            sort_order: sort_order,\r\n            sort_by: sort_by,\r\n            search: searchInput,\r\n            category: selectedCategory,\r\n            active_page: orderFormData.formPagination[orderFormId]['active_page'] || 1,\r\n            searching: 'no',\r\n            show_all: false,\r\n            attributes: { id: orderFormId },\r\n            wholesale_role: Options.wholesale_role,\r\n            per_page: orderFormData.formSettings[orderFormId]['products_per_page'] || 10,\r\n            form_settings: orderFormData.formSettings[orderFormId]\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='form-table'>\r\n            <Table\r\n                className=\"wwof-order-form\"\r\n                {...tableProps}\r\n\r\n                onChange={(pagination: any, filters: any, sorter: any) => handleSorting(pagination, filters, sorter)}\r\n            />\r\n        </div >\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    orderForm: store.orderForm,\r\n    orderFormData: store.orderFormData\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        updateSelectedProducts,\r\n        fetchProducts\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormTable);","import React, { useEffect } from 'react';\r\n\r\nimport FormHeaderFooter from './components/FormHeaderFooter';\r\nimport FormTable from './components/FormTable';\r\n\r\nimport { Tooltip } from 'antd';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nimport './styles.js';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport { orderFormActions, orderFormDataActions } from './store/actions/';\r\n\r\nconst { fetchProducts, fetchCategories } = orderFormActions;\r\nconst { fetchOrderFormData } = orderFormDataActions;\r\n\r\ndeclare var Options: any;\r\n\r\nconst App = (props: any) => {\r\n\r\n  const { orderForm, orderFormData, attributes } = props;\r\n  const { fetchProducts, fetchCategories, fetchOrderFormData } = props.actions;\r\n\r\n  const postId = parseInt(attributes.id);\r\n\r\n  useEffect(() => {\r\n\r\n    try {\r\n\r\n      // Fetch Order Form\r\n      if (attributes.id !== undefined && postId > 0) {\r\n\r\n        fetchOrderFormData({\r\n          id: postId,\r\n          successCB: (response: any) => { },\r\n          failCB: () => {\r\n            console.log('Data cannot be fetched!');\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }, [attributes.id]);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    try {\r\n\r\n      if (typeof orderFormData.formSettings[postId] !== 'undefined') {\r\n\r\n        let sort_by = 'date';\r\n        if (\r\n          typeof orderFormData.formSettings[postId].sort_by !== 'undefined' &&\r\n          orderFormData.formSettings[postId].sort_by !== 'default'\r\n        )\r\n          sort_by = orderFormData.formSettings[postId].sort_by;\r\n\r\n        fetchProducts({\r\n          sort_order: orderFormData.formSettings[postId].sort_order || 'desc',\r\n          sort_by,\r\n          search: orderForm.search,\r\n          category: orderForm.selected_category,\r\n          active_page: 1,\r\n          searching: 'no',\r\n          products: attributes.products || \"\",\r\n          categories: attributes.categories || \"\",\r\n          show_all: orderForm.show_all,\r\n          attributes,\r\n          wholesale_role: Options.wholesale_role,\r\n          per_page: orderFormData.formSettings[postId]['products_per_page'] || 10,\r\n          form_settings: orderFormData.formSettings[postId]\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }, [orderFormData.formSettings[postId]]);\r\n\r\n  useEffect(() => {\r\n\r\n    try {\r\n\r\n      fetchCategories({\r\n        categories: orderForm.categories\r\n      });\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }, []);\r\n\r\n  const OrderFormTitle = () => {\r\n\r\n    if (\r\n      typeof orderFormData !== 'undefined' &&\r\n      typeof orderFormData.formTitle !== 'undefined' &&\r\n      typeof orderFormData.formTitle[postId] !== 'undefined'\r\n    ) {\r\n\r\n      // Show tooltip for draft order form.\r\n      if (\r\n        typeof attributes.post_status !== 'undefined' &&\r\n        attributes.post_status === 'draft'\r\n      )\r\n        return (\r\n          <h2>\r\n            {orderFormData.formTitle[postId]}\r\n            <Tooltip title='This Order Form is in \"Draft\" status. This form will only be visible only for admin user.'>\r\n              <InfoCircleOutlined style={{ fontSize: '18px', marginLeft: '10px', color: 'red' }} />\r\n            </Tooltip>\r\n          </h2>\r\n        )\r\n      else\r\n        return (\r\n          <h2>{orderFormData.formTitle[postId]}</h2>\r\n        )\r\n    } else return (<></>)\r\n\r\n  };\r\n\r\n  if (attributes.id !== undefined && postId > 0) {\r\n\r\n    return (\r\n      <>\r\n        <OrderFormTitle />\r\n        {Object.keys(orderFormData.formHeader).length > 0 ? <FormHeaderFooter section=\"formHeader\" orderFormId={postId} /> : ''}\r\n        {Object.keys(orderFormData.formTable).length > 0 ? <FormTable orderFormId={postId} /> : ''}\r\n        {Object.keys(orderFormData.formFooter).length > 0 ? <FormHeaderFooter section=\"formFooter\" orderFormId={postId} /> : ''}\r\n      </>\r\n    )\r\n\r\n  } else return (<></>);\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n  orderForm: store.orderForm,\r\n  orderFormData: store.orderFormData,\r\n  attributes: props.attributes\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  actions: bindActionCreators({\r\n    fetchProducts,\r\n    fetchCategories,\r\n    fetchOrderFormData\r\n  }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { EOrderFormActionTypes } from '../actions/orderFormActions';\r\n\r\nconst defaults = {\r\n    products: [],\r\n    categories: [],\r\n    variations: [],\r\n    fetching: true,\r\n    settings: [],\r\n    cart_subtotal: '',\r\n    sort_order: '',\r\n    cart_url: '',\r\n    loading_more: false,\r\n    show_all: false,\r\n    fetch_error_msg: '',\r\n    attributes: {\r\n        show_search: '',\r\n        products: [],\r\n        categories: []\r\n    }\r\n};\r\n\r\nexport default function (state: any = defaults, action: any) {\r\n\r\n    switch (action.type) {\r\n\r\n        case EOrderFormActionTypes.SET_FETCHING:\r\n\r\n            return {\r\n                ...state,\r\n                fetching: action.payload\r\n            }\r\n\r\n        case EOrderFormActionTypes.SET_APP_STATE:\r\n\r\n            const { products, variations, settings, cart_subtotal, cart_url, message, attributes, sort_order } = action.payload.data;\r\n            const fetching = false;\r\n            const fetch_error_msg = message;\r\n\r\n            return {\r\n                ...state,\r\n                products,\r\n                variations,\r\n                settings,\r\n                cart_url,\r\n                cart_subtotal,\r\n                fetch_error_msg,\r\n                fetching,\r\n                attributes,\r\n                sort_order\r\n            };\r\n\r\n        case EOrderFormActionTypes.SET_CART_SUBTOTAL:\r\n\r\n            return {\r\n                ...state,\r\n                cart_subtotal: action.payload.data\r\n            }\r\n\r\n        case EOrderFormActionTypes.SET_CATEGORIES:\r\n\r\n            const { categories } = action.payload.data;\r\n\r\n            return {\r\n                ...state,\r\n                categories\r\n            };\r\n\r\n        case EOrderFormActionTypes.SET_CART_SUB_TOTAL:\r\n\r\n            return {\r\n                ...state,\r\n                cart_subtotal: action.payload\r\n            };\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}","import { EOrderFormDataActionTypes } from '../actions/orderFormDataActions';\r\n\r\n// interface IFormTitle {\r\n//     id: string | number,\r\n//     title: string\r\n// }\r\n// interface IFormHeaderFooter {\r\n//     id: string | number,\r\n//     title: string,\r\n//     rows: Array<string | number>\r\n// }\r\n// interface IFormTable {\r\n//     id: string | number,\r\n//     title: string,\r\n//     itemIds: Array<string>\r\n// }\r\n// interface IOrderFormData {\r\n//     formTitle: IFormTitle,\r\n//     formFooter: IFormHeaderFooter,\r\n//     formHeader: IFormHeaderFooter,\r\n//     formTable: IFormTable,\r\n//     formStyles: [],\r\n//     formSettings: []\r\n// }\r\n\r\nconst defaults = {\r\n    formTitle: [],\r\n    formFooter: [],\r\n    formHeader: [],\r\n    formTable: [],\r\n    formStyles: [],\r\n    formSettings: [],\r\n    formProducts: [],\r\n    formPagination: [],\r\n    formFilters: [],\r\n    formSelectedProducts: [],\r\n    formCartSubtotal: []\r\n};\r\n\r\nexport default function (state: any = defaults, action: any) {\r\n\r\n    switch (action.type) {\r\n\r\n        case EOrderFormDataActionTypes.SET_ORDER_FORM_DATA:\r\n\r\n            const { formTitle, formFooter, formHeader, formTable, formStyles, formSettings } = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                formTitle: {\r\n                    ...state.formTitle,\r\n                    ...formTitle\r\n                },\r\n                formFooter: {\r\n                    ...state.formFooter,\r\n                    ...formFooter\r\n                },\r\n                formHeader: {\r\n                    ...state.formHeader,\r\n                    ...formHeader\r\n                },\r\n                formTable: {\r\n                    ...state.formTable,\r\n                    ...formTable\r\n                },\r\n                formStyles: {\r\n                    ...state.formStyles,\r\n                    ...formStyles\r\n                },\r\n                formSettings: {\r\n                    ...state.formSettings,\r\n                    ...formSettings\r\n                }\r\n            };\r\n\r\n        case EOrderFormDataActionTypes.SET_ORDER_FORM_PRODUCTS:\r\n\r\n            return {\r\n                ...state,\r\n                formProducts: {\r\n                    ...state.formProducts,\r\n                    ...action.payload\r\n                }\r\n            };\r\n\r\n        case EOrderFormDataActionTypes.SET_ORDER_FORM_PAGINATION:\r\n\r\n            return {\r\n                ...state,\r\n                formPagination: {\r\n                    ...state.formPagination,\r\n                    [action.payload.orderFormId]: {\r\n                        ...state.formPagination[action.payload.orderFormId],\r\n                        ...action.payload.data\r\n                    }\r\n                }\r\n            };\r\n\r\n        case EOrderFormDataActionTypes.SET_PAGE_SELECTED_ALL:\r\n\r\n            const { orderFormId, data } = action.payload;\r\n            return {\r\n                ...state,\r\n                formPagination: {\r\n                    ...state.formPagination,\r\n                    [orderFormId]: {\r\n                        ...state.formPagination[orderFormId],\r\n                        selectedAll: {\r\n                            ...state.formPagination[orderFormId].selectedAll,\r\n                            ...data\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n        case EOrderFormDataActionTypes.SET_ORDER_FORM_FILTERS:\r\n\r\n            return {\r\n                ...state,\r\n                formFilters: {\r\n                    ...state.formFilters,\r\n                    ...action.payload\r\n                }\r\n            };\r\n\r\n        case EOrderFormDataActionTypes.SET_ORDER_FORM_SELECTED_PRODUCTS_TO_ADD_CART:\r\n\r\n            return {\r\n                ...state,\r\n                formSelectedProducts: {\r\n                    ...state.formSelectedProducts,\r\n                    ...action.payload\r\n                }\r\n            };\r\n\r\n        case EOrderFormDataActionTypes.SET_ORDER_FORM_CART_SUBTOTAL:\r\n\r\n            return {\r\n                ...state,\r\n                formCartSubtotal: {\r\n                    ...state.formCartSubtotal,\r\n                    ...action.payload\r\n                }\r\n            };\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\n\r\n// Reducers\r\nimport orderFormReducer from './orderFormReducer';\r\nimport orderFormDataReducer from './orderFormDataReducer';\r\n\r\nconst reducers = combineReducers({\r\n    orderForm: orderFormReducer,\r\n    orderFormData: orderFormDataReducer\r\n});\r\n\r\nexport default reducers;","import { takeEvery, all, put, call } from \"redux-saga/effects\";\r\nimport { EOrderFormActionTypes } from '../actions/orderFormActions';\r\nimport { orderFormActions, orderFormDataActions } from '../actions';\r\n\r\nimport axios from 'axios';\r\n\r\ndeclare var Options: any;\r\n\r\nexport function* fetchProducts(action: any) {\r\n\r\n    const { search, category, active_page, searching, sort_order, show_all, products, categories, attributes, wholesale_role, per_page, sort_by, form_settings } = action.payload;\r\n\r\n    try {\r\n\r\n        if (attributes.id !== undefined) {\r\n            yield (\r\n                put(orderFormDataActions.setOrderFormProducts({\r\n                    [attributes.id]: {\r\n                        fetching: true\r\n                    }\r\n                }))\r\n            );\r\n        } else {\r\n            yield (put(orderFormActions.setFetching(true)));\r\n        }\r\n\r\n        const qs = require('qs');\r\n        const response = yield call(() =>\r\n\r\n            axios.post(Options.ajax, qs.stringify({\r\n                'action': 'wwof_api_get_products',\r\n                'search': search,\r\n                'category': category,\r\n                'page': active_page,\r\n                'searching': searching || 'no',\r\n                'sort_order': sort_order,\r\n                'sort_by': sort_by,\r\n                'products': products,\r\n                'categories': categories,\r\n                'show_all': show_all,\r\n                'wholesale_role': wholesale_role,\r\n                'per_page': per_page,\r\n                'cart_subtotal_tax': form_settings['cart_subtotal_tax'] || 'incl'\r\n            }))\r\n        );\r\n\r\n        if (response && response.data) {\r\n\r\n            const data = { ...response.data, attributes, active_page, sort_order };\r\n            const total_products = parseInt(response.data.total_products);\r\n\r\n            if (\r\n                attributes.id !== undefined &&\r\n                attributes.id !== 0\r\n            ) {\r\n\r\n                yield (\r\n                    put(orderFormActions.setAppState({ data }))\r\n                );\r\n\r\n                yield (\r\n                    put(orderFormDataActions.setCartSubtotal({\r\n                        [attributes.id]: {\r\n                            cartSubtotal: data.cart_subtotal\r\n                        }\r\n                    }))\r\n                );\r\n\r\n                yield (\r\n                    put(orderFormDataActions.setOrderFormProducts({\r\n                        [attributes.id]: {\r\n                            fetching: false,\r\n                            products: response.data.products,\r\n                            variations: response.data.variations\r\n                        }\r\n                    }))\r\n                );\r\n\r\n                if (typeof response.data.settings !== 'undefined') {\r\n                    yield (\r\n                        put(orderFormDataActions.setOrderFormPagination({\r\n                            orderFormId: attributes.id,\r\n                            data: {\r\n                                active_page,\r\n                                per_page: per_page,//response.data.settings['wwof_general_products_per_page'],\r\n                                total_products,\r\n                                total_page: response.data.total_page\r\n                            }\r\n                        }))\r\n                    );\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* fetchCategories(action: any) {\r\n\r\n    const { categories } = action.payload;\r\n\r\n    try {\r\n\r\n        const qs = require('qs');\r\n        const response = yield call(() =>\r\n\r\n            axios.post(Options.ajax, qs.stringify({\r\n                'action': 'wwof_api_get_categories',\r\n                'categories': categories\r\n            }))\r\n        );\r\n\r\n        if (response && response.data) {\r\n\r\n            const data = { ...response.data };\r\n\r\n            yield put(\r\n                orderFormActions.setCategories({ data })\r\n            );\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* fetchVariations(action: any) {\r\n\r\n    const { product_id, page, search_string, successCB, failCB } = action.payload;\r\n\r\n    try {\r\n\r\n        const qs = require('qs');\r\n        const response = yield call(() =>\r\n\r\n            axios.post(Options.ajax, qs.stringify({\r\n                'action': 'wwof_api_get_variations',\r\n                'product_id': product_id,\r\n                'page': page,\r\n                'search': search_string\r\n            }))\r\n\r\n        );\r\n\r\n        if (response && response.data.status === 'success') {\r\n\r\n            if (typeof successCB === \"function\")\r\n                successCB(response);\r\n\r\n        } else {\r\n\r\n            if (typeof successCB === \"function\")\r\n                failCB();\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport const actionListener = [\r\n    takeEvery(EOrderFormActionTypes.FETCH_PRODUCTS, fetchProducts),\r\n    takeEvery(EOrderFormActionTypes.FETCH_CATEGORIES, fetchCategories),\r\n    takeEvery(EOrderFormActionTypes.FETCH_VARIATIONS, fetchVariations)\r\n];","import { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport { EOrderFormDataActionTypes } from '../actions/orderFormDataActions';\r\nimport { orderFormDataActions } from '../actions';\r\n\r\nimport axios from 'axios';\r\n\r\ndeclare var Options: any;\r\n\r\nexport function* fetchOrderFormData(action: any) {\r\n\r\n    try {\r\n\r\n        const { id, successCB, failCB } = action.payload;\r\n\r\n        const response = yield call(() =>\r\n            axios.get(`${Options.site_url}/wp-json/wwof/v1/order_forms/${id}`)\r\n        );\r\n\r\n        if (response && response.data) {\r\n\r\n            yield put(orderFormDataActions.setOrderFormData({\r\n                formTitle: {\r\n                    [id]: response.data.title\r\n                },\r\n                formFooter: {\r\n                    [id]: response.data.meta.editor_area.formFooter\r\n                },\r\n                formHeader: {\r\n                    [id]: response.data.meta.editor_area.formHeader\r\n                },\r\n                formTable: {\r\n                    [id]: response.data.meta.editor_area.formTable\r\n                },\r\n                formStyles: {\r\n                    [id]: response.data.meta.styles\r\n                },\r\n                formSettings: {\r\n                    [id]: response.data.meta.settings\r\n                }\r\n            }));\r\n\r\n            if (typeof successCB === \"function\")\r\n                successCB(response);\r\n\r\n        } else {\r\n\r\n            if (typeof failCB === \"function\")\r\n                failCB();\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* updateSelectedProducts(action: any) {\r\n\r\n    try {\r\n\r\n        const { selected, orderFormData, orderFormId, product } = action.payload;\r\n        let updatedSelectedProducts: any = orderFormData.formSelectedProducts || {};\r\n\r\n        if (selected) {\r\n\r\n            if (typeof product !== 'undefined') {\r\n\r\n                if (\r\n                    typeof updatedSelectedProducts[orderFormId] !== 'undefined' &&\r\n                    typeof updatedSelectedProducts[orderFormId][product.id] !== 'undefined'\r\n                ) {\r\n\r\n                    updatedSelectedProducts = {\r\n                        ...updatedSelectedProducts,\r\n                        [orderFormId]: {\r\n                            ...updatedSelectedProducts[orderFormId],\r\n                            [product.id]: {\r\n                                ...updatedSelectedProducts[orderFormId][product.id],\r\n                                productID: product.id,\r\n                                productTitle: product.name,\r\n                                productType: product.type\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                } else {\r\n\r\n                    updatedSelectedProducts = {\r\n                        ...updatedSelectedProducts,\r\n                        [orderFormId]: {\r\n                            ...updatedSelectedProducts[orderFormId],\r\n                            [product.id]: {\r\n                                productID: product.id,\r\n                                productTitle: product.name,\r\n                                productType: product.type\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                }\r\n\r\n                if (typeof orderFormData.formPagination[orderFormId] !== 'undefined') {\r\n                    yield put(orderFormDataActions.setPageSelectedAll({\r\n                        orderFormId,\r\n                        data: {\r\n                            [orderFormData.formPagination[orderFormId].active_page]: false\r\n                        }\r\n                    }));\r\n                }\r\n\r\n            } else if (\r\n                typeof orderFormData.formProducts[orderFormId] !== 'undefined' &&\r\n                typeof orderFormData.formProducts[orderFormId]['products'] !== 'undefined'\r\n            ) {\r\n\r\n                orderFormData.formProducts[orderFormId]['products'].map((product: any, key: number) => {\r\n\r\n                    if (\r\n                        typeof updatedSelectedProducts[orderFormId] !== 'undefined' &&\r\n                        typeof updatedSelectedProducts[orderFormId][product.id] !== 'undefined'\r\n                    ) {\r\n\r\n                        updatedSelectedProducts = {\r\n                            ...updatedSelectedProducts,\r\n                            [orderFormId]: {\r\n                                ...updatedSelectedProducts[orderFormId],\r\n                                [product.id]: {\r\n                                    ...updatedSelectedProducts[orderFormId][product.id],\r\n                                    productID: product.id,\r\n                                    productTitle: product.name,\r\n                                    productType: product.type,\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                    } else {\r\n\r\n                        updatedSelectedProducts = {\r\n                            ...updatedSelectedProducts,\r\n                            [orderFormId]: {\r\n                                ...updatedSelectedProducts[orderFormId],\r\n                                [product.id]: {\r\n                                    productID: product.id,\r\n                                    productTitle: product.name,\r\n                                    productType: product.type,\r\n                                }\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                });\r\n\r\n                if (typeof orderFormData.formPagination[orderFormId] !== 'undefined') {\r\n                    yield put(orderFormDataActions.setPageSelectedAll({\r\n                        orderFormId,\r\n                        data: {\r\n                            [orderFormData.formPagination[orderFormId].active_page]: selected\r\n                        }\r\n                    }));\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            let formSelectedProductsCopy = updatedSelectedProducts[orderFormId];\r\n\r\n            // Unselect product checkbox\r\n            if (typeof product !== 'undefined') {\r\n\r\n                delete formSelectedProductsCopy[product.id];\r\n\r\n                if (typeof orderFormData.formPagination[orderFormId] !== 'undefined') {\r\n                    yield put(orderFormDataActions.setPageSelectedAll({\r\n                        orderFormId,\r\n                        data: {\r\n                            [orderFormData.formPagination[orderFormId].active_page]: false\r\n                        }\r\n                    }));\r\n                }\r\n\r\n                // Unselect All checkbox\r\n            } else if (\r\n                typeof orderFormData.formProducts[orderFormId] !== 'undefined' &&\r\n                typeof orderFormData.formProducts[orderFormId]['products'] !== 'undefined'\r\n            ) {\r\n\r\n                orderFormData.formProducts[orderFormId]['products'].map((product: any, key: number) => {\r\n                    delete formSelectedProductsCopy[product.id];\r\n                });\r\n\r\n                if (typeof orderFormData.formPagination[orderFormId] !== 'undefined') {\r\n                    yield put(orderFormDataActions.setPageSelectedAll({\r\n                        orderFormId,\r\n                        data: {\r\n                            [orderFormData.formPagination[orderFormId].active_page]: selected\r\n                        }\r\n                    }));\r\n                }\r\n\r\n            }\r\n\r\n            updatedSelectedProducts = {\r\n                [orderFormId]: {\r\n                    ...formSelectedProductsCopy\r\n                }\r\n            };\r\n\r\n        }\r\n\r\n        yield put(orderFormDataActions.setSelectedProductsToAddToCart(updatedSelectedProducts));\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport const actionListener = [\r\n    takeEvery(EOrderFormDataActionTypes.FETCH_ORDER_FORM_DATA, fetchOrderFormData),\r\n    takeEvery(EOrderFormDataActionTypes.UPDATE_ORDER_FORM_SELECTED_PRODUCTS, updateSelectedProducts),\r\n];","import { takeEvery, call } from \"redux-saga/effects\";\r\nimport { EProductListActionTypes } from '../actions/productListActions';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\ndeclare var Options: any;\r\n\r\nexport function* addProductToCart(action: any) {\r\n\r\n    const { product_type, product_id, variation_id, quantity, successCB, failCB, form_settings } = action.payload;\r\n\r\n    try {\r\n\r\n        const qs = require('qs');\r\n        let cart_subtotal_tax = 'incl';\r\n\r\n        if (typeof form_settings !== 'undefined' && typeof form_settings['cart_subtotal_tax'] !== 'undefined')\r\n            cart_subtotal_tax = form_settings['cart_subtotal_tax'];\r\n\r\n        const response = yield call(() =>\r\n\r\n            axios.post(Options.ajax, qs.stringify({\r\n                'action': 'wwof_add_product_to_cart',\r\n                'product_type': product_type,\r\n                'product_id': product_id,\r\n                'variation_id': variation_id,\r\n                'quantity': quantity,\r\n                'cart_subtotal_tax': cart_subtotal_tax\r\n            }))\r\n\r\n        );\r\n\r\n        if (response && response.data.status === 'success') {\r\n\r\n            if (typeof successCB === \"function\")\r\n                successCB(response);\r\n\r\n        } else if (response.data.status === 'failed') {\r\n\r\n            if (typeof failCB === \"function\")\r\n                failCB();\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* addProductsToCart(action: any) {\r\n\r\n    const { products, successCB, failCB, form_settings } = action.payload;\r\n\r\n    try {\r\n\r\n        const qs = require('qs');\r\n        let cart_subtotal_tax = 'incl';\r\n\r\n        if (typeof form_settings !== 'undefined' && typeof form_settings['cart_subtotal_tax'] !== 'undefined')\r\n            cart_subtotal_tax = form_settings['cart_subtotal_tax'];\r\n\r\n        const response = yield call(() =>\r\n\r\n            axios.post(Options.ajax, qs.stringify({\r\n                'action': 'wwof_add_products_to_cart',\r\n                'products': products,\r\n                'cart_subtotal_tax': cart_subtotal_tax\r\n            }))\r\n\r\n        );\r\n\r\n        if (response && response.data.status === 'success') {\r\n\r\n            if (typeof successCB === \"function\")\r\n                successCB(response);\r\n\r\n        } else {\r\n\r\n            if (typeof failCB === \"function\")\r\n                failCB();\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const actionListener = [\r\n    takeEvery(EProductListActionTypes.ADD_PRODUCT_TO_CART, addProductToCart),\r\n    takeEvery(EProductListActionTypes.ADD_PRODUCTS_TO_CART, addProductsToCart)\r\n];","import { all } from \"redux-saga/effects\";\r\n\r\n// Sagas\r\nimport * as orderForm from \"./orderFormSaga\";\r\nimport * as orderFormData from \"./orderFormDataSaga\";\r\nimport * as productList from \"./productListSaga\";\r\n\r\nexport default function* rootSaga() {\r\n    yield all([...orderForm.actionListener]);\r\n    yield all([...orderFormData.actionListener]);\r\n    yield all([...productList.actionListener]);\r\n}","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport reducers from \"./reducers\";\r\nimport rootSaga from \"./sagas\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\n// redux dev tools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// mount it on the Store\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n)\r\n\r\n// then run the saga\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n// Store\r\nimport store from \"./store\";\r\nimport { Provider } from 'react-redux';\r\n\r\n// Find all DOM containers, and render order form into them.\r\ndocument.querySelectorAll('.order-form')\r\n  .forEach((domContainer: any) => {\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <App attributes={JSON.parse(domContainer.attributes['data-order-form-attr'].value)} />\r\n      </Provider>,\r\n      domContainer\r\n    );\r\n  });\r\n"],"sourceRoot":""}