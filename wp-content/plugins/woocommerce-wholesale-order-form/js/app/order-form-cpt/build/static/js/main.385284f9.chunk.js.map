{"version":3,"sources":["store/actions/orderFormActions.ts","store/actions/dragAndDropActions.ts","store/actions/stylingActions.ts","store/actions/productActions.ts","store/actions/paginationActions.ts","store/actions/minimumRequirementNoticeActions.ts","components/OrderFormList/index.tsx","components/LeftContent/OrderFormContent/HeaderFooterSection/AddNewRow.tsx","store/reducers/dragAndDropReducer.ts","components/LeftContent/ManageColumn/index.tsx","components/LeftContent/ManageRow/index.tsx","components/LeftContent/PrintItem/Elements/OrderFormPagination.tsx","helpers/getPropValue.ts","helpers/updateStyling.ts","helpers/findItemColumnId.ts","components/LeftContent/PrintItem/Elements/CategoryFilter.tsx","components/LeftContent/PrintItem/Elements/ShortDescription.tsx","components/LeftContent/PrintItem/Elements/AddToCartCheckbox.tsx","components/LeftContent/PrintItem/Elements/ComboVariations.tsx","components/LeftContent/PrintItem/Elements/SearchInput.tsx","components/LeftContent/PrintItem/index.tsx","components/LeftContent/OrderFormContent/HeaderFooterSection/index.tsx","components/LeftContent/OrderFormContent/TableSection/index.tsx","components/LeftContent/OrderFormContent/index.tsx","components/LeftContent/StylingAndOptionControls/ShowStyles/Alignment/index.tsx","components/LeftContent/StylingAndOptionControls/ShowStyles/Margin/index.tsx","components/LeftContent/StylingAndOptionControls/ShowStyles/Padding/index.tsx","components/LeftContent/StylingAndOptionControls/ShowStyles/FontSize/index.tsx","components/LeftContent/StylingAndOptionControls/ShowStyles/Width/index.tsx","components/LeftContent/StylingAndOptionControls/ShowStyles/index.tsx","components/LeftContent/StylingAndOptionControls/ShowOptions/Placeholder/index.tsx","components/LeftContent/StylingAndOptionControls/ShowOptions/ButtonText/index.tsx","components/LeftContent/StylingAndOptionControls/ShowOptions/ProductsPerPage/index.tsx","components/LeftContent/StylingAndOptionControls/ShowOptions/Sort/index.tsx","components/LeftContent/StylingAndOptionControls/ShowOptions/ColumnHeadingTitle/index.tsx","components/LeftContent/StylingAndOptionControls/ShowOptions/SubmitOnEnter/index.tsx","components/LeftContent/StylingAndOptionControls/ShowOptions/SubmitOnChange/index.tsx","components/LeftContent/StylingAndOptionControls/ShowOptions/ShowPopUp/index.tsx","components/LeftContent/StylingAndOptionControls/ShowOptions/index.tsx","components/LeftContent/StylingAndOptionControls/index.tsx","components/LeftContent/index.tsx","helpers/usePageInfo.ts","components/RightContent/EditForm/Element/index.tsx","components/RightContent/EditForm/index.tsx","components/RightContent/FormSettings/index.tsx","components/RightContent/Locations/index.tsx","components/RightContent/index.tsx","DisplayMinReqNotice.tsx","components/Editor/index.tsx","App.tsx","store/reducers/orderFormReducer.ts","store/reducers/stylingReducer.ts","store/reducers/productsReducer.ts","store/reducers/paginationReducer.ts","store/reducers/index.ts","helpers/axios.ts","store/sagas/orderFormSaga.ts","store/sagas/dragAndDropSaga.ts","store/sagas/productsSaga.ts","store/sagas/minimumRequirementNoticeSaga.ts","store/sagas/index.ts","store/index.ts","index.tsx"],"names":["EOrderFormActionTypes","EDragAndDropActionTypes","orderFormActions","payload","type","SET_LOADING","SET_ORDER_FORM_DATA","SET_CART_SUBTOTAL","FETCH_ORDER_FORMS","FETCH_ORDER_FORM","ADD_NEW_ORDER_FORM","EDIT_ORDER_FORM","DELETE_ORDER_FORM","SET_PAGE","GET_ORDER_FORM_SETTINGS","SET_ORDER_FORM_SETTINGS","SET_ORDER_FORM_SETTINGS_DATA","EStylingActionTypes","dragAndDropActions","SET_DND_DATA","RESET_DND_DATA","TRANSFER_ITEMS","ARRANGE_TABLE_COLUMNS","ARRANGE_HEADER_FOOTER_ROWS","ARRANGE_HEADER_FOOTER_COLUMNS","EProductActionTypes","stylingActions","SET_SHOW_STYLING","SET_STYLES","EPaginationActionTypes","productActions","FETCH_PRODUCTS","SET_PRODUCTS","SET_VARIATIONS","FETCH_CATEGORIES","SET_CATEGORIES","EMinRequirementsTypes","paginationActions","SET_PAGINATION_STATE","minRequirements","WWPP_REQUIRED_VERSIONS","REMOVE_WWPP_MIN_FAIL_MESSAGE","fetchOrderForms","deleteOrderForm","setPage","confirm","Modal","Option","Select","OrderFormLocations","props","locations","useState","selectedLocation","setSelectedLocation","Options","map","location","key","value","permalink","post_title","length","style","width","onChange","handleChange","marginLeft","href","target","onClick","connect","store","orderForm","dispatch","actions","bindActionCreators","toolTip","setToolTip","selectedRowKeys","setSelectedRowKeys","pathName","useLocation","pathname","params","search","siteURL","data","pagination","dataSource","id","name","title","shortcode","disabled","addonAfter","onMouseLeave","setTimeout","CopyOutlined","content","copy","status","color","confirmDelete","items","Array","isArray","icon","ExclamationCircleOutlined","centered","onOk","post_id","successCB","notification","message","failCB","onCancel","console","log","columns","dataIndex","className","render","text","record","index","to","marginRight","QuestionCircleOutlined","FormOutlined","fontSize","DeleteOutlined","rowSelection","useEffect","page","marginBottom","height","danger","display","loading","bordered","current","total","pageSize","showTotal","range","locale","emptyText","description","marginTop","setDndData","createID","fill","String","fromCharCode","Math","floor","random","join","Date","now","toString","dragAndDrop","sectionId","hasRows","visible","setVisible","setNewSection","cols","newCols","from","x","i","colId","itemIds","newData","rowId","newRow","editorArea","rows","SectionSetup","trigger","onVisibleChange","PlusSquareOutlined","border","background","padding","minHeight","justifyContent","alignItems","defaults","formElements","headerElements","desc","tableElements","formHeader","formTable","formFooter","ManageColumn","item","area","setShowStyling","styling","setStyles","provided","snapshot","dndData","getColId","column","undefined","destElement","split","deletingItem","parseInt","indexOf","originalLocation","Object","keys","findOriginalLocation","splice","dest","updated","rowIndex","col","colIndex","colIdToDelete","hasOwnProperty","styles","allStyles","isDragging","e","show","ControlOutlined","itemId","section","DragOutlined","dragHandleProps","ManageRow","row","setData","deletingRow","colsData","d","ii","setPaginationState","fetchProducts","productsPerPage","per_page","settingsData","wwof_general_sort_order","sort_order","active_page","total_products","getPropValue","extra","updateStyling","toUpdate","findItemColumnId","includes","j","products","placeholder","categories","columnId","submitOnChange","error","treeData","forEach","cat","push","children","iterate","cat2","showSearch","allowClear","treeDefaultExpandAll","product","dangerouslySetInnerHTML","__html","short_description","selectedAll","selected","setSelected","checked","variations","variationsOptions","variation","attributes","option","textAlign","filterOption","notFoundContent","variationId","submitOnEnter","properties","prop","PrintItem","setSelectedAll","cartSubtotal","totalProducts","productPerPage","site_url","images","src","shape","sku","stock_status","stock_quantity","price_html","min","defaultValue","AddToCartCheckbox","displayItem","readableStyles","dataRows","droppableId","droppableProps","ref","innerRef","gridGap","rowStyles","rowProps","draggableId","draggableProps","backgroundColor","direction","flexDirection","colStyles","itemProvided","itemSnapshot","readableColStyles","hasCustomWidth","flex","isDropDisabled","isDraggingOver","itemKey","isDragDisabled","colProps","printItemProps","fetchCategories","stylesCopy","margin","position","Alignment","getStyleValue","alignment","setAlignment","htmlFor","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","Margin","linkMargin","setLinkMargin","margins","Top","Right","Bottom","Left","inputNumbers","val","LinkOutlined","DisconnectOutlined","Padding","linkPadding","setLinkPadding","paddings","paddingTop","paddingRight","paddingBottom","paddingLeft","FontSize","setType","setFontSize","Group","Width","setWidth","ShowStyles","styleProps","options","component","React","cloneElement","displayStyles","Placeholder","placeholderValue","setPlaceholderValue","ButtonText","buttonTextValue","setButtonTextValue","buttonText","setOrderFormSettingsData","setValue","sort","ColumnHeadingTitle","columnTitle","setColumnTitle","columnHeading","SubmitOnEnter","SubmitOnChange","showPopup","ShowOptions","displayOptions","Panel","Collapse","itemName","setItemName","defaultItems","placement","closable","onClose","mask","defaultActiveKey","header","resetDndData","addNewOrderForm","editOrderForm","fetchOrderForm","deleted","setDeleted","setShortcode","orderFormID","setOrderFormID","orderFormStatus","setOrderFormStatus","orderFormData","setOrderFormData","urlParams","URLSearchParams","editPath","pageType","get","postID","usePageInfo","Form","useForm","form","formEl","useRef","setFieldsValue","meta","form_elements","editor_area","settings","sort_by","cart_subtotal_tax","onBack","window","history","back","subTitle","submit","fontWeight","onFinish","success","validateMessages","required","Item","label","rules","Element","SearchOutlined","DatabaseOutlined","ShoppingCartOutlined","ReconciliationOutlined","BorderlessTableOutlined","DownloadOutlined","GoldOutlined","FileSearchOutlined","FileSyncOutlined","FileImageOutlined","FileTextOutlined","BarcodeOutlined","LineChartOutlined","DollarCircleOutlined","ContainerOutlined","FileMarkdownOutlined","ClusterOutlined","OrderedListOutlined","printElement","EditForm","flexWrap","borderRadius","getOrderFormSettings","DisplayOption","whiteSpace","default","meta_key","meta_value","DisplaySettings","propsToPass","values","LoadingOutlined","setLocations","renderItem","TabPane","Tabs","savedData","defaultData","updatedData","offsetTop","left","tab","TableOutlined","SettingOutlined","ReadOutlined","wwppRequiredVersions","removeMinimumWWPPFailMessage","minimumWWPPFailSubject","setMinimumWWPPFailSubject","minimumWWPPFailMessage","setMinimumWWPPFailMessage","heading","borderLeft","transferItems","arrangeTableColumns","arrangeHeaderFooterRows","arrangeHeaderFooterColumns","pulsatingEffect","action","container","document","getElementsByClassName","c","replace","onDragStart","start","source","onDragEnd","result","destination","LeftContent","App","RenderComponent","Editor","currentPage","defaultCurrent","totalPages","total_page","reducers","combineReducers","state","axios","create","baseURL","wpApiSettings","root","headers","addOrderForm","put","call","axiosInstance","response","post","post_ids","force","delete","p","actionListener","takeEvery","sourceColumn","destColumn","sourceItems","destItems","removed","moved","rowsList","rowCols","rowColsList","qs","require","ajax","stringify","cart_subtotal","rootSaga","all","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","sagas","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.385284f9.chunk.js","sourcesContent":["export enum EOrderFormActionTypes {\r\n    SET_LOADING = \"SET_LOADING\",\r\n    SET_ORDER_FORM_DATA = \"SET_ORDER_FORM_DATA\",\r\n    SET_CART_SUBTOTAL = \"SET_CART_SUBTOTAL\",\r\n    FETCH_ORDER_FORMS = \"FETCH_ORDER_FORMS\",\r\n    FETCH_ORDER_FORM = \"FETCH_ORDER_FORM\",\r\n    ADD_NEW_ORDER_FORM = \"ADD_NEW_ORDER_FORM\",\r\n    EDIT_ORDER_FORM = \"EDIT_ORDER_FORM\",\r\n    DELETE_ORDER_FORM = \"DELETE_ORDER_FORM\",\r\n    SET_PAGE = \"SET_PAGE\",\r\n    GET_ORDER_FORM_SETTINGS = \"GET_ORDER_FORM_SETTINGS\",\r\n    SET_ORDER_FORM_SETTINGS = \"SET_ORDER_FORM_SETTINGS\",\r\n    GET_ORDER_FORM_SETTINGS_DATA = \"GET_ORDER_FORM_SETTING_DATA\",\r\n    SET_ORDER_FORM_SETTINGS_DATA = \"SET_ORDER_FORM_SETTING_DATA\"\r\n}\r\n\r\nexport const orderFormActions = {\r\n    setLoading: (payload: any) => ({\r\n        type: EOrderFormActionTypes.SET_LOADING,\r\n        payload\r\n    }),\r\n    setOrderFormData: (payload: any) => ({\r\n        type: EOrderFormActionTypes.SET_ORDER_FORM_DATA,\r\n        payload\r\n    }),\r\n    setCartSubtotal: (payload: any) => ({\r\n        type: EOrderFormActionTypes.SET_CART_SUBTOTAL,\r\n        payload\r\n    }),\r\n    fetchOrderForms: (payload: any) => ({\r\n        type: EOrderFormActionTypes.FETCH_ORDER_FORMS,\r\n        payload\r\n    }),\r\n    fetchOrderForm: (payload: any) => ({\r\n        type: EOrderFormActionTypes.FETCH_ORDER_FORM,\r\n        payload\r\n    }),\r\n    addNewOrderForm: (payload: any) => ({\r\n        type: EOrderFormActionTypes.ADD_NEW_ORDER_FORM,\r\n        payload\r\n    }),\r\n    editOrderForm: (payload: any) => ({\r\n        type: EOrderFormActionTypes.EDIT_ORDER_FORM,\r\n        payload\r\n    }),\r\n    deleteOrderForm: (payload: any) => ({\r\n        type: EOrderFormActionTypes.DELETE_ORDER_FORM,\r\n        payload\r\n    }),\r\n    setPage: (payload: any) => ({\r\n        type: EOrderFormActionTypes.SET_PAGE,\r\n        payload\r\n    }),\r\n    getOrderFormSettings: (payload: any) => ({\r\n        type: EOrderFormActionTypes.GET_ORDER_FORM_SETTINGS,\r\n        payload\r\n    }),\r\n    setOrderFormSettings: (payload: any) => ({\r\n        type: EOrderFormActionTypes.SET_ORDER_FORM_SETTINGS,\r\n        payload\r\n    }),\r\n    setOrderFormSettingsData: (payload: any) => ({\r\n        type: EOrderFormActionTypes.SET_ORDER_FORM_SETTINGS_DATA,\r\n        payload\r\n    })\r\n};","export enum EDragAndDropActionTypes {\r\n    RESET_DND_DATA = \"RESET_DND_DATA\",\r\n    SET_DND_DATA = \"SET_DND_DATA\",\r\n    ARRANGE_TABLE_COLUMNS = \"ARRANGE_TABLE_COLUMNS\",\r\n    ARRANGE_HEADER_FOOTER_ROWS = \"ARRANGE_HEADER_FOOTER_ROWS\",\r\n    ARRANGE_HEADER_FOOTER_COLUMNS = \"ARRANGE_HEADER_FOOTER_COLUMNS\",\r\n    TRANSFER_ITEMS = \"TRANSFER_ITEMS\"\r\n}\r\n\r\nexport const dragAndDropActions = {\r\n    setDndData: (payload: any) => ({\r\n        type: EDragAndDropActionTypes.SET_DND_DATA,\r\n        payload\r\n    }),\r\n    resetDndData: (payload: any) => ({\r\n        type: EDragAndDropActionTypes.RESET_DND_DATA,\r\n        payload\r\n    }),\r\n    transferItems: (payload: any) => ({\r\n        type: EDragAndDropActionTypes.TRANSFER_ITEMS,\r\n        payload\r\n    }),\r\n    arrangeTableColumns: (payload: any) => ({\r\n        type: EDragAndDropActionTypes.ARRANGE_TABLE_COLUMNS,\r\n        payload\r\n    }),\r\n    arrangeHeaderFooterRows: (payload: any) => ({\r\n        type: EDragAndDropActionTypes.ARRANGE_HEADER_FOOTER_ROWS,\r\n        payload\r\n    }),\r\n    arrangeHeaderFooterColumns: (payload: any) => ({\r\n        type: EDragAndDropActionTypes.ARRANGE_HEADER_FOOTER_COLUMNS,\r\n        payload\r\n    })\r\n};","export enum EStylingActionTypes {\r\n    SET_SHOW_STYLING = \"SET_SHOW_STYLING\",\r\n    SET_STYLES = \"SET_STYLES\"\r\n}\r\n\r\nexport const stylingActions = {\r\n    setShowStyling: (payload: any) => ({\r\n        type: EStylingActionTypes.SET_SHOW_STYLING,\r\n        payload\r\n    }),\r\n    setStyles: (payload: any) => ({\r\n        type: EStylingActionTypes.SET_STYLES,\r\n        payload\r\n    }),\r\n};","export enum EProductActionTypes {\r\n    FETCH_PRODUCTS = \"FETCH_PRODUCTS\",\r\n    SET_PRODUCTS = \"SET_PRODUCTS\",\r\n    SET_CATEGORIES = \"SET_CATEGORIES\",\r\n    FETCH_CATEGORIES = \"FETCH_CATEGORIES\",\r\n    SET_VARIATIONS = \"SET_VARIATIONS\"\r\n}\r\n\r\nexport const productActions = {\r\n    fetchProducts: (payload: any) => ({\r\n        type: EProductActionTypes.FETCH_PRODUCTS,\r\n        payload\r\n    }),\r\n    setProducts: (payload: any) => ({\r\n        type: EProductActionTypes.SET_PRODUCTS,\r\n        payload\r\n    }),\r\n    setVariations: (payload: any) => ({\r\n        type: EProductActionTypes.SET_VARIATIONS,\r\n        payload\r\n    }),\r\n    fetchCategories: (payload: any) => ({\r\n        type: EProductActionTypes.FETCH_CATEGORIES,\r\n        payload\r\n    }),\r\n    setCategories: (payload: any) => ({\r\n        type: EProductActionTypes.SET_CATEGORIES,\r\n        payload\r\n    })\r\n};","export enum EPaginationActionTypes {\r\n    SET_PAGINATION_STATE = \"SET_PAGINATION_STATE\"\r\n}\r\n\r\nexport const paginationActions = {\r\n    setPaginationState: (payload: any) => ({\r\n        type: EPaginationActionTypes.SET_PAGINATION_STATE,\r\n        payload\r\n    })\r\n}","export enum EMinRequirementsTypes {\r\n    WWPP_REQUIRED_VERSIONS = \"WWPP_REQUIRED_VERSIONS\",\r\n    REMOVE_WWPP_MIN_FAIL_MESSAGE = \"REMOVE_WWPP_MIN_FAIL_MESSAGE\"\r\n}\r\n\r\nexport const minRequirements = {\r\n    wwppRequiredVersions: (payload: any) => ({\r\n        type: EMinRequirementsTypes.WWPP_REQUIRED_VERSIONS,\r\n        payload\r\n    }),\r\n    removeMinimumWWPPFailMessage: (payload: any) => ({\r\n        type: EMinRequirementsTypes.REMOVE_WWPP_MIN_FAIL_MESSAGE,\r\n        payload\r\n    })\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { Table, Tag, Tooltip, Input, notification, Button, Empty, Modal, Select } from 'antd';\r\nimport {\r\n    Link,\r\n    useLocation\r\n} from \"react-router-dom\";\r\n\r\nimport copy from \"copy-to-clipboard\";\r\nimport { CopyOutlined, FormOutlined, DeleteOutlined, ExclamationCircleOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport { orderFormActions } from '../../store/actions';\r\nconst { fetchOrderForms, deleteOrderForm, setPage } = orderFormActions;\r\n\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\n\r\nconst OrderFormLocations = (props: any) => {\r\n\r\n    const { locations } = props;\r\n    const [selectedLocation, setSelectedLocation] = useState('');\r\n\r\n    const handleChange = (permalink: string) => {\r\n        setSelectedLocation(permalink);\r\n    }\r\n\r\n    const Options = locations.map((location: any, key: any) => {\r\n        return <Option key={key} value={location.permalink}>{location.post_title}</Option>\r\n    });\r\n\r\n    if (locations.length > 0)\r\n        return (\r\n            <>\r\n                <Select style={{ width: 300 }} onChange={(permalink: string) => handleChange(permalink)}>\r\n                    {Options}\r\n                </Select>\r\n                {\r\n                    selectedLocation ?\r\n                        <>\r\n                            <a style={{ marginLeft: '10px' }} href={selectedLocation} target=\"blaink\">Visit Link</a>\r\n                            <a style={{ marginLeft: '10px' }} href=\"#\" onClick={() => { setSelectedLocation('') }}>Clear</a></>\r\n                        : ''\r\n                }\r\n            </>\r\n        );\r\n    else\r\n        return (<></>)\r\n\r\n}\r\n\r\nconst OrderFormList = (props: any) => {\r\n\r\n    const [toolTip, setToolTip] = useState('Copy');\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n    const pathName = useLocation().pathname;\r\n    const params = useLocation().search;\r\n    const siteURL = params.length > 0 ? `${pathName}${params}&` : `${pathName}?`;\r\n\r\n    const { orderForm, actions } = props;\r\n    const { data } = orderForm;\r\n    const { pagination } = orderForm;\r\n\r\n    const copyToClipboard = (value: string) => {\r\n        copy(value);\r\n        setToolTip('Copied');\r\n    }\r\n\r\n    const dataSource = data.length > 0 ? data.map((data: any) => {\r\n\r\n        return {\r\n            key: data.id,\r\n            name: data.title,\r\n            shortcode:\r\n                <Input\r\n                    disabled={false}\r\n                    addonAfter={(\r\n                        <div\r\n                            onMouseLeave={() =>\r\n                                setTimeout(() => setToolTip('Copy'), 200)\r\n                            }\r\n                        >\r\n                            <Tooltip\r\n                                title={toolTip}\r\n                            >\r\n                                <CopyOutlined\r\n                                    onClick={() => copyToClipboard(data.content)}\r\n                                />\r\n                            </Tooltip>\r\n                        </div>\r\n                    )}\r\n                    value={data.content}\r\n                />,\r\n            locations: <OrderFormLocations locations={data.locations} />,\r\n            status: data.status === 'draft' ? <Tag color=\"#aaaaaa\">Draft</Tag> : <Tag color=\"#91c67f\">Publish</Tag>\r\n        };\r\n\r\n    }) : [];\r\n\r\n    const confirmDelete = (items: any) => {\r\n\r\n        confirm({\r\n            title: `Do you want to delete ${Array.isArray(items) && items.length > 1 ? 'these forms' : 'this form'}?`,\r\n            icon: <ExclamationCircleOutlined />,\r\n            centered: true,\r\n            // content: 'Some descriptions',\r\n            onOk() {\r\n                actions.deleteOrderForm({\r\n                    post_id: items,\r\n                    pagination,\r\n                    successCB: () => {\r\n                        notification['success']({\r\n                            message: 'Deleted Successfully!'\r\n                        })\r\n\r\n                        setSelectedRowKeys([])\r\n                    },\r\n                    failCB: () => notification['error']({\r\n                        message: 'Unable Failed!'\r\n                    }),\r\n                });\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel');\r\n            },\r\n        });\r\n\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Order Form Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            className: 'name',\r\n            render: (text: any, record: any, index: any) => (<Link to={`${siteURL}sub-page=edit&post=${record.key}`} style={{ marginRight: 16 }}>{text}</Link>)\r\n        },\r\n        {\r\n            title: 'Shortcode',\r\n            dataIndex: 'shortcode',\r\n            key: 'shortcode',\r\n        },\r\n        {\r\n            title: () => (<>Locations <Tooltip title=\"Locations of the order forms.\"><QuestionCircleOutlined /></Tooltip></>),\r\n            dataIndex: 'locations',\r\n            key: 'locations',\r\n            className: 'locations',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '',\r\n            key: 'x',\r\n            render: (data: any) => {\r\n\r\n                return (\r\n                    <>\r\n                        <Link to={`${siteURL}sub-page=edit&post=${data.key}`} style={{ marginRight: 16 }}>\r\n                            <Tooltip title=\"Edit\">\r\n                                <FormOutlined style={{ fontSize: '18px', color: \"#0071a1\" }} />\r\n                            </Tooltip>\r\n                        </Link>\r\n\r\n                        <Tooltip title=\"Delete\">\r\n                            <DeleteOutlined onClick={() => confirmDelete(data.key)} style={{ fontSize: '18px', color: \"#FF0000\" }} />\r\n                        </Tooltip>\r\n\r\n                    </>\r\n                )\r\n            },\r\n        },\r\n    ];\r\n\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: (selectedRowKeys: any) => {\r\n            setSelectedRowKeys(selectedRowKeys);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        actions.fetchOrderForms({ page: pagination.page });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div style={{ marginBottom: 8, height: '32px' }}>\r\n                <Button danger style={{ display: selectedRowKeys.length === 0 ? 'none' : 'block' }} onClick={() => confirmDelete(selectedRowKeys)}>Delete</Button>\r\n            </div>\r\n            <Table\r\n                className=\"order-forms\"\r\n                rowSelection={rowSelection}\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                loading={orderForm.loading}\r\n                bordered={true}\r\n                pagination={{\r\n                    current: pagination.page,\r\n                    total: pagination.total,\r\n                    pageSize: pagination.pageSize,\r\n                    showTotal: (total: number, range: any) => `${range[0]} - ${range[1]} of ${total} items`,\r\n                    onChange: (page: number) => {\r\n                        actions.setPage({ page })\r\n                        actions.fetchOrderForms({ page })\r\n                    }\r\n                }}\r\n                locale={{\r\n                    emptyText: (<Empty description={false} />)\r\n                }} />\r\n            <div style={{ marginTop: '-55px', height: '32px' }}>\r\n                <Button danger style={{ display: selectedRowKeys.length === 0 ? 'none' : 'block' }} onClick={() => confirmDelete(selectedRowKeys)}>Delete</Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    orderForm: store.orderForm\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        fetchOrderForms,\r\n        deleteOrderForm,\r\n        setPage\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderFormList);","import React, { useState } from 'react'\r\nimport { Popover, Button } from 'antd';\r\nimport { PlusSquareOutlined } from '@ant-design/icons';\r\n\r\n// Redux\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport { dragAndDropActions } from '../../../../store/actions';\r\nconst { setDndData } = dragAndDropActions;\r\n\r\n// Generate random id for row and col\r\nconst createID = () => {\r\n    return Array(16)\r\n        .fill(0)\r\n        .map(() => String.fromCharCode(Math.floor(Math.random() * 26) + 97))\r\n        .join('') +\r\n        Date.now().toString(24);\r\n}\r\n\r\nconst AddNewRow = (props: any) => {\r\n\r\n    const { data, sectionId, hasRows, actions } = props;\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const setNewSection = (cols: any) => {\r\n\r\n        const newCols = Array.from(Array(cols)).map((x, i) => {\r\n\r\n            return {\r\n                colId: createID(),\r\n                itemIds: []\r\n            };\r\n        });\r\n\r\n        const newData = [{\r\n            rowId: createID(),\r\n            columns: newCols\r\n        }];\r\n\r\n        const newRow = [\r\n            ...data['editorArea'][sectionId]['rows'],\r\n            ...newData\r\n        ];\r\n\r\n        actions.setDndData({\r\n            ...data,\r\n            editorArea: {\r\n                ...data['editorArea'],\r\n                [sectionId]: {\r\n                    ...data['editorArea'][sectionId],\r\n                    rows: newRow\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const SectionSetup = (\r\n        <div className=\"Setup\">\r\n            <h4>1 Column</h4>\r\n            <div\r\n                className=\"Columns OneColumn\"\r\n                onClick={\r\n                    () => { setVisible(false); setNewSection(1); }\r\n                }\r\n            >\r\n                <div />\r\n            </div>\r\n            <h4>2 Column</h4>\r\n            <div\r\n                className=\"Columns TwoColumn\"\r\n                onClick={\r\n                    () => { setVisible(false); setNewSection(2); }\r\n                }>\r\n                <div /><div />\r\n            </div>\r\n            <h4>3 Column</h4>\r\n            <div\r\n                className=\"Columns ThreeColumn\"\r\n                onClick={\r\n                    () => { setVisible(false); setNewSection(3); }\r\n                }>\r\n                <div /><div /><div />\r\n            </div>\r\n            <h4>4 Column</h4>\r\n            <div\r\n                className=\"Columns ThreeColumn\"\r\n                onClick={\r\n                    () => { setVisible(false); setNewSection(4); }\r\n                }>\r\n                <div /><div /><div /><div />\r\n            </div>\r\n        </div>);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                hasRows ?\r\n                    <Popover\r\n                        trigger=\"click\"\r\n                        content={SectionSetup}\r\n                        title=\"Select Your Structure\"\r\n                        visible={visible}\r\n                        onVisibleChange={(visible) => setVisible(visible)}\r\n                    >\r\n                        <Button className=\"add-new-section\"><PlusSquareOutlined />Add New Section</Button>\r\n                    </Popover>\r\n                    :\r\n                    <div\r\n                        style={{\r\n                            border: '1px solid #eee',\r\n                            background: \"#efefef\",\r\n                            padding: 10,\r\n                            minHeight: '150px',\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center'\r\n                        }}\r\n                    >\r\n                        <Popover\r\n                            trigger=\"click\"\r\n                            content={SectionSetup}\r\n                            title=\"Select Your Structure\"\r\n                            visible={visible}\r\n                            onVisibleChange={(visible) => setVisible(visible)}\r\n                        >\r\n                            <Button> <PlusSquareOutlined />Add New Section</Button>\r\n\r\n                        </Popover>\r\n\r\n                    </div>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    data: store.dragAndDrop\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setDndData\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewRow);","import { EDragAndDropActionTypes } from '../actions/dragAndDropActions';\r\n\r\nexport const defaults = {\r\n    items: {\r\n        // Header/Footer Elements\r\n        'search-input': { id: 'search-input', content: 'Search Input' },\r\n        'category-filter': { id: 'category-filter', content: 'Category Filter' },\r\n        'add-selected-to-cart-button': { id: 'add-selected-to-cart-button', content: 'Add Selected To Cart Button' },\r\n        'cart-subtotal': { id: 'cart-subtotal', content: 'Cart Subtotal' },\r\n        'product-count': { id: 'product-count', content: 'Product Count' },\r\n        'pagination': { id: 'pagination', content: 'Pagination' },\r\n        // 'attribute-filter': { id: 'attribute-filter', content: 'Attribute Filter' },\r\n        'search-button': { id: 'search-button', content: 'Search Button' },\r\n        'clear-filters': { id: 'clear-filters', content: 'Clear Filters' },\r\n        // Table Elements\r\n        'product-image': { id: 'product-image', content: 'Product Image' },\r\n        'product-name': { id: 'product-name', content: 'Product Name' },\r\n        'sku': { id: 'sku', content: 'SKU' },\r\n        'in-stock-amount': { id: 'in-stock-amount', content: 'In Stock Amount' },\r\n        'price': { id: 'price', content: 'Price' },\r\n        'quantity-input': { id: 'quantity-input', content: 'Quantity Input' },\r\n        'add-to-cart-button': { id: 'add-to-cart-button', content: 'Add To Cart Button' },\r\n        'combo-variation-dropdown': { id: 'combo-variation-dropdown', content: 'Combo Variation Dropdown' },\r\n        // 'standard-variation-dropdowns': { id: 'standard-variation-dropdowns', content: 'WooCommerce Standard Variation Dropdowns' },\r\n        // 'product-meta': { id: 'product-meta', content: 'Product Meta' },\r\n        // 'global-attribute': { id: 'global-attribute', content: 'Global Attribute' },\r\n        'short-description': { id: 'short-description', content: 'Short Description' },\r\n        'add-to-cart-checkbox': { id: 'add-to-cart-checkbox', content: 'Add To Cart Checkbox' },\r\n        // WooCommerce Widgets\r\n        // 'cart-widget': { id: 'cart-widget', content: 'Cart Widget' },\r\n        // 'filter-products-by-attribute': { id: 'filter-products-by-attribute', content: 'Filter Products by Attribute' },\r\n        // 'filter-products-by-price': { id: 'filter-products-by-price', content: 'Filter Products by Price' },\r\n    },\r\n    formElements: {\r\n        headerElements: {\r\n            id: 'headerElements',\r\n            title: 'HEADER/FOOTER ELEMENTS',\r\n            desc: '',\r\n            itemIds: ['search-input', 'category-filter', 'add-selected-to-cart-button', 'cart-subtotal', 'product-count', 'pagination', 'search-button', 'clear-filters']\r\n        },\r\n        tableElements: {\r\n            id: 'tableElements',\r\n            title: 'TABLE COLUMNS',\r\n            desc: '',\r\n            itemIds: ['product-image', 'product-name', 'sku', 'in-stock-amount', 'price', 'quantity-input', 'add-to-cart-button', 'combo-variation-dropdown', 'short-description', 'add-to-cart-checkbox']\r\n        },\r\n        // wooWidgets: {\r\n        //     id: 'wooWidgets',\r\n        //     title: 'WooCommerce Widgets',\r\n        //     desc: 'Click and drag compatible WooCommerce widgets into the header/footer.',\r\n        //     itemIds: ['cart-widget', 'filter-products-by-attribute', 'filter-products-by-price']\r\n        // }\r\n    },\r\n    editorArea: {\r\n        formHeader: {\r\n            title: 'ORDER FORM HEADER',\r\n            rows: []\r\n        },\r\n        formTable: {\r\n            title: 'ORDER FORM TABLE',\r\n            itemIds: []\r\n        },\r\n        formFooter: {\r\n            title: 'ORDER FORM FOOTER',\r\n            rows: []\r\n        }\r\n    }\r\n};\r\n\r\nexport default function (state: any = defaults, action: any) {\r\n\r\n    switch (action.type) {\r\n\r\n        case EDragAndDropActionTypes.RESET_DND_DATA:\r\n\r\n            return defaults;\r\n\r\n        case EDragAndDropActionTypes.SET_DND_DATA:\r\n\r\n            return action.payload;\r\n\r\n        default:\r\n            return state\r\n\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { ControlOutlined, DeleteOutlined, DragOutlined } from '@ant-design/icons';\r\nimport { defaults } from '../../../store/reducers/dragAndDropReducer';\r\n\r\n// Handles Deleting Item in Row Columns\r\nconst ManageColumn = (props: any) => {\r\n\r\n    const { sectionId, item, data, setDndData, area, setShowStyling, styling, setStyles, provided, snapshot } = props;\r\n    const dndData: any = defaults;\r\n\r\n    const getColId = (column: string) => {\r\n\r\n        if (area !== undefined) {\r\n            let destElement = area.split('-');\r\n\r\n            // deleting from formHeader and footerFooter\r\n            if (column !== 'formTable')\r\n                return data['editorArea'][column]['rows'][destElement[1]]['columns'][destElement[2]]['colId'];\r\n            return null;\r\n        } else\r\n            return data['editorArea'][column]['id'];\r\n\r\n    }\r\n\r\n\r\n    const findOriginalLocation = (id: number) => {\r\n\r\n        for (let column of Object.keys(dndData['formElements'])) {\r\n            const index = dndData['formElements'][column]['itemIds'].indexOf(id);\r\n            if (index >= 0) return { index, column };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    const deletingItem = (id: number, column: string) => {\r\n\r\n        let itemIds: any = [];\r\n        let rowId: number = 0;\r\n        let colId: number = 0;\r\n        let destElement: any[] = [];\r\n\r\n        if (area !== undefined) {\r\n            destElement = area.split('-');\r\n            rowId = parseInt(destElement[1]);\r\n            colId = parseInt(destElement[2]);\r\n\r\n            // deleting from formHeader and footerFooter\r\n            if (column !== 'formTable')\r\n                itemIds = data['editorArea'][column]['rows'][destElement[1]]['columns'][destElement[2]]['itemIds'];\r\n        } else\r\n            itemIds = data['editorArea'][column]['itemIds']; // deleting from formTable\r\n\r\n        const index = itemIds.indexOf(id);\r\n\r\n        if (index >= 0) {\r\n            const originalLocation: any = findOriginalLocation(id);\r\n\r\n            // Remove from Editor\r\n            itemIds.splice(index, 1);\r\n\r\n            // Return to Form Elements\r\n            const dest = data['formElements'][originalLocation.column]['itemIds'];\r\n            dest.splice(originalLocation.index, 0, id);\r\n\r\n            if (column !== 'formTable') {\r\n                // Handle updating 2x nested array of objects\r\n                let updated = data['editorArea'][destElement[0]]['rows'].map((rows: any, rowIndex: number) => {\r\n                    if (rowIndex === rowId) {\r\n                        const cols = rows['columns'].map((col: any, colIndex: number) => {\r\n                            if (colIndex === colId) {\r\n                                return {\r\n                                    ...col,\r\n                                    itemIds\r\n                                }\r\n                            }\r\n                            return col;\r\n                        });\r\n                        return {\r\n                            ...rows,\r\n                            columns: cols\r\n                        }\r\n                    }\r\n                    return rows;\r\n                });\r\n\r\n                setDndData({\r\n                    ...data,\r\n                    editorArea: {\r\n                        ...data['editorArea'],\r\n                        [destElement[0]]: {\r\n                            ...data['editorArea'][destElement[0]],\r\n                            rows: updated\r\n                        }\r\n                    },\r\n                    'formElements': {\r\n                        ...data['formElements'],\r\n                        [originalLocation.column]: {\r\n                            ...data['formElements'][originalLocation.column],\r\n                            itemIds: dest\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                setDndData({\r\n                    ...data,\r\n                    'editorArea': {\r\n                        ...data['editorArea'],\r\n                        [column]: {\r\n                            ...data['editorArea'][column],\r\n                            itemIds\r\n                        }\r\n                    },\r\n                    'formElements': {\r\n                        ...data['formElements'],\r\n                        [originalLocation.column]: {\r\n                            ...data['formElements'][originalLocation.column],\r\n                            itemIds: dest\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        // Remove styles\r\n        const colIdToDelete = getColId(column)\r\n\r\n        if (styling !== undefined && styling.hasOwnProperty('styles') > 0 && styling.styles[colIdToDelete] !== undefined) {\r\n\r\n            const allStyles = styling.styles;\r\n            delete allStyles[colIdToDelete];\r\n\r\n            setStyles({\r\n                ...styling,\r\n                styles: allStyles\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={`item-controls${snapshot.isDragging ? ' dragging' : ''}`} >\r\n            <DeleteOutlined\r\n                onClick={(e: any) => {\r\n                    setShowStyling({ show: false });\r\n                    deletingItem(item.id, sectionId);\r\n                }} />\r\n            <ControlOutlined\r\n                onClick={() =>\r\n                    setShowStyling({\r\n                        show: true,\r\n                        type: 'ITEM',\r\n                        id: sectionId === 'formTable' ? item.id : getColId(sectionId),\r\n                        itemId: item.id,\r\n                        section: sectionId\r\n                    })\r\n                } />\r\n            <DragOutlined {...provided.dragHandleProps} />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ManageColumn;","import React from 'react';\r\nimport { ControlOutlined, DeleteOutlined, DragOutlined } from '@ant-design/icons';\r\nimport { defaults } from '../../../store/reducers/dragAndDropReducer';\r\n\r\n// Handles Deleting Rows\r\nconst ManageRow = (props: any) => {\r\n\r\n    const { sectionId, row, data, setData, setShowStyling, styling, setStyles, provided, snapshot } = props;\r\n    const rowId = data['editorArea'][sectionId]['rows'][row]['rowId'];\r\n    const dndData: any = defaults;\r\n\r\n    const findOriginalLocation = (id: number) => {\r\n\r\n        for (let column of Object.keys(dndData['formElements'])) {\r\n\r\n            const index = dndData['formElements'][column]['itemIds'].indexOf(id);\r\n            if (index >= 0) return { index, column };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    const deletingRow = () => {\r\n        // console.log(props)\r\n        const rows = data['editorArea'][sectionId]['rows'];\r\n\r\n        // Return items into right side draggable items\r\n        // let moved: any = {};\r\n        const colsData = rows[row]['columns'];\r\n\r\n        Object.keys(colsData).map((d: any, i: number) => {\r\n            const items = colsData[i]['itemIds'];\r\n            items.map((item: any, ii: number) => {\r\n                const originalLocation: any = findOriginalLocation(item);\r\n                const dest = data['formElements'][originalLocation.column]['itemIds'];\r\n                dest.splice(originalLocation.index, 0, item);\r\n                // moved = {\r\n                //     ...moved,\r\n                //     [originalLocation.column]: {\r\n                //         ...data['formElements'][originalLocation.column],\r\n                //         itemIds: dest\r\n                //     }\r\n                // }\r\n            })\r\n        });\r\n        // console.log(moved)\r\n\r\n        rows.splice(row, 1);\r\n\r\n        setData({\r\n            ...data,\r\n            editorArea: {\r\n                ...data['editorArea'],\r\n                [sectionId]: {\r\n                    ...data['editorArea'][sectionId],\r\n                    rows\r\n                }\r\n            },\r\n            // 'formElements': {\r\n            //     ...data['formElements'],\r\n            //     [originalLocation.column]: {\r\n            //         ...data['formElements'][originalLocation.column],\r\n            //         itemIds: dest\r\n            //     }\r\n            // }\r\n        });\r\n\r\n        // Remove styles\r\n        if (styling.styles[rowId] !== undefined) {\r\n\r\n            const allStyles = styling.styles;\r\n            delete allStyles[rowId];\r\n\r\n            setStyles({\r\n                ...styling,\r\n                styles: allStyles\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={`row-controls${snapshot.isDragging ? ' dragging' : ''}`} >\r\n            <DeleteOutlined\r\n                onClick={(e: any) => {\r\n                    setShowStyling({ show: false });\r\n                    deletingRow();\r\n                }}\r\n            />\r\n            <ControlOutlined\r\n                onClick={() =>\r\n                    setShowStyling({\r\n                        show: true,\r\n                        type: 'ROW',\r\n                        id: rowId,\r\n                        itemId: 'none',\r\n                        section: sectionId\r\n                    })\r\n                }\r\n            />\r\n            <DragOutlined {...provided.dragHandleProps} />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ManageRow;","\r\nimport React, { useEffect } from 'react';\r\nimport { Pagination } from 'antd';\r\n\r\n// Redux\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport { paginationActions, productActions } from '../../../../store/actions';\r\n\r\nconst { setPaginationState } = paginationActions;\r\nconst { fetchProducts } = productActions;\r\n\r\nconst OrderFormPagination = (props: any) => {\r\n\r\n    const { orderForm, pagination, styles, productsPerPage, actions } = props;\r\n    const { setPaginationState, fetchProducts } = actions;\r\n\r\n    const onChange = () => { }\r\n    // console.log(orderForm)\r\n    useEffect(() => {\r\n\r\n        let params: any = { per_page: productsPerPage };\r\n        if (typeof orderForm.settingsData.wwof_general_sort_order !== 'undefined') {\r\n            params = {\r\n                ...params,\r\n                sort_order: orderForm.settingsData.wwof_general_sort_order\r\n            }\r\n        }\r\n\r\n        if (productsPerPage > 0) {\r\n            fetchProducts({\r\n                per_page: productsPerPage\r\n            });\r\n\r\n            setPaginationState({\r\n                per_page: productsPerPage\r\n            });\r\n        }\r\n\r\n    }, [productsPerPage])\r\n\r\n    return (\r\n        <>\r\n            <Pagination\r\n                current={pagination.active_page}\r\n                total={parseInt(pagination.total_products)}\r\n                pageSize={parseInt(productsPerPage) || 10}\r\n                style={{ ...styles }}\r\n                onChange={() => onChange()}\r\n            />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    orderForm: store.orderForm,\r\n    pagination: store.pagination\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setPaginationState,\r\n        fetchProducts\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderFormPagination);\r\n","export const getPropValue = (props: any) => {\r\n\r\n    const { styling, id, target, style, extra } = props;\r\n\r\n    if (extra) {\r\n        if (\r\n            typeof styling.styles !== 'undefined' &&\r\n            typeof styling.styles[id] !== 'undefined' &&\r\n            typeof styling.styles[id][target] !== 'undefined' &&\r\n            typeof styling.styles[id][target][style] !== 'undefined' &&\r\n            typeof styling.styles[id][target][style][extra] !== 'undefined'\r\n        )\r\n            return styling.styles[id][target][style][extra];\r\n        else\r\n            return null;\r\n    } else {\r\n        if (\r\n            typeof styling.styles !== 'undefined' &&\r\n            typeof styling.styles[id] !== 'undefined' &&\r\n            typeof styling.styles[id][target] !== 'undefined' &&\r\n            typeof styling.styles[id][target][style] !== 'undefined'\r\n        )\r\n            return styling.styles[id][target][style];\r\n        else\r\n            return null;\r\n    }\r\n\r\n}","export const updateStyling = (props: any) => {\r\n\r\n    const { setStyles, styling, id, target, toUpdate } = props;\r\n\r\n    if (typeof styling.styles[id] === 'undefined') {\r\n        const newData = {\r\n            [id]: {\r\n                [target]: {\r\n                    ...toUpdate\r\n                }\r\n            }\r\n        }\r\n\r\n        setStyles({\r\n            ...styling,\r\n            styles: {\r\n                ...styling.styles,\r\n                ...newData\r\n            }\r\n        });\r\n\r\n    } else {\r\n\r\n        setStyles({\r\n            ...styling,\r\n            styles: {\r\n                ...styling.styles,\r\n                [id]: {\r\n                    ...styling.styles[id],\r\n                    [target]: {\r\n                        ...styling.styles[id][target],\r\n                        ...toUpdate\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}","export const findItemColumnId = (dragAndDrop: any, itemId: string) => {\r\n\r\n    for (let section of Object.keys(dragAndDrop['editorArea'])) {\r\n        if (['formHeader', 'formFooter'].includes(section)) {\r\n            let rows = dragAndDrop['editorArea'][section]['rows'];\r\n            if (rows.length > 0) {\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    let columns = rows[i]['columns'];\r\n                    if (columns.length > 0) {\r\n                        for (let j = 0; j < columns.length; j++) {\r\n                            let itemIds = columns[j]['itemIds'];\r\n                            if (itemIds.length > 0) {\r\n                                const index = itemIds.indexOf(itemId);\r\n                                if (index >= 0) return columns[j]['colId'];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}","\r\nimport React, { useEffect } from 'react';\r\nimport { TreeSelect } from 'antd';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getPropValue } from '../../../../helpers/getPropValue';\r\nimport { updateStyling } from '../../../../helpers/updateStyling';\r\n\r\n// Actions\r\nimport { stylingActions } from '../../../../store/actions';\r\nimport { findItemColumnId } from '../../../../helpers/findItemColumnId';\r\n\r\nconst { setStyles } = stylingActions;\r\n\r\nconst CategoryFilter = (props: any) => {\r\n\r\n    const { products, placeholder, style, actions, dragAndDrop, styling } = props;\r\n    const { categories } = products;\r\n    const { setStyles } = actions;\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            const columnId = findItemColumnId(dragAndDrop, 'category-filter');\r\n\r\n            const check = getPropValue({ styling, id: columnId, target: 'props', style: 'submitOnChange', extra: '' });\r\n\r\n            if (check === null) {\r\n                updateStyling({\r\n                    setStyles,\r\n                    styling,\r\n                    id: columnId,\r\n                    target: 'props',\r\n                    toUpdate: {\r\n                        submitOnChange: true\r\n                    }\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    let treeData: any[] = [];\r\n    let iterate = (cat: any, data: any) => {\r\n\r\n        cat.children.forEach((cat2: any, index: number) => {\r\n\r\n            data.children.push({\r\n                'title': cat2.name,\r\n                'value': cat2.name,\r\n                'children': []\r\n            });\r\n\r\n            if (cat2.children.length > 0) {\r\n                iterate(cat2, data.children[index]);\r\n            }\r\n\r\n        });\r\n\r\n    };\r\n\r\n    if (categories !== undefined && categories.length > 0) {\r\n        categories.forEach((cat: any, index: number) => {\r\n            treeData.push({\r\n                'title': cat.name,\r\n                'value': cat.name,\r\n                'children': []\r\n            });\r\n\r\n            if (cat.children.length > 0)\r\n                iterate(cat, treeData[index]);\r\n\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TreeSelect\r\n                showSearch\r\n                allowClear\r\n                className='wwof-category-filter'\r\n                treeData={treeData}\r\n                placeholder={placeholder}\r\n                treeDefaultExpandAll\r\n                style={{ ...style }}\r\n            />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    products: store.products,\r\n    styling: store.styling,\r\n    dragAndDrop: store.dragAndDrop\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setStyles\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryFilter);\r\n","\r\nimport React from 'react';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst ShortDescription = (props: any) => {\r\n\r\n    const { product, key } = props;\r\n\r\n    return (\r\n        <div\r\n            key={key}\r\n            className='row'\r\n            dangerouslySetInnerHTML={{ __html: product.short_description }}>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({}, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShortDescription);\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Checkbox } from 'antd';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst ShortDescription = (props: any) => {\r\n\r\n    const { key, product, selectedAll } = props;\r\n    const [selected, setSelected] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        setSelected(selectedAll);\r\n\r\n    }, [selectedAll]);\r\n\r\n    return (\r\n        <div key={key} className='row'>\r\n            <Checkbox\r\n                checked={selected}\r\n                onChange={(e) => setSelected(e.target.checked)}\r\n            />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({}, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShortDescription);\r\n","import React from 'react';\r\nimport { Select } from 'antd';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst ComboVariations = (props: any) => {\r\n\r\n    const { products, product } = props;\r\n    if (product.type !== 'variable')\r\n        return (<></>);\r\n\r\n    const variations = products.variations[product.id];\r\n\r\n    if (typeof variations === 'undefined' || variations.length <= 0)\r\n        return (<></>);\r\n\r\n    const variationsOptions = variations.map((variation: any) => {\r\n        const name = variation.attributes.map((attributes: any) => {\r\n            return <span key={attributes.id}>{attributes.name + ': ' + attributes.option}</span>\r\n        });\r\n        return <Option key={variation.id} value={variation.id}>{name}</Option>;\r\n    });\r\n\r\n    const onChange = (variationID: number) => { }\r\n\r\n    return (\r\n        <Select\r\n            showSearch\r\n            placeholder='Select Variation'\r\n            style={{ width: 250, marginTop: 10, textAlign: 'left' }}\r\n            filterOption={false}\r\n            notFoundContent='No results found'\r\n            allowClear={true}\r\n            onChange={(variationId: any) => onChange(variationId)}\r\n        >\r\n            {variationsOptions}\r\n        </Select>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    products: store.products\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({}, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComboVariations);","\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getPropValue } from '../../../../helpers/getPropValue';\r\nimport { updateStyling } from '../../../../helpers/updateStyling';\r\n\r\nimport { Input } from 'antd';\r\n\r\n// Actions\r\nimport { stylingActions } from '../../../../store/actions';\r\nimport { findItemColumnId } from '../../../../helpers/findItemColumnId';\r\n\r\nconst { setStyles } = stylingActions;\r\n\r\nconst SearchInput = (props: any) => {\r\n\r\n    const { styling, actions, style, placeholder, dragAndDrop } = props;\r\n    const { setStyles } = actions;\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n\r\n            const columnId = findItemColumnId(dragAndDrop, 'search-input');\r\n\r\n            const check = getPropValue({ styling, id: columnId, target: 'props', style: 'submitOnEnter', extra: '' });\r\n\r\n            if (check === null) {\r\n                updateStyling({\r\n                    setStyles,\r\n                    styling,\r\n                    id: columnId,\r\n                    target: 'props',\r\n                    toUpdate: {\r\n                        submitOnEnter: true\r\n                    }\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Input\r\n            placeholder={placeholder}\r\n            style={{ ...style }}\r\n        />\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    styling: store.styling,\r\n    dragAndDrop: store.dragAndDrop\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setStyles\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput);\r\n","import React, { useState } from 'react';\r\n// import { GoldOutlined, ReconciliationOutlined } from '@ant-design/icons';\r\nimport { Button, Row, Col, Avatar, InputNumber, Checkbox } from 'antd';\r\n\r\n// Elements\r\nimport OrderFormPagination from './Elements/OrderFormPagination';\r\nimport CategoryFilter from './Elements/CategoryFilter';\r\nimport ShortDescription from './Elements/ShortDescription';\r\nimport AddToCartCheckbox from './Elements/AddToCartCheckbox';\r\nimport ComboVariations from './Elements/ComboVariations';\r\nimport SearchInput from './Elements/SearchInput';\r\n\r\ndeclare var Options: any;\r\n\r\nconst getPropValue = (props: any) => {\r\n    const { properties, prop } = props;\r\n\r\n    if (typeof properties === 'undefined')\r\n        return null;\r\n    else if (typeof properties !== 'undefined' && typeof properties[prop] !== 'undefined')\r\n        return properties[prop];\r\n    else\r\n        return null;\r\n\r\n}\r\n\r\nconst PrintItem = (props: any) => {\r\n\r\n    const { item, styles, properties, products, pagination, orderForm } = props;\r\n\r\n    const [selectedAll, setSelectedAll] = useState(false);\r\n\r\n    const displayItem = (id: string) => {\r\n\r\n        switch (item.id) {\r\n\r\n            // HEADER AND FOOTER ELEMENTS\r\n            case 'search-input':\r\n\r\n                return (\r\n                    <SearchInput\r\n                        placeholder={getPropValue({ properties, prop: 'placeholder' }) || 'Search Products'}\r\n                        style={{ ...styles }}\r\n                    />\r\n                );\r\n            case 'category-filter':\r\n                return (\r\n                    <CategoryFilter\r\n                        placeholder={getPropValue({ properties, prop: 'placeholder' }) || 'Select Category'}\r\n                        style={{ ...styles }}\r\n                        products={products}\r\n                    />\r\n                );\r\n            case 'add-selected-to-cart-button':\r\n                return (\r\n                    <Button\r\n                        type=\"primary\"\r\n                        style={{ ...styles }}\r\n                    >{getPropValue({ properties, prop: 'buttonText' }) || 'Add Selected Products To Cart'}</Button>\r\n                );\r\n            case 'cart-subtotal':\r\n                return (<>\r\n                    <Row>\r\n                        <Col>\r\n                            <div\r\n                                style={{ ...styles }}\r\n                                dangerouslySetInnerHTML={{ __html: orderForm.cartSubtotal || 'Cart Empty' }}>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </>);\r\n            case 'product-count':\r\n                const totalProducts = pagination.total_products || 0;\r\n                return (<>\r\n                    <Row>\r\n                        <Col>\r\n                            <div\r\n                                style={{ ...styles }}\r\n                                {...properties}\r\n                                dangerouslySetInnerHTML={{ __html: `${totalProducts} Product(s)` }}>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </>);\r\n            case 'pagination':\r\n\r\n                let productPerPage = getPropValue({ properties, prop: 'productsPerPage' });\r\n                if (typeof productPerPage !== 'number')\r\n                    productPerPage = 0\r\n\r\n                return (\r\n                    <OrderFormPagination\r\n                        styles={{ ...styles }}\r\n                        products={products}\r\n                        productsPerPage={productPerPage}\r\n                    />\r\n                );\r\n            // case 'attribute-filter':\r\n            //     return (\r\n            //         <div\r\n            //             style={{ ...styles }}\r\n            //         >\r\n            //             <GoldOutlined />\r\n            //             {item.content}\r\n            //         </div>\r\n            //     );\r\n\r\n            case 'search-button':\r\n                return (\r\n                    <Button\r\n                        type=\"primary\"\r\n                        style={{ ...styles }}\r\n                    >{getPropValue({ properties, prop: 'buttonText' }) || 'Search'}</Button>\r\n                );\r\n            case 'clear-filters':\r\n                return (\r\n                    <Button\r\n                        type=\"primary\"\r\n                        style={{ ...styles }}\r\n                    >{getPropValue({ properties, prop: 'buttonText' }) || 'Clear Filters'}</Button>\r\n                );\r\n\r\n            // TABLE ELEMENTS\r\n            case 'product-image':\r\n                const placeholder = Options.site_url + '/wp-content/uploads/woocommerce-placeholder-300x300.png';\r\n                return (<>\r\n                    <div className='row heading'>\r\n                        {getPropValue({ properties, prop: 'columnHeading' }) || item.content}\r\n                    </div>\r\n                    {products.products.map((d: any, i: any) => {\r\n                        return (\r\n                            <div key={i} className='row'>\r\n                                {\r\n                                    d.images.length > 0 ?\r\n                                        <Avatar src={d.images[0]['src']} shape=\"square\" style={{ width: '48px', height: '48px' }} />\r\n                                        :\r\n                                        <Avatar src={placeholder} shape=\"square\" style={{ width: '48px', height: '48px' }} />\r\n                                }\r\n\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </>);\r\n            case 'product-name':\r\n                return (<>\r\n                    <div className='row heading'>\r\n                        {getPropValue({ properties, prop: 'columnHeading' }) || item.content}\r\n                    </div>\r\n                    {products.products.map((d: any, i: any) => {\r\n                        return (\r\n                            <div key={i} className='row'>\r\n                                {d.name}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </>);\r\n            case 'sku':\r\n                return (<>\r\n                    <div className='row heading'>\r\n                        {getPropValue({ properties, prop: 'columnHeading' }) || item.content}\r\n                    </div>\r\n                    {products.products.map((d: any, i: any) => {\r\n                        return (\r\n                            <div key={i} className='row'>\r\n                                {d.sku}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </>);\r\n            case 'in-stock-amount':\r\n                return (<>\r\n                    <div className='row heading'>\r\n                        {getPropValue({ properties, prop: 'columnHeading' }) || item.content}\r\n                    </div>\r\n                    {products.products.map((d: any, i: any) => {\r\n                        return (\r\n                            <div key={i} className='row'>\r\n                                {d.stock_status === \"outofstock\" ? \"Out of stock\" : d.stock_quantity}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </>);\r\n            case 'price':\r\n                return (<>\r\n                    <div className='row heading'>\r\n                        {getPropValue({ properties, prop: 'columnHeading' }) || item.content}\r\n                    </div>\r\n                    {products.products.map((d: any, i: any) => {\r\n                        return (\r\n                            <div\r\n                                key={i}\r\n                                className='row'\r\n                                dangerouslySetInnerHTML={{ __html: d.price_html }}\r\n                            />\r\n                        );\r\n                    })}\r\n                </>);\r\n            case 'quantity-input':\r\n                return (<>\r\n                    <div className='row heading'>\r\n                        {getPropValue({ properties, prop: 'columnHeading' }) || item.content}\r\n                    </div>\r\n                    {products.products.map((d: any, i: any) => {\r\n                        return (\r\n                            <div key={i} className='row'>\r\n                                <InputNumber\r\n                                    min={1}\r\n                                    defaultValue={1}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </>);\r\n            case 'add-to-cart-button':\r\n                return (<>\r\n                    <div className='row heading'>\r\n                        {getPropValue({ properties, prop: 'columnHeading' }) || item.content}\r\n                    </div>\r\n                    {products.products.map((d: any, i: any) => {\r\n                        return (\r\n                            <div key={i} className='row'>\r\n                                <Button type='primary'>{getPropValue({ properties, prop: 'buttonText' }) || 'Add To Cart'}</Button>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </>);\r\n            case 'combo-variation-dropdown':\r\n                return (<>\r\n                    <div className='row heading'>\r\n                        {getPropValue({ properties, prop: 'columnHeading' }) || item.content}\r\n                    </div>\r\n                    {products.products.map((d: any, i: any) => {\r\n                        return (\r\n                            <div key={i} className='row'>\r\n                                <ComboVariations\r\n                                    product={d}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </>);\r\n\r\n            // case 'standard-variation-dropdowns':\r\n            //     return (<>\r\n            //         <div className='row heading'>\r\n            //             {getPropValue({ properties, prop: 'columnHeading' }) || item.content}\r\n            //         </div>\r\n            //         {products.products.map((d: any, i: any) => {\r\n            //             return (\r\n            //                 <div key={i} className='row'>\r\n            //                     <Select\r\n            //                         showSearch\r\n            //                         placeholder='Select Variation'\r\n            //                         style={{ width: 250, marginTop: 10 }}\r\n            //                         filterOption={false}\r\n            //                         notFoundContent='No results found'\r\n            //                         allowClear={true} >\r\n            //                     </Select>\r\n            //                 </div>\r\n            //             );\r\n            //         })}\r\n            // </>);\r\n\r\n            // case 'product-meta':\r\n            //     return (<>\r\n            //         <div className='row heading'>\r\n            //             {getPropValue({ properties, prop: 'columnHeading' }) || item.content}\r\n            //         </div>\r\n            //         {products.products.map((d: any, i: any) => {\r\n            //             return (\r\n            //                 <div key={i} className='row'>\r\n            //                     Product Meta {i}\r\n            //                 </div>\r\n            //             );\r\n            //         })}\r\n            //     </>);\r\n            // case 'global-attribute':\r\n            //     return (<>\r\n            //         <div className='row heading'>\r\n            //             {getPropValue({ properties, prop: 'columnHeading' }) || item.content}\r\n            //         </div>\r\n            //         {products.products.map((d: any, i: any) => {\r\n            //             return (\r\n            //                 <div key={i} className='row'>\r\n            //                     Global Attribute {i}\r\n            //                 </div>\r\n            //             );\r\n            //         })}\r\n            //     </>);\r\n            case 'short-description':\r\n                return (<>\r\n                    <div className='row heading'>\r\n                        {getPropValue({ properties, prop: 'columnHeading' }) || item.content}\r\n                    </div>\r\n                    {products.products.map((d: any, i: any) => {\r\n                        return (\r\n                            <ShortDescription\r\n                                product={d}\r\n                                key={i}\r\n                            />\r\n                        );\r\n                    })}\r\n                </>);\r\n\r\n            case 'add-to-cart-checkbox':\r\n                return (<>\r\n                    <div className='row heading'>\r\n                        <Checkbox\r\n                            onChange={(e) => setSelectedAll(e.target.checked)} />\r\n                    </div>\r\n                    {products.products.map((d: any, i: any) => {\r\n                        return (\r\n                            <AddToCartCheckbox\r\n                                product={d}\r\n                                key={i}\r\n                                selectedAll={selectedAll}\r\n                            />\r\n                        );\r\n                    })}\r\n                </>);\r\n\r\n            // WOOCOMMERCE WIDGETS\r\n            // case 'cart-widget':\r\n            //     return (<><ReconciliationOutlined /> {item.content}</>);\r\n            // case 'filter-products-by-attribute':\r\n            //     return (<><GoldOutlined /> {item.content}</>);\r\n            // case 'filter-products-by-price':\r\n            //     return (<><GoldOutlined /> {item.content}</>);\r\n            default:\r\n                return (<></>);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {typeof item !== 'undefined' ? displayItem(item.id) : ''}\r\n        </>\r\n    )\r\n}\r\n\r\n// Array.from(Array(itemsPerPage).keys()).map\r\n\r\nexport default PrintItem;","import React from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport AddNewRow from './AddNewRow';\r\nimport ManageColumn from '../../ManageColumn';\r\nimport ManageRow from '../../ManageRow';\r\nimport PrintItem from '../../PrintItem';\r\n\r\n// Redux\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport { stylingActions, dragAndDropActions } from '../../../../store/actions';\r\n\r\nconst { setDndData } = dragAndDropActions;\r\nconst { setShowStyling, setStyles } = stylingActions;\r\n\r\nconst HeaderFooterSection = (props: any) => {\r\n\r\n    const { data, sectionId, actions, styling, products, readableStyles, pagination, orderForm } = props;\r\n    const { setShowStyling, setStyles, setDndData } = actions;\r\n    const dataRows = data['editorArea'][sectionId];\r\n\r\n    // If there are no elements inside header and footer show \"Add New Section\" option\r\n    if (dataRows['rows'].length === 0)\r\n        return <AddNewRow sectionId={sectionId} hasRows={false} />\r\n    else\r\n        return (\r\n            <Droppable\r\n                droppableId={sectionId}\r\n                // direction=\"horizontal\"\r\n                type={sectionId}\r\n            >\r\n                {(provided) => (\r\n                    <div\r\n                        className={`formHeaderFooterContainer`}\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        style={{\r\n                            border: '1px solid #eee',\r\n                            background: \"#efefef\",\r\n                            padding: 10,\r\n                            display: 'grid',\r\n                            gridGap: '10px',\r\n                        }}\r\n                    >\r\n                        {Object.keys(dataRows['rows']).map((row: any, index: any) => {\r\n                            const rowId = dataRows['rows'][row]['rowId'];\r\n                            const rowStyles = styling.styles[rowId] !== undefined ? styling.styles[rowId] : {};\r\n                            const columns = dataRows['rows'][row]['columns'];\r\n\r\n                            const rowProps = { sectionId, row, data, setData: setDndData, setShowStyling, styling, setStyles };\r\n\r\n                            return (\r\n                                <Draggable\r\n                                    draggableId={`${sectionId}-${row}`}\r\n                                    index={index}\r\n                                    key={`${sectionId}-${row}`}\r\n                                >\r\n                                    {(provided, snapshot) => (\r\n                                        <div\r\n                                            {...provided.draggableProps}\r\n                                            ref={provided.innerRef}\r\n                                            key={index}\r\n                                            className={`row ${rowId}`}\r\n                                            style={{\r\n                                                border: '1px solid #fff',\r\n                                                minHeight: '40px',\r\n                                                backgroundColor: snapshot.isDragging\r\n                                                    ? \"#263B4A\"\r\n                                                    : \"inherit\",\r\n                                                color: snapshot.isDragging ? \"white\" : '#000',\r\n                                                ...readableStyles({ styles: rowStyles['box'] }),\r\n                                                ...provided.draggableProps.style\r\n                                            }}\r\n                                        >\r\n                                            <ManageRow {...rowProps} provided={provided} snapshot={snapshot} />\r\n\r\n                                            <Droppable\r\n                                                droppableId={`${sectionId}-${row}`}\r\n                                                direction=\"horizontal\"\r\n                                                type={`${sectionId}-${row}`}\r\n                                            >\r\n                                                {(provided, snapshot) => (\r\n                                                    <div\r\n                                                        {...provided.droppableProps}\r\n                                                        ref={provided.innerRef}\r\n                                                        style={{\r\n                                                            display: 'flex',\r\n                                                            flexDirection: 'row',\r\n                                                        }}\r\n                                                    >\r\n                                                        {Object.keys(columns).map((col: any, index: any) => {\r\n                                                            const colId = columns[col]['colId'];\r\n                                                            const colStyles = styling.styles[colId] !== undefined ? styling.styles[colId] : {};\r\n                                                            const items = dataRows['rows'][row]['columns'][col]['itemIds'];\r\n\r\n                                                            return (\r\n                                                                <Draggable\r\n                                                                    draggableId={`${sectionId}-${row}-${col}`}\r\n                                                                    index={index}\r\n                                                                    key={`${sectionId}-${row}-${col}`}\r\n                                                                >\r\n                                                                    {(provided, snapshot) => {\r\n\r\n                                                                        const itemProvided = provided;\r\n                                                                        const itemSnapshot = snapshot;\r\n\r\n                                                                        const readableColStyles = readableStyles({ styles: colStyles['box'] });\r\n                                                                        let hasCustomWidth = false;\r\n\r\n                                                                        if (readableColStyles && typeof readableColStyles['width'] !== 'undefined') {\r\n                                                                            if (readableColStyles['width'].indexOf('px') >= 0) {\r\n                                                                                const val = parseInt(readableColStyles['width']);\r\n                                                                                if (val)\r\n                                                                                    hasCustomWidth = true;\r\n                                                                            }\r\n                                                                        }\r\n\r\n                                                                        return (\r\n                                                                            <div\r\n                                                                                {...provided.draggableProps}\r\n                                                                                className={`col ${col}`}\r\n                                                                                ref={provided.innerRef}\r\n                                                                                key={index}\r\n                                                                                style={{\r\n                                                                                    minHeight: '40px',\r\n                                                                                    flex: hasCustomWidth ? 'none' : 1,\r\n                                                                                    // margin: '5px',\r\n                                                                                    padding: '4px',\r\n                                                                                    backgroundColor: snapshot.isDragging\r\n                                                                                        ? \"#263B4A\"\r\n                                                                                        : \"inherit\",\r\n                                                                                    color: snapshot.isDragging ? \"white\" : '#000',\r\n                                                                                    ...provided.draggableProps.style\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                <span style={{ display: 'none' }} {...provided.dragHandleProps}></span>\r\n                                                                                <Droppable\r\n                                                                                    droppableId={`${sectionId}-${row}-${col}-item`}\r\n                                                                                    // direction=\"horizontal\"\r\n                                                                                    // type={`${row}${col}`}\r\n                                                                                    type={sectionId !== 'formTable' ? \"HEADER-FOOTER\" : \"DEFAULT\"}\r\n                                                                                    isDropDisabled={items.length > 0 ? true : false}\r\n                                                                                >\r\n                                                                                    {(provided, snapshot) => (\r\n                                                                                        <div\r\n                                                                                            className={`drop-item ${items.length > 0 ? 'has-items' : 'no-item'}`}\r\n                                                                                            {...provided.droppableProps}\r\n                                                                                            ref={provided.innerRef}\r\n                                                                                            style={{\r\n                                                                                                border: '1px solid #fff',\r\n                                                                                                background: snapshot.isDraggingOver\r\n                                                                                                    ? \"lightblue\"\r\n                                                                                                    : \"inherit\",\r\n                                                                                                ...readableStyles({ styles: colStyles['box'] })\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            {!snapshot.isDraggingOver && items.length === 0 ? 'Drop Item Here' : ''}\r\n                                                                                            {items.map((itemKey: any, index: any) => {\r\n\r\n                                                                                                const item = data['items'][itemKey];\r\n\r\n                                                                                                return (\r\n                                                                                                    <Draggable\r\n                                                                                                        draggableId={`${sectionId}-${row}-${col}-item`}\r\n                                                                                                        index={index}\r\n                                                                                                        key={`${sectionId}-${row}-${col}-item`}\r\n                                                                                                        isDragDisabled={true}\r\n                                                                                                    >\r\n                                                                                                        {(provided, snapshot) => {\r\n\r\n                                                                                                            const colProps = { setStyles, styling, colId, sectionId, item, data, setDndData, area: `${sectionId}-${row}-${col}`, setShowStyling }\r\n                                                                                                            const printItemProps = { item, styles: readableStyles({ styles: colStyles['element'] }), properties: colStyles['props'], products, pagination, orderForm }\r\n\r\n                                                                                                            return (\r\n                                                                                                                <>\r\n                                                                                                                    <ManageColumn {...colProps} provided={itemProvided} snapshot={itemSnapshot} />\r\n                                                                                                                    <div\r\n                                                                                                                        {...provided.dragHandleProps}\r\n                                                                                                                        {...provided.draggableProps}\r\n                                                                                                                        className={`col ${col} item`}\r\n                                                                                                                        ref={provided.innerRef}\r\n                                                                                                                        style={{\r\n                                                                                                                            backgroundColor: snapshot.isDragging\r\n                                                                                                                                ? \"#263B4A\"\r\n                                                                                                                                : \"inherit\",\r\n                                                                                                                            color: snapshot.isDragging ? \"white\" : '#000',\r\n                                                                                                                            ...readableStyles({ styles: colStyles['box'] }),\r\n                                                                                                                            width: '100%',\r\n                                                                                                                            height: '100%',\r\n                                                                                                                            display: 'flex',\r\n                                                                                                                            ...provided.draggableProps.style,\r\n                                                                                                                        }}\r\n                                                                                                                    >\r\n                                                                                                                        <PrintItem {...printItemProps} />\r\n                                                                                                                    </div>\r\n                                                                                                                </>\r\n                                                                                                            )\r\n                                                                                                        }}\r\n                                                                                                    </Draggable>\r\n                                                                                                )\r\n                                                                                            })}\r\n                                                                                            {provided.placeholder}\r\n                                                                                        </div>\r\n                                                                                    )}\r\n                                                                                </Droppable>\r\n                                                                            </div>\r\n                                                                        )\r\n                                                                    }}\r\n                                                                </Draggable>\r\n                                                            )\r\n                                                        })}\r\n                                                        {provided.placeholder}\r\n                                                    </div>\r\n                                                )\r\n                                                }\r\n                                            </Droppable>\r\n\r\n                                        </div>\r\n                                    )\r\n                                    }\r\n                                </Draggable>\r\n\r\n                            )\r\n                        })}\r\n                        <AddNewRow sectionId={sectionId} hasRows={true} />\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )\r\n                }\r\n            </Droppable >\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    orderForm: store.orderForm,\r\n    data: store.dragAndDrop,\r\n    styling: store.styling,\r\n    products: store.products,\r\n    pagination: store.pagination\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setShowStyling,\r\n        setStyles,\r\n        setDndData\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderFooterSection);","import React, { useEffect } from 'react';\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport ManageColumn from '../../ManageColumn';\r\nimport PrintItem from '../../PrintItem';\r\n\r\n// Redux\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport { stylingActions, productActions, dragAndDropActions } from '../../../../store/actions';\r\n\r\nconst { setShowStyling } = stylingActions;\r\nconst { fetchProducts, fetchCategories } = productActions;\r\nconst { setDndData } = dragAndDropActions;\r\n\r\nconst TableSection = (props: any) => {\r\n\r\n    const { pagination, sectionId, data, styling, products, actions } = props;\r\n    const { setShowStyling, fetchProducts, fetchCategories, setDndData } = actions;\r\n\r\n    useEffect(() => {\r\n\r\n        fetchCategories({\r\n            categories: []\r\n        });\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Droppable\r\n            direction={\"horizontal\"}\r\n            droppableId={sectionId}\r\n            key={sectionId}\r\n        >\r\n            {(provided, snapshot) => {\r\n                return (\r\n                    <div\r\n                        className={`columns ${sectionId} ${sectionId}Container`}\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        style={{\r\n                            border: '1px solid #eee',\r\n                            background: snapshot.isDraggingOver\r\n                                ? \"lightblue\"\r\n                                : \"#efefef\",\r\n                            padding: 4,\r\n                            minHeight: data['editorArea'][sectionId]['itemIds'].length <= 0 ? '250px' : ''\r\n                        }}\r\n                    >\r\n                        {data['editorArea'][sectionId]['itemIds'].map((itemId: any, index: any) => {\r\n\r\n                            const colStyles = styling.styles[itemId] !== undefined ? styling.styles[itemId] : {};\r\n                            const colId = data['editorArea'][sectionId]['colId'];\r\n                            const item = data['items'][itemId];\r\n\r\n                            if (typeof item === 'undefined')\r\n                                return (<div key={index}></div>)\r\n                            else\r\n                                return (\r\n                                    <Draggable\r\n                                        key={item.id}\r\n                                        draggableId={item.id}\r\n                                        index={index}\r\n                                    >\r\n                                        {(provided, snapshot) => {\r\n\r\n                                            const colProps = { colId, sectionId, item, data, setDndData, setShowStyling };\r\n\r\n                                            return (\r\n                                                <div\r\n                                                    className={`table-item ${snapshot.isDragging ? 'is-dragging' : 'dropped'}`}\r\n                                                    // {...provided.dragHandleProps}\r\n                                                    ref={provided.innerRef}\r\n                                                    {...provided.draggableProps}\r\n                                                    style={{\r\n                                                        padding: sectionId === 'formTable' ? '0px' : 8,\r\n                                                        backgroundColor: snapshot.isDragging\r\n                                                            ? \"#263B4A\"\r\n                                                            : \"#fff\",\r\n                                                        color: snapshot.isDragging ? \"white\" : '#000',\r\n                                                        marginBottom: sectionId === 'formTable' ? '0px' : '5px',\r\n                                                        flex: sectionId === 'formTable' ? '1' : 'none',\r\n                                                        ...colStyles['element'],\r\n                                                        ...provided.draggableProps.style,\r\n                                                    }}\r\n                                                >\r\n                                                    <ManageColumn {...colProps} provided={provided} snapshot={snapshot} />\r\n                                                    <PrintItem item={item} products={products} properties={colStyles['props']} />\r\n                                                    {/* {printItemControl({ item, products })} */}\r\n                                                </div>\r\n                                            );\r\n                                        }}\r\n                                    </Draggable>\r\n                                );\r\n                        })}\r\n                        {provided.placeholder}\r\n                    </div>\r\n\r\n                );\r\n            }}\r\n        </Droppable>)\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    data: store.dragAndDrop,\r\n    styling: store.styling,\r\n    products: store.products,\r\n    pagination: store.pagination\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setShowStyling,\r\n        fetchProducts,\r\n        fetchCategories,\r\n        setDndData\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableSection);","import React from 'react'\r\n\r\nimport HeaderFooterSection from './HeaderFooterSection';\r\nimport TableSection from './TableSection';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\n\r\nconst readableStyles = (props: any) => {\r\n\r\n    const { styles } = props;\r\n\r\n    let stylesCopy: any = {};\r\n    if (typeof styles === 'undefined') return;\r\n\r\n    Object.keys(styles).map((style: any, index: any) => {\r\n\r\n        switch (style) {\r\n            case 'width':\r\n                if (styles[style].type === 'percentage')\r\n                    stylesCopy[style] = `${styles[style].value}%`;\r\n                else if (styles[style].type === 'pixels')\r\n                    stylesCopy[style] = `${styles[style].value}px`;\r\n                break;\r\n            case 'fontSize':\r\n                if (styles[style].type === 'percentage')\r\n                    stylesCopy[style] = `${styles[style].value}%`;\r\n                else if (styles[style].type === 'pixels')\r\n                    stylesCopy[style] = `${styles[style].value}px`;\r\n                break;\r\n            default:\r\n                stylesCopy[style] = styles[style];\r\n        }\r\n\r\n    });\r\n\r\n    return stylesCopy;\r\n\r\n}\r\n\r\nconst OrderFormContent = (props: any) => {\r\n\r\n    const { data } = props;\r\n\r\n    // Loop through section Header, Table, Footer\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            flexDirection: 'column',\r\n        }} className=\"editor-area\">\r\n            {\r\n                Object.keys(data['editorArea']).map((sectionId: any, index: any) => {\r\n                    const column = data['editorArea'][sectionId];\r\n                    return (\r\n                        <div\r\n                            className={`sections ${sectionId}`}\r\n                            style={{\r\n                                margin: '10px',\r\n                                position: 'relative'\r\n                            }}\r\n                            key={sectionId}>\r\n\r\n                            <h4 style={{ marginTop: '10px' }}>{column.title}</h4>\r\n                            {\r\n                                sectionId !== 'formTable' ?\r\n                                    <HeaderFooterSection sectionId={sectionId} readableStyles={readableStyles} />\r\n                                    :\r\n                                    <TableSection sectionId={sectionId} readableStyles={readableStyles} />\r\n                            }\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    data: store.dragAndDrop\r\n});\r\n\r\nexport default connect(mapStateToProps)(OrderFormContent);","import React, { useEffect, useState } from 'react';\r\nimport { Tooltip } from 'antd';\r\nimport { AlignLeftOutlined, AlignCenterOutlined, AlignRightOutlined } from '@ant-design/icons';\r\n\r\nconst Alignment = (props: any) => {\r\n\r\n    const { styling, setStyles, id, target, updateStyling, getStyleValue } = props;\r\n    const [alignment, setAlignment] = useState(\r\n        getStyleValue({ styling, id, target, style: 'justifyContent', extra: '' }) || 'flex-start'\r\n    )\r\n\r\n    useEffect(() => {\r\n\r\n        setAlignment(\r\n            getStyleValue({ styling, id, target, style: 'justifyContent', extra: '' }) || 'flex-start'\r\n        )\r\n\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"alignment\">\r\n            <label htmlFor=\"alignment\">Element Alignment:</label>\r\n            <Tooltip title=\"Left\">\r\n                <AlignLeftOutlined\r\n                    style={{ color: alignment === 'flex-start' ? '#0071a1' : '' }}\r\n                    onClick={() => {\r\n                        updateStyling({\r\n                            setStyles,\r\n                            styling,\r\n                            id,\r\n                            target,\r\n                            toUpdate: { justifyContent: 'flex-start' }\r\n                        });\r\n                        setAlignment('flex-start');\r\n                    }}\r\n                />\r\n            </Tooltip>\r\n            <Tooltip title=\"Center\">\r\n                <AlignCenterOutlined\r\n                    style={{ color: alignment === 'center' ? '#0071a1' : '' }}\r\n                    onClick={() => {\r\n                        updateStyling({\r\n                            setStyles,\r\n                            styling,\r\n                            id,\r\n                            target,\r\n                            toUpdate: { justifyContent: 'center' }\r\n                        });\r\n                        setAlignment('center');\r\n                    }}\r\n                />\r\n            </Tooltip>\r\n            <Tooltip title=\"Right\">\r\n                <AlignRightOutlined\r\n                    style={{ color: alignment === 'flex-end' ? '#0071a1' : '' }}\r\n                    onClick={() => {\r\n                        updateStyling({\r\n                            setStyles,\r\n                            styling,\r\n                            id,\r\n                            target,\r\n                            toUpdate: { justifyContent: 'flex-end' }\r\n                        })\r\n                        setAlignment('flex-end');\r\n                    }}\r\n                />\r\n            </Tooltip>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alignment;","import React, { useState } from 'react';\r\nimport { Tooltip, InputNumber } from 'antd';\r\nimport { LinkOutlined, DisconnectOutlined } from '@ant-design/icons';\r\n\r\nconst Margin = (props: any) => {\r\n\r\n    const { styling, setStyles, id, target, updateStyling } = props;\r\n    const [linkMargin, setLinkMargin] = useState(true);\r\n\r\n    const margins: any = { Top: 'marginTop', Right: 'marginRight', Bottom: 'marginBottom', Left: 'marginLeft' };\r\n\r\n    const inputNumbers = Object.keys(margins).map((key: any) => {\r\n\r\n        let margin = 0;\r\n        if (\r\n            typeof styling.styles[id] !== 'undefined' &&\r\n            typeof styling.styles[id][target] !== 'undefined' &&\r\n            styling.styles[id][target][margins[key]] > 0\r\n        )\r\n            margin = styling.styles[id][target][margins[key]];\r\n\r\n        return <InputNumber\r\n            placeholder={key}\r\n            key={key}\r\n            onChange={(val: any) =>\r\n                linkMargin ?\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            marginTop: val,\r\n                            marginRight: val,\r\n                            marginBottom: val,\r\n                            marginLeft: val\r\n                        }\r\n                    })\r\n                    :\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            [margins[key]]: val\r\n                        }\r\n                    })\r\n            }\r\n            value={margin}\r\n        />\r\n    })\r\n\r\n    return (\r\n        <div className=\"margin\">\r\n            <label htmlFor=\"margin\">Margin:</label>\r\n            {inputNumbers}\r\n            {\r\n                linkMargin ?\r\n                    <Tooltip title=\"Linked\">\r\n                        <LinkOutlined\r\n                            onClick={() => {\r\n                                setLinkMargin(false)\r\n                            }}\r\n                            style={{ color: '#0071a1' }}\r\n                        />\r\n                    </Tooltip> :\r\n                    <Tooltip title=\"Not Linked\">\r\n                        <DisconnectOutlined\r\n                            onClick={() => {\r\n                                setLinkMargin(true)\r\n                                updateStyling({\r\n                                    setStyles,\r\n                                    styling,\r\n                                    id,\r\n                                    target,\r\n                                    toUpdate: {\r\n                                        marginTop: styling.styles[id][target]['marginTop'],\r\n                                        marginRight: styling.styles[id][target]['marginTop'],\r\n                                        marginBottom: styling.styles[id][target]['marginTop'],\r\n                                        marginLeft: styling.styles[id][target]['marginTop']\r\n                                    }\r\n                                })\r\n                            }}\r\n                        />\r\n                    </Tooltip>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Margin;","import React, { useState } from 'react';\r\nimport { Tooltip, InputNumber } from 'antd';\r\nimport { LinkOutlined, DisconnectOutlined } from '@ant-design/icons';\r\n\r\nconst Padding = (props: any) => {\r\n\r\n    const { styling, setStyles, id, target, updateStyling } = props;\r\n    const [linkPadding, setLinkPadding] = useState(true);\r\n\r\n    const paddings: any = { Top: 'paddingTop', Right: 'paddingRight', Bottom: 'paddingBottom', Left: 'paddingLeft' };\r\n\r\n    const inputNumbers = Object.keys(paddings).map((key: any) => {\r\n\r\n        let padding = 0\r\n        if (\r\n            typeof styling.styles[id] !== 'undefined' &&\r\n            typeof styling.styles[id][target] !== 'undefined' &&\r\n            styling.styles[id][target][paddings[key]] > 0\r\n        )\r\n            padding = styling.styles[id][target][paddings[key]];\r\n\r\n        return <InputNumber\r\n            placeholder={key}\r\n            key={key}\r\n            onChange={(val: any) =>\r\n                linkPadding ?\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            paddingTop: val,\r\n                            paddingRight: val,\r\n                            paddingBottom: val,\r\n                            paddingLeft: val\r\n                        }\r\n                    })\r\n                    :\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            [paddings[key]]: val\r\n                        }\r\n                    })\r\n            }\r\n            value={padding}\r\n        />\r\n    })\r\n\r\n    return (\r\n        <div className=\"padding\">\r\n            <label htmlFor=\"padding\">Padding:</label>\r\n            {inputNumbers}\r\n            {\r\n                linkPadding ?\r\n                    <Tooltip title=\"Linked\">\r\n                        <LinkOutlined\r\n                            onClick={() => {\r\n                                setLinkPadding(false)\r\n                            }}\r\n                            style={{ color: '#0071a1' }}\r\n                        />\r\n                    </Tooltip> :\r\n                    <Tooltip title=\"Not Linked\">\r\n                        <DisconnectOutlined\r\n                            onClick={() => {\r\n                                setLinkPadding(true)\r\n                                updateStyling({\r\n                                    setStyles,\r\n                                    styling,\r\n                                    id,\r\n                                    target,\r\n                                    toUpdate: {\r\n                                        paddingTop: styling.styles[id][target]['paddingTop'],\r\n                                        paddingRight: styling.styles[id][target]['paddingTop'],\r\n                                        paddingBottom: styling.styles[id][target]['paddingTop'],\r\n                                        paddingLeft: styling.styles[id][target]['paddingTop']\r\n                                    }\r\n                                })\r\n                            }}\r\n                        />\r\n                    </Tooltip>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Padding;","import React, { useEffect, useState } from 'react';\r\nimport { InputNumber, Radio } from 'antd';\r\n\r\nconst FontSize = (props: any) => {\r\n\r\n    const { styling, setStyles, id, target, updateStyling, getStyleValue } = props;\r\n    const [type, setType] = useState(\r\n        getStyleValue({ styling, id, target, style: 'fontSize', extra: 'type' }) || 'percentage'\r\n    );\r\n\r\n    const [fontSize, setFontSize] = useState(\r\n        getStyleValue({ styling, id, target, style: 'fontSize', extra: 'value' }) || ''\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        setType(\r\n            getStyleValue({ styling, id, target, style: 'fontSize', extra: 'type' }) || 'percentage'\r\n        )\r\n\r\n        setFontSize(\r\n            getStyleValue({ styling, id, target, style: 'fontSize', extra: 'value' }) || ''\r\n        )\r\n\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"font-size\">\r\n            <label htmlFor=\"font-size\">Font Size:</label>\r\n            <InputNumber\r\n                style={{ width: 100 }}\r\n                min={1}\r\n                defaultValue={1}\r\n                value={fontSize}\r\n                onChange={(value: any) => {\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            fontSize: {\r\n                                value,\r\n                                type\r\n                            }\r\n                        }\r\n                    });\r\n                    setFontSize(value);\r\n                }}\r\n            />\r\n            <Radio.Group\r\n                onChange={(e) => {\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            fontSize: {\r\n                                value: fontSize,\r\n                                type: e.target.value\r\n                            }\r\n                        }\r\n                    });\r\n                    setType(e.target.value);\r\n                }}\r\n                value={type}\r\n                style={{ display: 'inline-flex' }}\r\n            >\r\n                <Radio value=\"percentage\">%</Radio>\r\n                <Radio value=\"pixels\">px</Radio>\r\n            </Radio.Group>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default FontSize;","import React, { useState, useEffect } from 'react';\r\nimport { InputNumber, Radio } from 'antd';\r\n\r\nconst Width = (props: any) => {\r\n\r\n    const { styling, setStyles, id, target, updateStyling, getStyleValue } = props;\r\n\r\n    const [type, setType] = useState(\r\n        getStyleValue({ styling, id, target, style: 'width', extra: 'type' }) || 'percentage'\r\n    );\r\n\r\n    const [width, setWidth] = useState(\r\n        getStyleValue({ styling, id, target, style: 'width', extra: 'value' }) || 100\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        setWidth(\r\n            getStyleValue({ styling, id, target, style: 'width', extra: 'value' }) || 100\r\n        )\r\n\r\n        setType(\r\n            getStyleValue({ styling, id, target, style: 'width', extra: 'type' }) || 'percentage'\r\n        )\r\n\r\n    }, [styling.item.id]);\r\n\r\n    return (\r\n        <div className=\"width\">\r\n            <label htmlFor=\"width\">{target === 'box' ? 'Box Width' : 'Element Width'}:</label>\r\n            <InputNumber\r\n                style={{ width: 100 }}\r\n                value={width}\r\n                onChange={(value: any) => {\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            width: {\r\n                                value,\r\n                                type\r\n                            }\r\n                        }\r\n                    });\r\n                    setWidth(value);\r\n                }}\r\n            />\r\n            <Radio.Group\r\n                onChange={(e) => {\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            width: {\r\n                                value: width,\r\n                                type: e.target.value\r\n                            }\r\n                        }\r\n                    });\r\n                    setType(e.target.value);\r\n                }}\r\n                value={type}\r\n                style={{ display: 'inline-flex' }}\r\n            >\r\n                <Radio value=\"percentage\">%</Radio>\r\n                <Radio value=\"pixels\">px</Radio>\r\n            </Radio.Group>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Width;","import React from 'react';\r\n\r\nimport Alignment from './Alignment';\r\nimport Margin from './Margin';\r\nimport Padding from './Padding';\r\nimport FontSize from './FontSize';\r\nimport Width from './Width';\r\n\r\nconst getStyleValue = (props: any) => {\r\n\r\n    const { styling, id, target, style, extra } = props;\r\n\r\n    if (extra) {\r\n        if (\r\n            typeof styling.styles !== 'undefined' &&\r\n            typeof styling.styles[id] !== 'undefined' &&\r\n            typeof styling.styles[id][target] !== 'undefined' &&\r\n            typeof styling.styles[id][target][style] !== 'undefined' &&\r\n            typeof styling.styles[id][target][style][extra] !== 'undefined'\r\n        )\r\n            return styling.styles[id][target][style][extra];\r\n        else\r\n            return null;\r\n    } else {\r\n        if (\r\n            typeof styling.styles !== 'undefined' &&\r\n            typeof styling.styles[id] !== 'undefined' &&\r\n            typeof styling.styles[id][target] !== 'undefined' &&\r\n            typeof styling.styles[id][target][style] !== 'undefined'\r\n        )\r\n            return styling.styles[id][target][style];\r\n        else\r\n            return null;\r\n    }\r\n\r\n}\r\n\r\nconst updateStyling = (props: any) => {\r\n\r\n    const { setStyles, styling, id, target, toUpdate } = props;\r\n\r\n    if (typeof styling.styles[id] === 'undefined') {\r\n        const newData = {\r\n            [id]: {\r\n                [target]: {\r\n                    ...toUpdate\r\n                }\r\n            }\r\n        }\r\n\r\n        setStyles({\r\n            ...styling,\r\n            styles: {\r\n                ...styling.styles,\r\n                ...newData\r\n            }\r\n        });\r\n\r\n    } else {\r\n\r\n        setStyles({\r\n            ...styling,\r\n            styles: {\r\n                ...styling.styles,\r\n                [id]: {\r\n                    ...styling.styles[id],\r\n                    [target]: {\r\n                        ...styling.styles[id][target],\r\n                        ...toUpdate\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\nconst ShowStyles = (props: any) => {\r\n\r\n    const { styling, setStyles } = props;\r\n    const id = styling.item.id;\r\n    const styleProps = {\r\n        styling, setStyles, id, updateStyling, getStyleValue\r\n    }\r\n\r\n    const displayStyles = () => {\r\n\r\n        if (styling.item.type === 'ROW') {\r\n\r\n            return (<>\r\n                <Width {...styleProps} target='box' />\r\n                <Margin {...styleProps} target='box' />\r\n                <Padding {...styleProps} target='box' />\r\n            </>);\r\n\r\n        } else if (styling.item.type === 'ITEM') {\r\n\r\n            let options = [];\r\n            switch (styling.item.itemId) {\r\n                // Header / Footer Elements\r\n                case 'search-button':\r\n                case 'clear-filters':\r\n                case 'search-input':\r\n                case 'category-filter':\r\n                case 'add-selected-to-cart-button':\r\n                case 'cart-subtotal':\r\n                case 'product-count':\r\n                case 'pagination':\r\n                case 'attribute-filter':\r\n                case 'cart-widget':\r\n                case 'filter-products-by-attribute':\r\n                case 'filter-products-by-price':\r\n                    options.push(\r\n                        <Width {...styleProps} target='box' />,\r\n                        <Width {...styleProps} target='element' />,\r\n                        <Alignment {...styleProps} target='box' />,\r\n                        <FontSize {...styleProps} target='element' />,\r\n                        <Margin {...styleProps} target='element' />,\r\n                        <Padding {...styleProps} target='element' />\r\n                    );\r\n                    break;\r\n                // Table Elements\r\n                case 'product-image':\r\n                case 'product-name':\r\n                case 'sku':\r\n                case 'in-stock-amount':\r\n                case 'price':\r\n                case 'quantity-input':\r\n                case 'add-to-cart-button':\r\n                case 'combo-variation-dropdown':\r\n                case 'standard-variation-dropdowns':\r\n                case 'product-meta':\r\n                case 'global-attribute':\r\n                case 'short-description':\r\n                    // options.push(\r\n                    //     <FontSize {...styleProps} target='element' />\r\n                    // );\r\n                    // break;\r\n                    // options.push(<></>);\r\n                    break;\r\n                default:\r\n                // options.push(<></>);\r\n\r\n            }\r\n\r\n            if (options.length > 0)\r\n                return options.map((component: any, key: number) => React.cloneElement(component, { key }));\r\n            else\r\n                return (<>No Styles.</>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {displayStyles()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShowStyles;","import React, { useEffect, useState } from 'react';\r\nimport { Input } from 'antd';\r\n\r\nconst Placeholder = (props: any) => {\r\n\r\n    const { styling, setStyles, id, target, updateStyling, getPropValue } = props;\r\n    const [placeholderValue, setPlaceholderValue] = useState(\r\n        getPropValue({ styling, id, target, style: 'placeholder', extra: '' }) || ''\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        setPlaceholderValue(\r\n            getPropValue({ styling, id, target, style: 'placeholder', extra: '' }) || ''\r\n        )\r\n\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"placeholder\">\r\n            <label htmlFor=\"placeholder\">Placeholder:</label>\r\n            <Input\r\n                placeholder=\"Placeholder Text\"\r\n                value={placeholderValue ? placeholderValue : ''}\r\n                onChange={(e) => {\r\n                    const { value } = e.target;\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            placeholder: value\r\n                        }\r\n                    });\r\n                    setPlaceholderValue(value);\r\n                }} />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Placeholder;","import React, { useEffect, useState } from 'react';\r\nimport { Input } from 'antd';\r\n\r\n\r\nconst ButtonText = (props: any) => {\r\n\r\n    const { styling, setStyles, id, target, updateStyling, getPropValue } = props;\r\n    const [buttonTextValue, setButtonTextValue] = useState(\r\n        getPropValue({ styling, id, target, style: 'buttonText', extra: '' }) || ''\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        setButtonTextValue(\r\n            getPropValue({ styling, id, target, style: 'buttonText', extra: '' }) || ''\r\n        )\r\n\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"button-text\">\r\n            <label htmlFor=\"button-text\">Button Text:</label>\r\n            <Input\r\n                placeholder=\"Button Text\"\r\n                value={buttonTextValue ? buttonTextValue : ''}\r\n                onChange={(e) => {\r\n                    const { value } = e.target;\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            buttonText: value\r\n                        }\r\n                    });\r\n                    setButtonTextValue(value);\r\n                }} />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ButtonText;","import React, { useState, useEffect } from 'react';\r\nimport { InputNumber } from 'antd';\r\n\r\n// Redux\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport { paginationActions, productActions, orderFormActions } from '../../../../../store/actions';\r\n\r\nconst { setOrderFormSettingsData } = orderFormActions;\r\nconst { setPaginationState } = paginationActions;\r\nconst { fetchProducts } = productActions;\r\n\r\nconst ProductsPerPage = (props: any) => {\r\n\r\n    const { products, styling, setStyles, id, target, updateStyling, getPropValue, actions } = props;\r\n    const { setPaginationState, setOrderFormSettingsData } = actions;\r\n    const [value, setValue] = useState(\r\n        getPropValue({ styling, id, target, style: 'productsPerPage', extra: '' }) || 10\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        // If value is changed we update the \r\n        fetchProducts({\r\n            per_page: value\r\n        });\r\n\r\n    }, [value]);\r\n\r\n    useEffect(() => {\r\n\r\n        // If products is updated we update the products page page\r\n        setPaginationState({\r\n            per_page: value\r\n        });\r\n\r\n    }, [products])\r\n\r\n    useEffect(() => {\r\n\r\n        // Save this in the settings\r\n        setOrderFormSettingsData({\r\n            'products_per_page': value\r\n        });\r\n\r\n    }, [value]);\r\n\r\n    return (\r\n        <div className=\"products-per-page\">\r\n            <label htmlFor=\"products-per-page\">Products Per Page:</label>\r\n            <InputNumber\r\n                value={value}\r\n                onChange={(val: any) => {\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            productsPerPage: val\r\n                        }\r\n                    });\r\n                    setValue(val)\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({\r\n    products: store.products\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setPaginationState,\r\n        fetchProducts,\r\n        setOrderFormSettingsData\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsPerPage);","import React, { useEffect, useState } from 'react';\r\nimport { Checkbox } from 'antd';\r\n\r\n// Redux\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { orderFormActions } from '../../../../../store/actions';\r\n\r\nconst { setOrderFormSettingsData } = orderFormActions;\r\n\r\nconst Sort = (props: any) => {\r\n\r\n    const { styling, setStyles, id, target, updateStyling, getPropValue, actions } = props;\r\n    const { setOrderFormSettingsData } = actions;\r\n\r\n    const [value, setValue] = useState(\r\n        getPropValue({ styling, id, target, style: 'sort', extra: '' }) || false\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        setValue(\r\n            getPropValue({ styling, id, target, style: 'sort', extra: '' }) || false\r\n        )\r\n\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"sort-option\">\r\n            <Checkbox\r\n                checked={value}\r\n                onChange={(e: any) => {\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            sort: e.target.checked\r\n                        }\r\n                    });\r\n                    setValue(e.target.checked)\r\n                }}\r\n            >\r\n                Enable Sort\r\n            </Checkbox>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setOrderFormSettingsData\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sort);","import React, { useEffect, useState } from 'react';\r\nimport { Input } from 'antd';\r\n\r\n\r\nconst ColumnHeadingTitle = (props: any) => {\r\n\r\n    const { styling, setStyles, id, target, updateStyling, getPropValue } = props;\r\n    const [columnTitle, setColumnTitle] = useState(\r\n        getPropValue({ styling, id, target, style: 'columnHeading', extra: '' }) || ''\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        setColumnTitle(\r\n            getPropValue({ styling, id, target, style: 'columnHeading', extra: '' }) || ''\r\n        )\r\n\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"table-column-heading\">\r\n            <label htmlFor=\"table-column-heading\">Column Heading:</label>\r\n            <Input\r\n                placeholder=\"Column Heading\"\r\n                value={columnTitle}\r\n                onChange={(e) => {\r\n                    const { value } = e.target;\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            columnHeading: value\r\n                        }\r\n                    });\r\n                    setColumnTitle(value);\r\n                }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColumnHeadingTitle;","import React, { useEffect, useState } from 'react';\r\nimport { Checkbox } from 'antd';\r\n\r\nconst SubmitOnEnter = (props: any) => {\r\n\r\n    const { styling, setStyles, id, target, updateStyling, getPropValue } = props;\r\n    const [value, setValue] = useState(\r\n        getPropValue({ styling, id, target, style: 'submitOnEnter', extra: '' }) || true\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        setValue(\r\n            getPropValue({ styling, id, target, style: 'submitOnEnter', extra: '' }) || true\r\n        )\r\n\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"submit-on-enter\">\r\n            <Checkbox\r\n                checked={value}\r\n                onChange={(e: any) => {\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            submitOnEnter: e.target.checked\r\n                        }\r\n                    });\r\n                    setValue(e.target.checked)\r\n                }}\r\n            >\r\n                Submit On Enter\r\n            </Checkbox>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SubmitOnEnter;","import React, { useEffect, useState } from 'react';\r\nimport { Checkbox } from 'antd';\r\n\r\nconst SubmitOnChange = (props: any) => {\r\n\r\n    const { styling, setStyles, id, target, updateStyling, getPropValue } = props;\r\n    const [value, setValue] = useState(\r\n        getPropValue({ styling, id, target, style: 'submitOnChange', extra: '' }) || true\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        setValue(\r\n            getPropValue({ styling, id, target, style: 'submitOnChange', extra: '' }) || true\r\n        )\r\n\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"submit-on-change\">\r\n            <Checkbox\r\n                checked={value}\r\n                onChange={(e: any) => {\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            submitOnChange: e.target.checked\r\n                        }\r\n                    });\r\n                    setValue(e.target.checked)\r\n                }}\r\n            >\r\n                Submit On Change\r\n            </Checkbox>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SubmitOnChange;","import React, { useEffect, useState } from 'react';\r\nimport { Checkbox } from 'antd';\r\n\r\n// Redux\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { orderFormActions } from '../../../../../store/actions';\r\n\r\nconst { setOrderFormSettingsData } = orderFormActions;\r\n\r\nconst ShowPopUp = (props: any) => {\r\n\r\n    const { styling, setStyles, id, target, updateStyling, getPropValue, actions } = props;\r\n    const { setOrderFormSettingsData } = actions;\r\n\r\n    const [value, setValue] = useState(\r\n        getPropValue({ styling, id, target, style: 'showPopup', extra: '' }) || false\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        setValue(\r\n            getPropValue({ styling, id, target, style: 'showPopup', extra: '' }) || false\r\n        )\r\n\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"show-popup\">\r\n            <Checkbox\r\n                checked={value}\r\n                onChange={(e: any) => {\r\n                    updateStyling({\r\n                        setStyles,\r\n                        styling,\r\n                        id,\r\n                        target,\r\n                        toUpdate: {\r\n                            showPopup: e.target.checked\r\n                        }\r\n                    });\r\n                    setValue(e.target.checked)\r\n                }}\r\n            >\r\n                Show Popup On Click\r\n            </Checkbox>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (store: any) => ({});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setOrderFormSettingsData\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowPopUp);","import React from 'react';\r\nimport Placeholder from './Placeholder';\r\nimport ButtonText from './ButtonText';\r\nimport ProductsPerPage from './ProductsPerPage';\r\nimport Sort from './Sort';\r\nimport ColumnHeadingTitle from './ColumnHeadingTitle';\r\nimport SubmitOnEnter from './SubmitOnEnter';\r\nimport SubmitOnChange from './SubmitOnChange';\r\nimport ShowPopUp from './ShowPopUp';\r\nimport { getPropValue } from '../../../../helpers/getPropValue';\r\nimport { updateStyling } from '../../../../helpers/updateStyling';\r\n// const getPropValue = (props: any) => {\r\n\r\n//     const { styling, id, target, style, extra } = props;\r\n\r\n//     if (extra) {\r\n//         if (\r\n//             typeof styling.styles !== 'undefined' &&\r\n//             typeof styling.styles[id] !== 'undefined' &&\r\n//             typeof styling.styles[id][target] !== 'undefined' &&\r\n//             typeof styling.styles[id][target][style] !== 'undefined' &&\r\n//             typeof styling.styles[id][target][style][extra] !== 'undefined'\r\n//         )\r\n//             return styling.styles[id][target][style][extra];\r\n//         else\r\n//             return null;\r\n//     } else {\r\n//         if (\r\n//             typeof styling.styles !== 'undefined' &&\r\n//             typeof styling.styles[id] !== 'undefined' &&\r\n//             typeof styling.styles[id][target] !== 'undefined' &&\r\n//             typeof styling.styles[id][target][style] !== 'undefined'\r\n//         )\r\n//             return styling.styles[id][target][style];\r\n//         else\r\n//             return null;\r\n//     }\r\n\r\n// }\r\n\r\n// const updateStyling = (props: any) => {\r\n\r\n//     const { setStyles, styling, id, target, toUpdate } = props;\r\n\r\n//     if (typeof styling.styles[id] === 'undefined') {\r\n//         const newData = {\r\n//             [id]: {\r\n//                 [target]: {\r\n//                     ...toUpdate\r\n//                 }\r\n//             }\r\n//         }\r\n\r\n//         setStyles({\r\n//             ...styling,\r\n//             styles: {\r\n//                 ...styling.styles,\r\n//                 ...newData\r\n//             }\r\n//         });\r\n\r\n//     } else {\r\n\r\n//         setStyles({\r\n//             ...styling,\r\n//             styles: {\r\n//                 ...styling.styles,\r\n//                 [id]: {\r\n//                     ...styling.styles[id],\r\n//                     [target]: {\r\n//                         ...styling.styles[id][target],\r\n//                         ...toUpdate\r\n//                     }\r\n//                 }\r\n//             }\r\n//         });\r\n\r\n//     }\r\n\r\n// }\r\n\r\nconst ShowOptions = (props: any) => {\r\n\r\n    const { styling, setStyles } = props;\r\n    const id = styling.item.id;\r\n    const styleProps = {\r\n        styling, setStyles, id, updateStyling, getPropValue\r\n    }\r\n\r\n    const displayOptions = () => {\r\n\r\n        if (styling.item.type === 'ROW') {\r\n\r\n            return (<>No Options.</>);\r\n\r\n        } else if (styling.item.type === 'ITEM') {\r\n\r\n            let options = [];\r\n\r\n            switch (styling.item.itemId) {\r\n                // Header / Footer Elements\r\n                case 'search-input':\r\n                    options.push(\r\n                        <SubmitOnEnter {...styleProps} target='props' />,\r\n                        <Placeholder {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'category-filter':\r\n                    options.push(\r\n                        <SubmitOnChange {...styleProps} target='props' />,\r\n                        <Placeholder {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'add-selected-to-cart-button':\r\n                    options.push(\r\n                        <ButtonText {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'cart-subtotal':\r\n                    break;\r\n                case 'product-count':\r\n                    break;\r\n                case 'pagination':\r\n                    options.push(\r\n                        <ProductsPerPage {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'search-button':\r\n                    options.push(\r\n                        <ButtonText {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'clear-filters':\r\n                    options.push(\r\n                        <ButtonText {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                // Widget\r\n                case 'attribute-filter':\r\n                    break;\r\n                case 'cart-widget':\r\n                    break;\r\n                case 'filter-products-by-attribute':\r\n                    break;\r\n                case 'filter-products-by-price':\r\n                    options.push(\r\n                        <Placeholder {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                // Table Elements\r\n                case 'product-image':\r\n                    options.push(\r\n                        <ShowPopUp {...styleProps} target='props' />,\r\n                        <ColumnHeadingTitle {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'product-name':\r\n                    options.push(\r\n                        <ShowPopUp {...styleProps} target='props' />,\r\n                        <Sort {...styleProps} target='props' />,\r\n                        <ColumnHeadingTitle {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'sku':\r\n                    options.push(\r\n                        <ColumnHeadingTitle {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'in-stock-amount':\r\n                    options.push(\r\n                        <ColumnHeadingTitle {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'price':\r\n                    options.push(\r\n                        <ColumnHeadingTitle {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'quantity-input':\r\n                    options.push(\r\n                        <ColumnHeadingTitle {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'add-to-cart-button':\r\n                    options.push(\r\n                        <ColumnHeadingTitle {...styleProps} target='props' />,\r\n                        <ButtonText {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'combo-variation-dropdown':\r\n                    options.push(\r\n                        <ColumnHeadingTitle {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'standard-variation-dropdowns':\r\n                    options.push(\r\n                        <ColumnHeadingTitle {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'product-meta':\r\n                    options.push(\r\n                        <ColumnHeadingTitle {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'global-attribute':\r\n                    options.push(\r\n                        <ColumnHeadingTitle {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'short-description':\r\n                    options.push(\r\n                        <ColumnHeadingTitle {...styleProps} target='props' />\r\n                    );\r\n                    break;\r\n                case 'add-to-cart-checkbox':\r\n                    // options.push(\r\n                    // <ColumnHeadingTitle {...styleProps} target='props' />\r\n                    // );\r\n                    break;\r\n                default:\r\n                    options.push(<></>);\r\n\r\n            }\r\n\r\n            if (options.length > 0)\r\n                return options.map((component: any, key: number) => React.cloneElement(component, { key }));\r\n            else\r\n                return (<>No Options.</>)\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {displayOptions()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShowOptions;","import React, { useState, useEffect } from 'react'\r\nimport { Drawer, Collapse } from 'antd';\r\nimport ShowStyles from './ShowStyles';\r\nimport ShowOptions from './ShowOptions';\r\n\r\n// Redux\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport { stylingActions } from '../../../store/actions';\r\nimport { defaults } from '../../../store/reducers/dragAndDropReducer';\r\n\r\nconst { setShowStyling, setStyles } = stylingActions;\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst StylingAndOptionControls = (props: any) => {\r\n\r\n    const { styling, actions } = props;\r\n    const { setShowStyling, setStyles } = actions;\r\n    const [itemName, setItemName] = useState('');\r\n\r\n    const styleProps = { styling, setStyles }\r\n    const defaultItems: any = defaults;\r\n\r\n    useEffect(() => {\r\n\r\n        if (\r\n            styling.show === true &&\r\n            typeof styling.item.itemId !== 'undefined' &&\r\n            styling.item.itemId !== 'none'\r\n        ) {\r\n            setItemName(defaultItems.items[styling.item.itemId].content);\r\n        } else {\r\n            setItemName('');\r\n        }\r\n\r\n    }, [styling.item])\r\n\r\n\r\n    return (\r\n        <Drawer\r\n            title=\"Styling and Options\"\r\n            placement=\"right\"\r\n            closable={true}\r\n            onClose={() => setShowStyling({ show: false })}\r\n            visible={styling.show}\r\n            mask={false}\r\n            width={400}\r\n        >\r\n            <div className=\"stylings\">\r\n                <h3>{itemName}</h3>\r\n\r\n                {styling.item.section !== 'formTable' ?\r\n                    <Collapse defaultActiveKey={['1']}  >\r\n                        <Panel header=\"Styles\" key=\"1\">\r\n                            <ShowStyles {...styleProps} />\r\n                        </Panel>\r\n                        <Panel header=\"Options\" key=\"2\">\r\n                            <ShowOptions {...styleProps} />\r\n                        </Panel>\r\n                    </Collapse> :\r\n                    <Collapse defaultActiveKey={['1']}  >\r\n                        <Panel header=\"Options\" key=\"1\">\r\n                            <ShowOptions {...styleProps} />\r\n                        </Panel>\r\n                    </Collapse>}\r\n            </div>\r\n        </Drawer>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    styling: store.styling\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        setShowStyling,\r\n        setStyles\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StylingAndOptionControls);","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Form, Input, Button, notification, PageHeader, message, Tooltip, Modal } from 'antd';\r\nimport { Redirect } from 'react-router-dom'\r\nimport OrderFormContent from './OrderFormContent';\r\nimport StylingAndOptionControls from './StylingAndOptionControls';\r\n\r\nimport copy from \"copy-to-clipboard\";\r\nimport { CopyOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\n// Redux\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport { orderFormActions, stylingActions, dragAndDropActions, productActions } from '../../store/actions';\r\n\r\n// Helpers\r\nimport { usePageInfo } from \"../../helpers/usePageInfo\";\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst { fetchProducts } = productActions;\r\nconst { setDndData, resetDndData } = dragAndDropActions;\r\nconst { setStyles, setShowStyling } = stylingActions;\r\nconst { addNewOrderForm, editOrderForm, fetchOrderForm, setOrderFormSettingsData, deleteOrderForm } = orderFormActions;\r\n\r\ninterface IOrderFormData {\r\n    id: number,\r\n    status: string,\r\n    type: string,\r\n    title: string,\r\n    content: string\r\n}\r\n\r\nconst LeftBox = (props: any) => {\r\n\r\n    const { styling, actions, orderForm } = props;\r\n    const { pagination } = orderForm;\r\n\r\n    const [deleted, setDeleted] = useState(false);\r\n    const [toolTip, setToolTip] = useState('Copy');\r\n    const [shortcode, setShortcode] = useState('');\r\n    const [orderFormID, setOrderFormID] = useState(null);\r\n    const [orderFormStatus, setOrderFormStatus] = useState('');\r\n    const [orderFormData, setOrderFormData] = useState<IOrderFormData>({\r\n        id: 0,\r\n        status: '',\r\n        type: '',\r\n        title: '',\r\n        content: ''\r\n    });\r\n\r\n    const { pageType, editPath, postID, pathName } = usePageInfo(orderFormID);\r\n\r\n    const [form] = Form.useForm();\r\n    const formEl = useRef(form);\r\n    const validateMessages = {\r\n        required: '${label} is required!'\r\n    };\r\n\r\n    const onFinish = (data: any) => {\r\n\r\n        data.form_elements = props.data.formElements;\r\n        data.editor_area = props.data.editorArea;\r\n        data.styles = styling.styles;\r\n        data.settings = props.orderForm.settingsData;\r\n        data.status = orderFormStatus;\r\n\r\n        if (pageType === 'add-new') {\r\n\r\n            actions.addNewOrderForm({\r\n                data,\r\n                successCB: (data: any) => {\r\n                    message.success('Order Form Added!');\r\n                    setOrderFormID(data.id);\r\n                },\r\n                failCB: () => {\r\n                    message.error('Error Adding Order Form!');\r\n                }\r\n            });\r\n\r\n        } else if (pageType === 'edit' && orderFormData.id > 0) {\r\n\r\n            data.id = orderFormData.id;\r\n\r\n            actions.editOrderForm({\r\n                data,\r\n                successCB: () => {\r\n\r\n                    setOrderFormData({\r\n                        ...orderFormData,\r\n                        status: orderFormStatus\r\n                    });\r\n\r\n                    if (orderFormStatus === 'draft')\r\n                        message.success('Order Form Saved as Draft!');\r\n                    else\r\n                        message.success('Order Form Saved!');\r\n\r\n                },\r\n                failCB: () => {\r\n                    message.error('Error Updating Order Form!');\r\n                }\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (pageType === 'edit' && postID > 0) {\r\n\r\n            actions.fetchOrderForm({\r\n                id: postID,\r\n                successCB: (data: any) => {\r\n\r\n                    setOrderFormStatus(data.status)\r\n\r\n                    form.setFieldsValue({\r\n                        title: data.title\r\n                    });\r\n\r\n                    setOrderFormData(data);\r\n                    setShortcode(data.content);\r\n\r\n                    actions.setDndData({\r\n                        ...props.data,\r\n                        formElements: {\r\n                            ...props.data.formElements,\r\n                            ...data.meta.form_elements,\r\n                        },\r\n                        editorArea: {\r\n                            ...props.data.editorArea,\r\n                            ...data.meta.editor_area,\r\n                        }\r\n                    });\r\n\r\n                    actions.setStyles({\r\n                        ...styling,\r\n                        styles: {\r\n                            ...styling.styles,\r\n                            ...data.meta.styles\r\n                        }\r\n                    });\r\n\r\n                    // Order Form Settings\r\n                    actions.setOrderFormSettingsData(data.meta.settings)\r\n\r\n                },\r\n                failCB: () => {\r\n                    notification['error']({\r\n                        message: 'Data cannot be fetched!'\r\n                    });\r\n                }\r\n            });\r\n\r\n        } else {\r\n            // Order Form Settings\r\n            actions.setOrderFormSettingsData({})\r\n        }\r\n\r\n    }, [actions]);\r\n\r\n    const copyToClipboard = (value: string) => {\r\n        copy(value);\r\n        setToolTip('Copied');\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        actions.fetchProducts({\r\n            per_page: 10,\r\n            sort_order: orderForm.settingsData.sort_order || '',\r\n            sort_by: orderForm.settingsData.sort_by || '',\r\n            cart_subtotal_tax: orderForm.settingsData.cart_subtotal_tax || 'incl'\r\n        });\r\n\r\n    }, [orderForm.settingsData]);\r\n\r\n    const confirmDelete = (post_id: any) => {\r\n\r\n        actions.setShowStyling({ show: false });\r\n\r\n        confirm({\r\n            title: `Do you want to delete this form?`,\r\n            icon: <ExclamationCircleOutlined />,\r\n            centered: true,\r\n            onOk() {\r\n                actions.deleteOrderForm({\r\n                    post_id,\r\n                    pagination,\r\n                    successCB: () => {\r\n                        notification['success']({\r\n                            message: 'Deleted Successfully!'\r\n                        })\r\n                        setDeleted(true)\r\n\r\n                        // Reset dragged items in the editor once the form is deleted\r\n                        actions.resetDndData();\r\n\r\n                    },\r\n                    failCB: () => notification['error']({\r\n                        message: 'Unable Failed!'\r\n                    }),\r\n                });\r\n            },\r\n            onCancel() { },\r\n        });\r\n\r\n    }\r\n\r\n    if (deleted)\r\n        return <Redirect to={`${pathName}?page=order-forms`} />\r\n\r\n    return orderFormID === null ? (\r\n        <div className=\"left-content\">\r\n            <PageHeader\r\n                onBack={() => {\r\n                    actions.setShowStyling({ show: false });\r\n                    actions.resetDndData();\r\n                    window.history.back()\r\n                }}\r\n                className=\"page-header\"\r\n                title={pageType === 'add-new' ? 'Add Order Form' : 'Edit Order Form'}\r\n                subTitle={\r\n                    <>\r\n                        {pageType === 'add-new' || (pageType === 'edit' && orderFormStatus === 'draft') ?\r\n                            <Button\r\n                                onClick={() => {\r\n                                    actions.setShowStyling({ show: false });\r\n                                    formEl.current.submit()\r\n                                    setOrderFormStatus('draft')\r\n                                }}\r\n                                style={{ background: '#f3f5f6', color: \"#0071a1\", border: \"1px solid #0071a1\", fontWeight: \"bold\", marginRight: '10px' }}>\r\n                                Save as Draft\r\n                        </Button>\r\n                            : ''}\r\n                        <Button\r\n                            onClick={() => {\r\n                                actions.setShowStyling({ show: false });\r\n                                setOrderFormStatus('publish')\r\n                                formEl.current.submit()\r\n                            }} style={{ background: '#f3f5f6', color: \"#0071a1\", border: \"1px solid #0071a1\", fontWeight: \"bold\" }}>\r\n                            {pageType === 'add-new' || orderFormData.status === 'draft' ? 'Publish' : 'Update'}\r\n                        </Button>\r\n                        {pageType === 'edit' ?\r\n                            <Button\r\n                                danger\r\n                                type=\"link\"\r\n                                onClick={() => confirmDelete(postID)}>\r\n                                Delete Form\r\n                          </Button> : ''}\r\n                    </>\r\n                }\r\n            />\r\n\r\n            <Form id=\"order-form\" ref={formEl} style={{ marginTop: '20px' }} form={form} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages} >\r\n                <Form.Item label='Form Title' name='title' rules={[{ required: true }]} style={{ margin: '10px' }}>\r\n                    <Input placeholder='Form Title' className=\"order-form-field textbox title\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    style={{ display: shortcode ? \"block\" : \"none\" }}\r\n                >\r\n                    <Input\r\n                        disabled={false}\r\n                        addonAfter={(\r\n                            <div\r\n                                onMouseLeave={() =>\r\n                                    setTimeout(() => setToolTip('Copy'), 200)\r\n                                }\r\n                            >\r\n                                <Tooltip\r\n                                    title={toolTip}\r\n                                >\r\n                                    <CopyOutlined\r\n                                        onClick={() => copyToClipboard(shortcode)}\r\n                                    />\r\n                                </Tooltip>\r\n                            </div>\r\n                        )}\r\n                        value={shortcode || '[wwof_product_listing beta=\"true\"]'}\r\n                        className=\"order-form-field textbox shortcode\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <OrderFormContent />\r\n                    <StylingAndOptionControls />\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    ) : <Redirect to={editPath} />;\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    data: store.dragAndDrop,\r\n    orderForm: store.orderForm,\r\n    styling: store.styling\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        addNewOrderForm,\r\n        editOrderForm,\r\n        fetchOrderForm,\r\n        setStyles,\r\n        setDndData,\r\n        resetDndData,\r\n        setOrderFormSettingsData,\r\n        fetchProducts,\r\n        deleteOrderForm,\r\n        setShowStyling\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftBox);","import { useLocation } from 'react-router-dom';\r\n\r\nexport const usePageInfo = (orderFormID?: any) => {\r\n\r\n    const pathName = useLocation().pathname;\r\n    const params = useLocation().search;\r\n    const urlParams = new URLSearchParams(params);\r\n    const editPath = `${pathName}?page=order-forms&sub-page=edit&post=${orderFormID}`;\r\n\r\n    const pageType = urlParams.get(\"sub-page\");\r\n    const postID = urlParams.get(\"post\") || 0;\r\n\r\n    return {\r\n        pathName,\r\n        params,\r\n        urlParams,\r\n        editPath,\r\n        pageType,\r\n        postID\r\n    };\r\n\r\n}","import React from 'react';\r\nimport {\r\n    SearchOutlined, DatabaseOutlined, ShoppingCartOutlined, ReconciliationOutlined, BorderlessTableOutlined, DownloadOutlined,\r\n    GoldOutlined, FileImageOutlined, FileTextOutlined, BarcodeOutlined, LineChartOutlined, DollarCircleOutlined, ContainerOutlined,\r\n    FileMarkdownOutlined, ClusterOutlined, FileSearchOutlined, FileSyncOutlined, OrderedListOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Element = (props: any) => {\r\n\r\n    const { item } = props;\r\n\r\n    const printElement = (id: number) => {\r\n        switch (item.id) {\r\n            // Header/Footer Elements\r\n            case 'search-input':\r\n                return (<SearchOutlined />);\r\n            case 'category-filter':\r\n                return (<DatabaseOutlined />)\r\n            case 'add-selected-to-cart-button':\r\n                return (<ShoppingCartOutlined />);\r\n            case 'cart-subtotal':\r\n                return (<ReconciliationOutlined />);\r\n            case 'product-count':\r\n                return (<BorderlessTableOutlined />);\r\n            case 'pagination':\r\n                return (<DownloadOutlined />);\r\n            case 'attribute-filter':\r\n                return (<GoldOutlined />);\r\n            case 'search-button':\r\n                return (<FileSearchOutlined />);\r\n            case 'clear-filters':\r\n                return (<FileSyncOutlined />);\r\n            // Table Elements\r\n            case 'product-image':\r\n                return (<FileImageOutlined />);\r\n            case 'product-name':\r\n                return (<FileTextOutlined />);\r\n            case 'sku':\r\n                return (<BarcodeOutlined />);\r\n            case 'in-stock-amount':\r\n                return (<LineChartOutlined />);\r\n            case 'price':\r\n                return (<DollarCircleOutlined />);\r\n            case 'quantity-input':\r\n                return (<DownloadOutlined />);\r\n            case 'add-to-cart-button':\r\n                return (<ShoppingCartOutlined />);\r\n            case 'combo-variation-dropdown':\r\n                return (<ContainerOutlined />);\r\n            case 'standard-variation-dropdowns':\r\n                return (<ContainerOutlined />);\r\n            case 'product-meta':\r\n                return (<FileMarkdownOutlined />);\r\n            case 'global-attribute':\r\n                return (<ClusterOutlined />);\r\n            case 'short-description':\r\n                return (<FileTextOutlined />);\r\n            case 'add-to-cart-checkbox':\r\n                return (<OrderedListOutlined />);\r\n            // WooCommerce Widgets\r\n            case 'cart-widget':\r\n                return (<ReconciliationOutlined />);\r\n            case 'filter-products-by-attribute':\r\n                return (<GoldOutlined />);\r\n            case 'filter-products-by-price':\r\n                return (<GoldOutlined />);\r\n        }\r\n    }\r\n\r\n    if (typeof item !== 'undefined' && typeof item.id !== 'undefined')\r\n        return (\r\n            <>\r\n                {printElement(item.id)} {item.content}\r\n            </>\r\n        )\r\n    else return (<></>)\r\n\r\n}\r\n\r\nexport default Element;","import React from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Element from './Element';\r\n\r\nconst EditForm = (props: any) => {\r\n\r\n    const { data } = props;\r\n\r\n    return (\r\n        <>\r\n            <h3 style={{ fontWeight: 'bolder' }}>Order Form Elements</h3>\r\n            <p>Click and drag the elements you want on your order form into position.</p>\r\n            <div className=\"form-elements\">\r\n                {Object.keys(data['formElements']).map((columnId: any, index: any) => {\r\n                    const column = data['formElements'][columnId];\r\n\r\n                    // Future Feature, we will hide for now\r\n                    if (columnId === 'wooWidgets')\r\n                        return (<div key={index}></div>)\r\n                    else\r\n                        return (\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    flexWrap: 'wrap'\r\n                                }}\r\n                                key={columnId}>\r\n                                <h4 style={{ marginTop: '10px' }}>{column.title}</h4>\r\n                                <p>{column.desc}</p>\r\n                                <div style={{\r\n                                    marginTop: 8,\r\n                                    width: '100%'\r\n                                }}>\r\n                                    <Droppable\r\n                                        // direction=\"horizontal\"\r\n                                        droppableId={columnId}\r\n                                        key={index}\r\n                                        type={columnId !== 'tableElements' ? \"HEADER-FOOTER\" : \"DEFAULT\"}\r\n                                    >\r\n                                        {(provided, snapshot) => {\r\n\r\n                                            return (\r\n                                                <div\r\n                                                    className={`draggable-items ${columnId}`}\r\n                                                    {...provided.droppableProps}\r\n                                                    ref={provided.innerRef}\r\n                                                    style={{\r\n                                                        display: 'flex',\r\n                                                        flexWrap: 'wrap',\r\n                                                    }}\r\n                                                >\r\n\r\n                                                    {column['itemIds'].map((itemId: any, index: any) => {\r\n                                                        const item = data['items'][itemId];\r\n\r\n                                                        if (typeof item === 'undefined')\r\n                                                            return (<div key={index}></div>);\r\n                                                        else\r\n                                                            return (\r\n                                                                <Draggable\r\n                                                                    key={itemId}\r\n                                                                    draggableId={itemId}\r\n                                                                    index={index}\r\n                                                                >\r\n                                                                    {(provided, snapshot) => {\r\n\r\n                                                                        return (\r\n                                                                            <div\r\n                                                                                ref={provided.innerRef}\r\n                                                                                {...provided.draggableProps}\r\n                                                                                {...provided.dragHandleProps}\r\n                                                                                style={{\r\n\r\n                                                                                    textAlign: \"center\",\r\n                                                                                    marginBottom: '10px',\r\n                                                                                    backgroundColor: snapshot.isDragging ? \"#0071a1\" : \"#fff\",\r\n                                                                                    color: snapshot.isDragging ? \"#fff\" : \"#525252\",\r\n                                                                                    border: \"1px solid #525252\",\r\n                                                                                    padding: \"6px 16px\",\r\n                                                                                    marginRight: '10px',\r\n                                                                                    borderRadius: '2px',\r\n                                                                                    ...provided.draggableProps.style\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                <Element item={item} />\r\n                                                                            </div>\r\n                                                                        );\r\n                                                                    }}\r\n                                                                </Draggable>\r\n                                                            );\r\n                                                    })}\r\n                                                    {provided.placeholder}\r\n                                                </div>\r\n\r\n                                            );\r\n                                        }}\r\n                                    </Droppable>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                })}\r\n            </div>\r\n        </>)\r\n}\r\n\r\nexport default EditForm;","import React, { useEffect } from 'react'\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport { Collapse, Form, Radio, Checkbox, InputNumber, Select } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\n// Actions\r\nimport { orderFormActions } from '../../../store/actions';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst { getOrderFormSettings, setOrderFormSettingsData } = orderFormActions;\r\n\r\nconst DisplayOption = (props: any) => {\r\n\r\n    const { item, settingsData, setOrderFormSettingsData } = props;\r\n\r\n    const setSettingState = (meta_key: any, meta_value: any) => {\r\n        setOrderFormSettingsData({\r\n            [meta_key]: meta_value\r\n        });\r\n    }\r\n\r\n    switch (item.type) {\r\n        case 'radio':\r\n            return (<>\r\n                <Form.Item className={item.id} style={{ whiteSpace: 'unset' }} name={item.id} label={item.title}>\r\n                    <Radio.Group>\r\n                        {\r\n                            Object.keys(item['options']).map((data: any, index: any) => {\r\n                                return <Radio key={index} value={data}>{item['options'][data]}</Radio>\r\n                            })\r\n                        }\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n            </>);\r\n        case 'checkbox':\r\n            return (<>\r\n                <Form.Item name={item.id} label={item.title}>\r\n                    <Checkbox.Group>\r\n                        <Checkbox value={item.id}>{item.desc}</Checkbox>\r\n                    </Checkbox.Group>\r\n                </Form.Item>\r\n            </>);\r\n        case 'number':\r\n            return (<>\r\n                <Form.Item label={item.title}>\r\n                    <InputNumber />\r\n                </Form.Item>\r\n            </>);\r\n        case 'select':\r\n            return (<>\r\n                <Form.Item label={item.title}>\r\n                    <Select\r\n                        defaultValue={settingsData[item.id] || item.default}\r\n                        onChange={(value: any) => setSettingState(item.id, value)}\r\n                    >\r\n                        {\r\n                            Object.keys(item['options']).map((data: any, index: any) => {\r\n                                return <Select.Option key={index} value={data}>{item['options'][data]}</Select.Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n            </>);\r\n        case 'wwof_image_dimension':\r\n            return (<>\r\n                <Form.Item label={item.title}>\r\n                    <InputNumber value={item['default'].width} />x<InputNumber value={item['default'].height} />px\r\n                </Form.Item>\r\n            </>)\r\n        default:\r\n            return (<></>);\r\n    }\r\n\r\n}\r\n\r\nconst DisplaySettings = (props: any) => {\r\n\r\n    const { settings, settingsData, setOrderFormSettingsData } = props;\r\n\r\n    const propsToPass = {\r\n        settingsData,\r\n        setOrderFormSettingsData\r\n    }\r\n\r\n    const options = Object.keys(settings).map((index: any) => {\r\n\r\n        const item = settings[index];\r\n\r\n        return <DisplayOption item={item} key={index} {...propsToPass} />\r\n\r\n    });\r\n\r\n    return Object.values(settings).length > 0 ? (<>{options}</>) : (<LoadingOutlined />);\r\n\r\n}\r\n\r\nconst FormSettings = (props: any) => {\r\n\r\n    const { actions, orderForm } = props;\r\n    const { getOrderFormSettings, setOrderFormSettingsData } = actions;\r\n\r\n    const propsToPass = {\r\n        settingsData: orderForm.settingsData,\r\n        setOrderFormSettingsData\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrderFormSettings();\r\n    }, []);\r\n\r\n    return (\r\n        <DisplaySettings settings={orderForm.settings} {...propsToPass} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    orderForm: store.orderForm\r\n});\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        getOrderFormSettings,\r\n        setOrderFormSettingsData\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormSettings);","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { List, Typography } from 'antd';\r\n\r\n// Redux\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { orderFormActions } from '../../../store/actions';\r\n\r\nconst { fetchOrderForm } = orderFormActions;\r\n\r\nconst Locations = (props: any) => {\r\n\r\n    const { actions } = props;\r\n    const { fetchOrderForm } = actions;\r\n\r\n    const [locations, setLocations] = useState([]);\r\n\r\n    const params = useLocation().search;\r\n    const urlParams = new URLSearchParams(params);\r\n    const postID = urlParams.get(\"post\") || 0;\r\n\r\n    useEffect(() => {\r\n        if (postID > 0) {\r\n            fetchOrderForm({\r\n                id: postID,\r\n                successCB: (data: any) => {\r\n                    setLocations(data.locations)\r\n                },\r\n                failCB: () => {\r\n                    console.log('error')\r\n                }\r\n            });\r\n        }\r\n    }, [postID])\r\n\r\n    return (\r\n        <List\r\n            dataSource={locations}\r\n            renderItem={(item: any) => {\r\n                return (\r\n                    <List.Item>\r\n                        <a href={item.permalink} target=\"_blank\">{item.post_title}</a>\r\n                    </List.Item>\r\n                )\r\n            }}\r\n        />\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        fetchOrderForm\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations)\r\n","import React from 'react';\r\nimport { Tabs, Form, Affix } from 'antd';\r\nimport { TableOutlined, SettingOutlined, ReadOutlined } from '@ant-design/icons';\r\nimport EditForm from './EditForm';\r\nimport FormSettings from './FormSettings';\r\nimport Locations from './Locations';\r\n\r\nimport { defaults } from '../../store/reducers/dragAndDropReducer';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n// Update saved data\r\nconst updateData = (savedData: any, defaultData: any) => {\r\n    savedData.items = defaultData.items;\r\n    return savedData;\r\n}\r\n\r\nconst RightContent = (props: any) => {\r\n\r\n    const { data } = props;\r\n    const updatedData = updateData(data, defaults);\r\n\r\n    return (\r\n        <div className=\"right-content\" style={{ position: 'relative' }}>\r\n            <Affix offsetTop={100} style={{ position: 'absolute', left: '0px' }}>\r\n                <Tabs type=\"card\">\r\n                    <TabPane tab={<><TableOutlined />Edit Form</>} key=\"1\" >\r\n                        <EditForm data={updatedData} />\r\n                    </TabPane>\r\n                    <TabPane tab={<><SettingOutlined />Settings</>} key=\"2\">\r\n                        <Form className=\"form-settings\">\r\n                            <FormSettings />\r\n                        </Form>\r\n                    </TabPane>\r\n                    <TabPane tab={<><ReadOutlined />Locations</>} key=\"3\">\r\n                        <Locations />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Affix>\r\n        </div >\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    data: store.dragAndDrop\r\n});\r\nexport default connect(mapStateToProps)(RightContent);","import React, { useState, useEffect } from 'react';\r\nimport { Alert } from 'antd';\r\n\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\n// Actions\r\nimport { minRequirements } from './store/actions';\r\nconst { wwppRequiredVersions, removeMinimumWWPPFailMessage } = minRequirements;\r\n\r\nconst DisplayMinReqNotice = (props: any) => {\r\n\r\n    const { actions } = props;\r\n\r\n    const [minimumWWPPFailSubject, setMinimumWWPPFailSubject] = useState('');\r\n    const [minimumWWPPFailMessage, setMinimumWWPPFailMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        try {\r\n            actions.wwppRequiredVersions({\r\n                successCB: (data: any) => {\r\n                    // console.log('success')\r\n                },\r\n                failCB: (data: any) => {\r\n                    setMinimumWWPPFailSubject(data.heading)\r\n                    setMinimumWWPPFailMessage(data.message)\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [])\r\n\r\n    const onClose = () => {\r\n        actions.removeMinimumWWPPFailMessage({\r\n            successCB: (data: any) => {\r\n                setMinimumWWPPFailSubject('')\r\n                setMinimumWWPPFailMessage('')\r\n            },\r\n            failCB: (data: any) => { }\r\n        });\r\n    }\r\n\r\n    if (minimumWWPPFailSubject && minimumWWPPFailMessage)\r\n        return <Alert\r\n            style={{\r\n                padding: '20px 30px',\r\n                marginBottom: '20px',\r\n                background: '#fff',\r\n                border: '1px solid #eee',\r\n                borderLeft: '4px solid #46bf92',\r\n                borderRadius: '0px'\r\n            }}\r\n            message={\r\n                <div\r\n                    dangerouslySetInnerHTML={{ __html: minimumWWPPFailSubject }}>\r\n                </div>\r\n            }\r\n            description={\r\n                <div\r\n                    dangerouslySetInnerHTML={{ __html: minimumWWPPFailMessage }}>\r\n                </div>\r\n            }\r\n            type=\"error\"\r\n            closable\r\n            onClose={onClose}\r\n        />\r\n    else return (<></>)\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        wwppRequiredVersions,\r\n        removeMinimumWWPPFailMessage\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayMinReqNotice);","import React from 'react';\r\nimport { DragDropContext, DragStart, DropResult } from 'react-beautiful-dnd';\r\nimport LeftContent from '../LeftContent';\r\nimport RightContent from '../RightContent';\r\nimport './styles.scss';\r\nimport DisplayMinReqNotice from '../../DisplayMinReqNotice';\r\n\r\n// Redux\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport { dragAndDropActions } from '../../store/actions';\r\n\r\nconst { transferItems, arrangeTableColumns, arrangeHeaderFooterRows, arrangeHeaderFooterColumns } = dragAndDropActions;\r\n\r\nconst pulsatingEffect = (section: string, action: string) => {\r\n\r\n    let className = '';\r\n    if (section === 'headerElements')\r\n        className = 'formHeaderFooterContainer';\r\n    else if (section === 'tableElements')\r\n        className = 'formTableContainer';\r\n\r\n    const container: any = document.getElementsByClassName(className);\r\n\r\n    if (action === 'add' && container.length > 0) {\r\n        Array.from(container).forEach((c: any, key: number) => {\r\n            container[key].className += \" pulsate\";\r\n        });\r\n    } else if (action === 'remove' && container.length > 0) {\r\n        Array.from(container).forEach((c: any, key: number) => {\r\n            container[key].className = container[key].className.replace(' pulsate', '');\r\n        });\r\n    }\r\n}\r\n\r\nconst EditorContent = (props: any) => {\r\n\r\n    const { actions, data } = props;\r\n\r\n    const onDragStart = (start: DragStart) => {\r\n        pulsatingEffect(start.source.droppableId, 'add');\r\n    };\r\n\r\n    const onDragEnd = (result: DropResult) => {\r\n\r\n        const { source, destination } = result;\r\n\r\n        pulsatingEffect(source.droppableId, 'remove');\r\n\r\n        if (!destination) return;\r\n\r\n        let destElement = destination.droppableId.split('-');\r\n\r\n        if (source.droppableId !== destination.droppableId) { // Drag items to the editor\r\n\r\n            actions.transferItems({ source, destination, data, destElement });\r\n\r\n        } else if (['formHeader', 'formFooter'].indexOf(destElement[0]) !== -1 && destElement.length === 1) { // Arranging Header and Footer Rows\r\n\r\n            actions.arrangeHeaderFooterRows({ source, destination, data, destElement });\r\n\r\n        } else if (['formHeader', 'formFooter'].indexOf(destElement[0]) !== -1) { // Arranging Header and Footer Inner Columns\r\n\r\n            actions.arrangeHeaderFooterColumns({ source, destination, data, destElement });\r\n\r\n        } else if (['formTable'].indexOf(destElement[0]) !== -1) { // Arranging Table Columns\r\n\r\n            actions.arrangeTableColumns({ source, destination, data, destElement });\r\n\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <DragDropContext\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n        >\r\n            <DisplayMinReqNotice />\r\n            <div className=\"parent\">\r\n                <LeftContent />\r\n                <RightContent />\r\n            </div >\r\n        </DragDropContext >\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (store: any, props: any) => ({\r\n    data: store.dragAndDrop\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    actions: bindActionCreators({\r\n        arrangeTableColumns,\r\n        arrangeHeaderFooterRows,\r\n        arrangeHeaderFooterColumns,\r\n        transferItems\r\n    }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorContent);","import React from 'react';\r\nimport OrderFormList from './components/OrderFormList';\r\nimport Editor from './components/Editor';\r\nimport DisplayMinReqNotice from './DisplayMinReqNotice';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Button, PageHeader } from 'antd';\r\nimport {\r\n  useLocation,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n\r\n  const pathName = useLocation().pathname;\r\n  const params = useLocation().search;\r\n  const urlParams = new URLSearchParams(params);\r\n\r\n  const page = urlParams.get(\"sub-page\");\r\n  const postID = urlParams.get(\"post\") || 0;\r\n\r\n  const RenderComponent = () => {\r\n\r\n    if (page === 'add-new' || (page === 'edit' && postID > 0))\r\n      return <Editor />;\r\n    else {\r\n      const siteURL = params.length > 0 ? `${pathName}${params}&` : `${pathName}?`;\r\n      return (\r\n        <>\r\n          <DisplayMinReqNotice />\r\n          <PageHeader\r\n            className=\"page-header\"\r\n            title=\"Order Forms\"\r\n            subTitle={\r\n              <Link to={`${siteURL}sub-page=add-new`}>\r\n                <Button style={{ background: '#f3f5f6', color: \"#0071a1\", border: \"1px solid #0071a1\", fontWeight: \"bold\" }}>Add Form</Button>\r\n              </Link>}\r\n          />\r\n\r\n          <p style={{ margin: '20px 0px' }}>\r\n            Below is a list of all the order forms for displaying products that you have on your store. Click each form to edit it's characteristics or add a new form using the button above.\r\n            Forms can be placed on pages via the given shortcode or via an editor block. Forms can be reused on multiple pages and you can also query what pages each form appears on.\r\n          </p>\r\n          <OrderFormList />\r\n        </>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"order-form-cpt\">\r\n      <RenderComponent />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default App;","import { EOrderFormActionTypes } from '../actions/orderFormActions';\r\n\r\nexport const defaults = {\r\n    data: [],\r\n    loading: false,\r\n    currentPage: 'home',\r\n    pagination: {\r\n        page: 1,\r\n        defaultCurrent: 1,\r\n        totalPages: 0,\r\n        total: 0,\r\n        pageSize: 10\r\n    },\r\n    settings: {},\r\n    settingsData: {},\r\n    cartSubtotal: ''\r\n};\r\n\r\nexport default function (state: any = defaults, action: any) {\r\n\r\n    switch (action.type) {\r\n\r\n        case EOrderFormActionTypes.SET_LOADING:\r\n\r\n            return {\r\n                ...state,\r\n                loading: !state.loading\r\n            }\r\n\r\n        case EOrderFormActionTypes.SET_ORDER_FORM_DATA:\r\n\r\n            const { data, pagination } = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                data,\r\n                pagination: {\r\n                    ...state.pagination,\r\n                    ...pagination\r\n                }\r\n            }\r\n\r\n        case EOrderFormActionTypes.SET_CART_SUBTOTAL:\r\n\r\n            return {\r\n                ...state,\r\n                cartSubtotal: action.payload\r\n            }\r\n\r\n        case EOrderFormActionTypes.SET_PAGE:\r\n\r\n            const { page } = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...state.pagination,\r\n                    page\r\n                }\r\n            }\r\n\r\n        case EOrderFormActionTypes.SET_ORDER_FORM_SETTINGS:\r\n\r\n            return {\r\n                ...state,\r\n                settings: {\r\n                    ...state.settings,\r\n                    ...action.payload\r\n                }\r\n            };\r\n\r\n        case EOrderFormActionTypes.SET_ORDER_FORM_SETTINGS_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                settingsData: {\r\n                    ...state.settingsData,\r\n                    ...action.payload\r\n                }\r\n            };\r\n\r\n        default:\r\n            return state\r\n\r\n\r\n    }\r\n\r\n}","import { EStylingActionTypes } from '../actions/stylingActions';\r\n\r\ninterface IStyling {\r\n    show: boolean,\r\n    item: {\r\n        type?: string,\r\n        id?: string,\r\n        itemId?: string,\r\n        section?: string\r\n    },\r\n    styles: Object\r\n}\r\n\r\nconst defaults = {\r\n    show: false,\r\n    item: {},\r\n    styles: {}\r\n};\r\n\r\nexport default function (state: IStyling = defaults, action: any) {\r\n\r\n    switch (action.type) {\r\n\r\n        case EStylingActionTypes.SET_SHOW_STYLING:\r\n\r\n            const { show, type, id, itemId, section } = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                show,\r\n                item: {\r\n                    type: type ? type : state.item.type,\r\n                    id: id ? id : state.item.id,\r\n                    itemId: itemId ? itemId : state.item.itemId,\r\n                    section: section ? section : state.item.section\r\n                }\r\n            }\r\n\r\n        case EStylingActionTypes.SET_STYLES:\r\n\r\n            return {\r\n                ...state,\r\n                styles: action.payload.styles\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n\r\n    }\r\n\r\n}","import { EProductActionTypes } from '../actions/productActions';\r\n\r\nconst defaults = {\r\n    products: [],\r\n    categories: [],\r\n    variations: []\r\n};\r\n\r\nexport default function (state: any = defaults, action: any) {\r\n\r\n    switch (action.type) {\r\n\r\n        case EProductActionTypes.SET_PRODUCTS:\r\n\r\n            return {\r\n                ...state,\r\n                products: action.payload\r\n            }\r\n\r\n        case EProductActionTypes.SET_CATEGORIES:\r\n\r\n            return {\r\n                ...state,\r\n                categories: action.payload\r\n            }\r\n\r\n        case EProductActionTypes.SET_VARIATIONS:\r\n\r\n            return {\r\n                ...state,\r\n                variations: action.payload\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}","import { EPaginationActionTypes } from '../actions/paginationActions';\r\n\r\nconst defaults = {\r\n    active_page: 1,\r\n    per_page: 12,\r\n    total_products: 0,\r\n    total_page: 0\r\n};\r\n\r\nexport default function (state: any = defaults, action: any) {\r\n\r\n    switch (action.type) {\r\n\r\n        case EPaginationActionTypes.SET_PAGINATION_STATE:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\n\r\n// Reducers\r\nimport orderFormReducer from './orderFormReducer';\r\nimport dragAndDropReducer from './dragAndDropReducer';\r\nimport stylingReducer from './stylingReducer';\r\nimport productsReducer from './productsReducer';\r\nimport paginationReducer from './paginationReducer';\r\n\r\nconst reducers = combineReducers({\r\n    orderForm: orderFormReducer,\r\n    dragAndDrop: dragAndDropReducer,\r\n    styling: stylingReducer,\r\n    products: productsReducer,\r\n    pagination: paginationReducer\r\n});\r\n\r\nexport default reducers;","import axios from \"axios\";\r\n\r\ndeclare var wpApiSettings: any;\r\n\r\nexport default axios.create({\r\n    baseURL: wpApiSettings.root,\r\n    // timeout: 1000,\r\n    headers: {\r\n        // \"X-WP-Nonce\": wpApiSettings.nonce\r\n    }\r\n});\r\n","import { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport { EOrderFormActionTypes } from '../actions/orderFormActions';\r\nimport { orderFormActions } from '../actions';\r\n\r\n// Helpers\r\nimport axiosInstance from \"../../helpers/axios\";\r\n\r\nexport function* fetchOrderForms(action: any) {\r\n\r\n    try {\r\n        const { page } = action.payload;\r\n\r\n        yield put(orderFormActions.setLoading({}));\r\n\r\n        const response = yield call(() =>\r\n            axiosInstance.get(`wwof/v1/order_forms/`, { params: { page } })\r\n        );\r\n\r\n        if (response && response.data) {\r\n\r\n            yield put(orderFormActions.setOrderFormData({\r\n                data: response.data,\r\n                pagination: {\r\n                    total: response.headers['x-wp-total'],\r\n                    totalPages: response.headers['x-wp-totalpages']\r\n                }\r\n            }));\r\n\r\n        }\r\n\r\n        yield put(orderFormActions.setLoading({}));\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* fetchOrderForm(action: any) {\r\n\r\n    try {\r\n\r\n        const { id, successCB, failCB } = action.payload;\r\n\r\n        const response = yield call(() =>\r\n            axiosInstance.get(`wwof/v1/order_forms/${id}`)\r\n        );\r\n\r\n        if (response && response.data) {\r\n\r\n            if (typeof successCB === \"function\")\r\n                successCB(response.data);\r\n\r\n        } else {\r\n\r\n            if (typeof failCB === \"function\")\r\n                failCB();\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* addOrderForm(action: any) {\r\n\r\n    try {\r\n        const { data, successCB, failCB } = action.payload;\r\n\r\n        const response = yield call(() =>\r\n            axiosInstance.post(`wwof/v1/order_forms/`, data)\r\n        );\r\n\r\n        if (response && response.data) {\r\n\r\n            if (typeof successCB === \"function\")\r\n                successCB(response.data);\r\n\r\n        } else {\r\n\r\n            if (typeof failCB === \"function\")\r\n                failCB();\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* editOrderForm(action: any) {\r\n\r\n    try {\r\n\r\n        const { data, successCB, failCB } = action.payload;\r\n\r\n        const response = yield call(() =>\r\n            axiosInstance.post(`wwof/v1/order_forms/${data.id}`, data)\r\n        );\r\n\r\n        if (response && response.data) {\r\n\r\n            if (typeof successCB === \"function\")\r\n                successCB();\r\n\r\n        } else {\r\n\r\n            if (typeof failCB === \"function\")\r\n                failCB();\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* deleteOrderForm(action: any) {\r\n\r\n    try {\r\n\r\n        const { pagination, post_id, successCB, failCB } = action.payload;\r\n        const params = { post_ids: post_id, force: true };\r\n\r\n        const response = yield call(() =>\r\n            axiosInstance.delete(`wwof/v1/order_forms/${Array.isArray(post_id) ? 0 : post_id}`, { data: params })\r\n        );\r\n\r\n        if (response && response.data) {\r\n\r\n            let p = pagination.page;\r\n\r\n            if (pagination.total % pagination.pageSize === 1 && p - 1 !== 0)\r\n                p -= 1;\r\n            else if (p - 1 === 0)\r\n                p = 1;\r\n\r\n            yield put(orderFormActions.setPage({ page: p }));\r\n            yield put(orderFormActions.fetchOrderForms({ page: p }));\r\n\r\n            if (typeof successCB === \"function\")\r\n                successCB();\r\n\r\n        } else {\r\n\r\n            if (typeof failCB === \"function\")\r\n                failCB();\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* getOrderFormSettings(action: any) {\r\n\r\n    try {\r\n\r\n        const response = yield call(() =>\r\n            axiosInstance.get(`wwof/v1/settings/`)\r\n        );\r\n\r\n        if (response && response.data)\r\n            yield put(orderFormActions.setOrderFormSettings(response.data));\r\n        else\r\n            console.log(response)\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport const actionListener = [\r\n    takeEvery(EOrderFormActionTypes.FETCH_ORDER_FORMS, fetchOrderForms),\r\n    takeEvery(EOrderFormActionTypes.FETCH_ORDER_FORM, fetchOrderForm),\r\n    takeEvery(EOrderFormActionTypes.ADD_NEW_ORDER_FORM, addOrderForm),\r\n    takeEvery(EOrderFormActionTypes.EDIT_ORDER_FORM, editOrderForm),\r\n    takeEvery(EOrderFormActionTypes.DELETE_ORDER_FORM, deleteOrderForm),\r\n    takeEvery(EOrderFormActionTypes.GET_ORDER_FORM_SETTINGS, getOrderFormSettings)\r\n];","import { takeEvery, put } from \"redux-saga/effects\";\r\n\r\n// Actions\r\nimport { EDragAndDropActionTypes, dragAndDropActions } from \"../actions/dragAndDropActions\";\r\n\r\nexport function* transferItems(action: any) {\r\n\r\n    try {\r\n\r\n        const { source, destination, data, destElement } = action.payload;\r\n        let sourceColumn = [];\r\n        let destColumn = [];\r\n\r\n        const rowId = parseInt(destElement[1]);\r\n        const colId = parseInt(destElement[2]);\r\n\r\n        // Header and Footer only\r\n        if (destElement.length >= 3) {\r\n            sourceColumn = data['formElements'][source.droppableId];\r\n            destColumn = data['editorArea'][destElement[0]]['rows'][rowId]['columns'][colId];\r\n        } else { // Form Table\r\n            sourceColumn = data['formElements'][source.droppableId];\r\n            destColumn = data['editorArea'][destination.droppableId];\r\n        }\r\n\r\n        const sourceItems = [...sourceColumn.itemIds];\r\n        const destItems = [...destColumn.itemIds];\r\n\r\n        const [removed] = sourceItems.splice(source.index, 1);\r\n        destItems.splice(destination.index, 0, removed);\r\n\r\n        if (destElement.length >= 3) { // Header and Footer\r\n\r\n            // Handle updating 2x nested array of objects\r\n            let updated = data['editorArea'][destElement[0]]['rows'].map((row: any, rowIndex: number) => {\r\n                if (rowIndex === rowId) {\r\n                    const cols = row['columns'].map((col: any, colIndex: number) => {\r\n                        if (colIndex === colId) {\r\n                            return {\r\n                                ...col,\r\n                                itemIds: destItems\r\n                            }\r\n                        }\r\n                        return col;\r\n                    });\r\n                    return {\r\n                        ...row,\r\n                        columns: cols\r\n                    }\r\n                }\r\n                return row;\r\n            });\r\n\r\n            yield put(\r\n                dragAndDropActions.setDndData({\r\n                    ...data,\r\n                    formElements: {\r\n                        ...data['formElements'],\r\n                        [source.droppableId]: {\r\n                            ...sourceColumn,\r\n                            itemIds: sourceItems\r\n                        }\r\n                    },\r\n                    editorArea: {\r\n                        ...data['editorArea'],\r\n                        [destElement[0]]: { // Add to form header or form footer\r\n                            ...data['editorArea'][destElement[0]],\r\n                            rows: updated\r\n                        }\r\n                    }\r\n                })\r\n            );\r\n\r\n        } else { // Add to form table\r\n\r\n            yield put(\r\n                dragAndDropActions.setDndData({\r\n                    ...data,\r\n                    formElements: {\r\n                        ...data['formElements'],\r\n                        [source.droppableId]: {\r\n                            ...sourceColumn,\r\n                            itemIds: sourceItems\r\n                        }\r\n                    },\r\n                    editorArea: {\r\n                        ...data['editorArea'],\r\n                        [destination.droppableId]: {\r\n                            ...destColumn,\r\n                            itemIds: destItems\r\n                        }\r\n                    }\r\n                })\r\n            );\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* arrangeTableColumns(action: any) {\r\n\r\n    try {\r\n\r\n        const { source, destination, data, destElement } = action.payload;\r\n        const itemIds = data.editorArea[destElement[0]]['itemIds'];\r\n        const [moved] = itemIds.splice(source.index, 1);\r\n\r\n        itemIds.splice(destination.index, 0, moved);\r\n\r\n        yield put(\r\n            dragAndDropActions.setDndData({\r\n                ...data,\r\n                editorArea: {\r\n                    ...data['editorArea'],\r\n                    [destElement[0]]: {\r\n                        ...data.editorArea[destElement[0]],\r\n                        itemIds\r\n                    }\r\n                }\r\n            })\r\n        );\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* arrangeHeaderFooterRows(action: any) {\r\n\r\n    try {\r\n\r\n        const { source, destination, data, destElement } = action.payload;\r\n        const rows = data['editorArea'][destElement[0]];\r\n        const rowsList = [...rows['rows']];\r\n\r\n        const [removed] = rowsList.splice(source.index, 1);\r\n        rowsList.splice(destination.index, 0, removed);\r\n\r\n        yield put(\r\n            dragAndDropActions.setDndData({\r\n                ...data,\r\n                editorArea: {\r\n                    ...data['editorArea'],\r\n                    [destElement[0]]: {\r\n                        ...data['editorArea'][destElement[0]],\r\n                        rows: rowsList\r\n                    }\r\n                }\r\n            })\r\n        );\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* arrangeHeaderFooterColumns(action: any) {\r\n\r\n    try {\r\n\r\n        const { source, destination, data, destElement } = action.payload;\r\n        const rowId = parseInt(destElement[1]);\r\n        const rowCols = data['editorArea'][destElement[0]]['rows'][rowId];\r\n        const rowColsList = [...rowCols['columns']];\r\n\r\n        const [removed] = rowColsList.splice(source.index, 1);\r\n        rowColsList.splice(destination.index, 0, removed);\r\n\r\n        // Handle updating nested array of objects\r\n        let updated = data['editorArea'][destElement[0]]['rows'].map((row: any, rowIndex: number) => {\r\n            if (rowIndex === rowId) {\r\n                return {\r\n                    ...row,\r\n                    columns: rowColsList\r\n                }\r\n            }\r\n            return row;\r\n        });\r\n\r\n        yield put(\r\n            dragAndDropActions.setDndData({\r\n                ...data,\r\n                editorArea: {\r\n                    ...data['editorArea'],\r\n                    [destElement[0]]: {\r\n                        ...data['editorArea'][destElement[0]],\r\n                        rows: updated\r\n                    }\r\n                }\r\n            })\r\n        );\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport const actionListener = [\r\n    takeEvery(EDragAndDropActionTypes.TRANSFER_ITEMS, transferItems),\r\n    takeEvery(EDragAndDropActionTypes.ARRANGE_TABLE_COLUMNS, arrangeTableColumns),\r\n    takeEvery(EDragAndDropActionTypes.ARRANGE_HEADER_FOOTER_ROWS, arrangeHeaderFooterRows),\r\n    takeEvery(EDragAndDropActionTypes.ARRANGE_HEADER_FOOTER_COLUMNS, arrangeHeaderFooterColumns)\r\n];","import { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport { EProductActionTypes } from '../actions/productActions';\r\n\r\nimport { productActions, orderFormActions } from '../actions';\r\nimport { paginationActions } from '../actions';\r\n\r\nimport axios from 'axios';\r\ndeclare var Options: any;\r\n\r\nexport function* fetchProducts(action: any) {\r\n\r\n    try {\r\n\r\n        const { per_page, sort_order, sort_by, cart_subtotal_tax } = action.payload;\r\n\r\n        const qs = require('qs');\r\n        const response = yield call(() =>\r\n\r\n            axios.post(Options.ajax, qs.stringify({\r\n                'action': 'wwof_api_get_products',\r\n                'per_page': per_page,\r\n                'sort_order': sort_order,\r\n                'sort_by': sort_by,\r\n                'cart_subtotal_tax': cart_subtotal_tax\r\n            }))\r\n        );\r\n\r\n        if (response && response.data) {\r\n\r\n            yield put(orderFormActions.setCartSubtotal(response.data.cart_subtotal));\r\n            yield put(productActions.setProducts(response.data.products));\r\n            yield put(productActions.setVariations(response.data.variations));\r\n            yield put(paginationActions.setPaginationState({\r\n                active_page: 1,\r\n                per_page: 12,\r\n                total_products: response.data.total_products\r\n            }));\r\n\r\n        } else\r\n            console.log(response)\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* fetchCategories(action: any) {\r\n\r\n    const { categories } = action.payload;\r\n\r\n    try {\r\n\r\n        const qs = require('qs');\r\n        const response = yield call(() =>\r\n\r\n            axios.post(Options.ajax, qs.stringify({\r\n                'action': 'wwof_api_get_categories',\r\n                'categories': categories\r\n            }))\r\n        );\r\n\r\n        if (response && response.data) {\r\n\r\n            yield put(\r\n                productActions.setCategories(response.data.categories)\r\n            );\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport const actionListener = [\r\n    takeEvery(EProductActionTypes.FETCH_PRODUCTS, fetchProducts),\r\n    takeEvery(EProductActionTypes.FETCH_CATEGORIES, fetchCategories)\r\n];","import { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport { EMinRequirementsTypes } from '../actions/minimumRequirementNoticeActions';\r\nimport { minRequirements } from '../actions';\r\n\r\n// Helpers\r\nimport axios from 'axios';\r\n\r\ndeclare var Options: any;\r\n\r\nexport function* wwppRequiredVersions(action: any) {\r\n\r\n    const { successCB, failCB } = action.payload;\r\n\r\n    try {\r\n\r\n        const qs = require('qs');\r\n        const response = yield call(() =>\r\n            axios.post(Options.ajax, qs.stringify({\r\n                'action': 'wwpp_minimum_requirement'\r\n            }))\r\n        );\r\n\r\n        if (response && response.data.status === 'success') {\r\n\r\n            if (typeof successCB === \"function\")\r\n                successCB(response.data);\r\n\r\n        } else {\r\n\r\n            if (typeof successCB === \"function\")\r\n                failCB(response.data);\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport function* removeMinimumWWPPFailMessage(action: any) {\r\n\r\n    const { successCB, failCB } = action.payload;\r\n\r\n    try {\r\n\r\n        const qs = require('qs');\r\n        const response = yield call(() =>\r\n            axios.post(Options.ajax, qs.stringify({\r\n                'action': 'remove_wwpp_minimum_requirement_message'\r\n            }))\r\n        );\r\n\r\n        if (response && response.data.status === 'success') {\r\n\r\n            if (typeof successCB === \"function\")\r\n                successCB(response.data);\r\n\r\n        } else {\r\n\r\n            if (typeof successCB === \"function\")\r\n                failCB(response.data);\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport const actionListener = [\r\n    takeEvery(EMinRequirementsTypes.WWPP_REQUIRED_VERSIONS, wwppRequiredVersions),\r\n    takeEvery(EMinRequirementsTypes.REMOVE_WWPP_MIN_FAIL_MESSAGE, removeMinimumWWPPFailMessage),\r\n];","import { all } from \"redux-saga/effects\";\r\n\r\n// Sagas\r\nimport * as orderForm from \"./orderFormSaga\";\r\nimport * as dragAndDrop from \"./dragAndDropSaga\";\r\nimport * as products from \"./productsSaga\";\r\nimport * as minRequirements from \"./minimumRequirementNoticeSaga\";\r\n\r\nexport default function* rootSaga() {\r\n    yield all([...orderForm.actionListener]);\r\n    yield all([...dragAndDrop.actionListener]);\r\n    yield all([...products.actionListener]);\r\n    yield all([...minRequirements.actionListener]);\r\n}","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport reducers from \"./reducers\";\r\nimport sagas from \"./sagas\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\n// redux dev tools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// mount it on the Store\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n)\r\n\r\n// then run the saga\r\nsagaMiddleware.run(sagas);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n// Store\r\nimport store from \"./store\";\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './styles.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider >,\r\n  document.getElementById('wwof-order-forms-admin')\r\n);"],"sourceRoot":""}